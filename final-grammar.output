Grammar

    0 $accept: statement_list $end

    1 lamda_declaration: SIMPLE_BAR parameter_list SIMPLE_BAR LAMDA_ASSIGN compound_statement

    2 object_declaration: BRACKETS_OPEN BRACKETS_CLOSE
    3                   | BRACKETS_OPEN object_body BRACKETS_CLOSE

    4 object_body: object_property_declaration
    5            | object_property_declaration LIST_DELIMITER object_body

    6 object_property_declaration: IDENTIFIER COLONS expression

    7 array_declaration: ARRAY_OPEN ARRAY_CLOSE
    8                  | ARRAY_OPEN array_values_list ARRAY_CLOSE

    9 primary_expression: IDENTIFIER
   10                   | CONSTANT
   11                   | THIS
   12                   | lamda_declaration
   13                   | STRING_LITERAL
   14                   | array_declaration
   15                   | PARENS_OPEN expression PARENS_CLOSE

   16 postfix_expression: primary_expression
   17                   | postfix_expression ARRAY_OPEN expression ARRAY_CLOSE
   18                   | postfix_expression PARENS_OPEN PARENS_CLOSE
   19                   | postfix_expression PARENS_OPEN argument_expression_list PARENS_CLOSE
   20                   | postfix_expression OBJECT_ACCESSOR IDENTIFIER
   21                   | postfix_expression INC_OP
   22                   | postfix_expression DEC_OP

   23 array_values_list: assignment_expression
   24                  | argument_expression_list LIST_DELIMITER assignment_expression

   25 argument_expression_list: assignment_expression
   26                         | PLACEHOLDER
   27                         | argument_expression_list LIST_DELIMITER assignment_expression

   28 unary_expression: postfix_expression
   29                 | INC_OP unary_expression
   30                 | DEC_OP unary_expression

   31 multiplicative_expression: unary_expression
   32                          | multiplicative_expression PROD unary_expression
   33                          | multiplicative_expression COCIENT unary_expression
   34                          | multiplicative_expression MOD unary_expression

   35 additive_expression: multiplicative_expression
   36                    | additive_expression PLUS multiplicative_expression
   37                    | additive_expression MINUS multiplicative_expression

   38 shift_expression: additive_expression
   39                 | shift_expression LEFT_OP additive_expression
   40                 | shift_expression RIGHT_OP additive_expression

   41 relational_expression: shift_expression
   42                      | relational_expression LESS shift_expression
   43                      | relational_expression GREATER shift_expression
   44                      | relational_expression LE_OP shift_expression
   45                      | relational_expression GE_OP shift_expression

   46 equality_expression: relational_expression
   47                    | equality_expression EQ_OP relational_expression
   48                    | equality_expression NE_OP relational_expression

   49 logical_and_expression: equality_expression
   50                       | logical_and_expression AND_OP equality_expression

   51 logical_or_expression: logical_and_expression
   52                      | logical_or_expression OR_OP logical_and_expression

   53 conditional_expression: logical_or_expression
   54                       | logical_or_expression THEN expression COLONS conditional_expression

   55 assignment_expression: conditional_expression
   56                      | unary_expression assignment_operator assignment_expression
   57                      | unary_expression REG_ASSIGN object_declaration

   58 assignment_operator: REG_ASSIGN
   59                    | MUL_ASSIGN
   60                    | DIV_ASSIGN
   61                    | MOD_ASSIGN
   62                    | ADD_ASSIGN
   63                    | SUB_ASSIGN
   64                    | LEFT_ASSIGN
   65                    | RIGHT_ASSIGN
   66                    | AND_ASSIGN
   67                    | XOR_ASSIGN
   68                    | OR_ASSIGN

   69 expression: assignment_expression

   70 constant_expression: conditional_expression

   71 parameter_list: IDENTIFIER
   72               | parameter_list LIST_DELIMITER IDENTIFIER

   73 statement: labeled_statement
   74          | compound_statement
   75          | expression_statement
   76          | selection_statement
   77          | iteration_statement
   78          | jump_statement

   79 labeled_statement: CASE constant_expression COLONS statement
   80                  | DEFAULT COLONS statement

   81 compound_statement: BRACKETS_OPEN BRACKETS_CLOSE
   82                   | BRACKETS_OPEN statement_list BRACKETS_CLOSE

   83 statement_list: statement
   84               | statement_list statement

   85 expression_statement: ENDMARKER
   86                     | expression ENDMARKER

   87 selection_statement: IF PARENS_OPEN expression PARENS_CLOSE compound_statement
   88                    | IF PARENS_OPEN expression PARENS_CLOSE compound_statement ELSE compound_statement
   89                    | SWITCH PARENS_OPEN expression PARENS_CLOSE compound_statement

   90 iteration_statement: WHILE PARENS_OPEN expression PARENS_CLOSE compound_statement
   91                    | DO compound_statement WHILE PARENS_OPEN expression PARENS_CLOSE ENDMARKER
   92                    | FOR PARENS_OPEN expression_statement expression_statement PARENS_CLOSE compound_statement
   93                    | FOR PARENS_OPEN expression_statement expression_statement expression PARENS_CLOSE compound_statement

   94 jump_statement: RETURN ENDMARKER
   95               | RETURN expression ENDMARKER


Terminals, with rules where they appear

$end (0) 0
error (256)
IDENTIFIER (258) 6 9 20 71 72
CONSTANT (259) 10
STRING_LITERAL (260) 13
INC_OP (261) 21 29
DEC_OP (262) 22 30
LEFT_OP (263) 39
RIGHT_OP (264) 40
LE_OP (265) 44
GE_OP (266) 45
EQ_OP (267) 47
NE_OP (268) 48
AND_OP (269) 50
OR_OP (270) 52
MUL_ASSIGN (271) 59
DIV_ASSIGN (272) 60
MOD_ASSIGN (273) 61
ADD_ASSIGN (274) 62
SUB_ASSIGN (275) 63
LEFT_ASSIGN (276) 64
RIGHT_ASSIGN (277) 65
AND_ASSIGN (278) 66
REG_ASSIGN (279) 57 58
XOR_ASSIGN (280) 67
OR_ASSIGN (281) 68
THIS (282) 11
ENDMARKER (283) 85 86 91 94 95
LAMDA_ASSIGN (284) 1
PLACEHOLDER (285) 26
PARENS_OPEN (286) 15 18 19 87 88 89 90 91 92 93
PARENS_CLOSE (287) 15 18 19 87 88 89 90 91 92 93
BRACKETS_OPEN (288) 2 3 81 82
BRACKETS_CLOSE (289) 2 3 81 82
ARRAY_OPEN (290) 7 8 17
ARRAY_CLOSE (291) 7 8 17
SIMPLE_BAR (292) 1
LIST_DELIMITER (293) 5 24 27 72
COLONS (294) 6 54 79 80
PROD (295) 32
MOD (296) 34
COCIENT (297) 33
PLUS (298) 36
MINUS (299) 37
LESS (300) 42
GREATER (301) 43
THEN (302) 54
OBJECT_ACCESSOR (303) 20
CASE (304) 79
DEFAULT (305) 80
IF (306) 87 88
ELSE (307) 88
SWITCH (308) 89
WHILE (309) 90 91
DO (310) 91
FOR (311) 92 93
RETURN (312) 94 95


Nonterminals, with rules where they appear

$accept (58)
    on left: 0
lamda_declaration (59)
    on left: 1, on right: 12
object_declaration (60)
    on left: 2 3, on right: 57
object_body (61)
    on left: 4 5, on right: 3 5
object_property_declaration (62)
    on left: 6, on right: 4 5
array_declaration (63)
    on left: 7 8, on right: 14
primary_expression (64)
    on left: 9 10 11 12 13 14 15, on right: 16
postfix_expression (65)
    on left: 16 17 18 19 20 21 22, on right: 17 18 19 20 21 22 28
array_values_list (66)
    on left: 23 24, on right: 8
argument_expression_list (67)
    on left: 25 26 27, on right: 19 24 27
unary_expression (68)
    on left: 28 29 30, on right: 29 30 31 32 33 34 56 57
multiplicative_expression (69)
    on left: 31 32 33 34, on right: 32 33 34 35 36 37
additive_expression (70)
    on left: 35 36 37, on right: 36 37 38 39 40
shift_expression (71)
    on left: 38 39 40, on right: 39 40 41 42 43 44 45
relational_expression (72)
    on left: 41 42 43 44 45, on right: 42 43 44 45 46 47 48
equality_expression (73)
    on left: 46 47 48, on right: 47 48 49 50
logical_and_expression (74)
    on left: 49 50, on right: 50 51 52
logical_or_expression (75)
    on left: 51 52, on right: 52 53 54
conditional_expression (76)
    on left: 53 54, on right: 54 55 70
assignment_expression (77)
    on left: 55 56 57, on right: 23 24 25 27 56 69
assignment_operator (78)
    on left: 58 59 60 61 62 63 64 65 66 67 68, on right: 56
expression (79)
    on left: 69, on right: 6 15 17 54 86 87 88 89 90 91 93 95
constant_expression (80)
    on left: 70, on right: 79
parameter_list (81)
    on left: 71 72, on right: 1 72
statement (82)
    on left: 73 74 75 76 77 78, on right: 79 80 83 84
labeled_statement (83)
    on left: 79 80, on right: 73
compound_statement (84)
    on left: 81 82, on right: 1 74 87 88 89 90 91 92 93
statement_list (85)
    on left: 83 84, on right: 0 82 84
expression_statement (86)
    on left: 85 86, on right: 75 92 93
selection_statement (87)
    on left: 87 88 89, on right: 76
iteration_statement (88)
    on left: 90 91 92 93, on right: 77
jump_statement (89)
    on left: 94 95, on right: 78


state 0

    0 $accept: . statement_list $end

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    BRACKETS_OPEN   shift, and go to state 9
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11
    CASE            shift, and go to state 12
    DEFAULT         shift, and go to state 13
    IF              shift, and go to state 14
    SWITCH          shift, and go to state 15
    WHILE           shift, and go to state 16
    DO              shift, and go to state 17
    FOR             shift, and go to state 18
    RETURN          shift, and go to state 19

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    statement                  go to state 35
    labeled_statement          go to state 36
    compound_statement         go to state 37
    statement_list             go to state 38
    expression_statement       go to state 39
    selection_statement        go to state 40
    iteration_statement        go to state 41
    jump_statement             go to state 42


state 1

    9 primary_expression: IDENTIFIER .

    $default  reduce using rule 9 (primary_expression)


state 2

   10 primary_expression: CONSTANT .

    $default  reduce using rule 10 (primary_expression)


state 3

   13 primary_expression: STRING_LITERAL .

    $default  reduce using rule 13 (primary_expression)


state 4

   29 unary_expression: INC_OP . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration   go to state 20
    array_declaration   go to state 21
    primary_expression  go to state 22
    postfix_expression  go to state 23
    unary_expression    go to state 43


state 5

   30 unary_expression: DEC_OP . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration   go to state 20
    array_declaration   go to state 21
    primary_expression  go to state 22
    postfix_expression  go to state 23
    unary_expression    go to state 44


state 6

   11 primary_expression: THIS .

    $default  reduce using rule 11 (primary_expression)


state 7

   85 expression_statement: ENDMARKER .

    $default  reduce using rule 85 (expression_statement)


state 8

   15 primary_expression: PARENS_OPEN . expression PARENS_CLOSE

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 45


state 9

   81 compound_statement: BRACKETS_OPEN . BRACKETS_CLOSE
   82                   | BRACKETS_OPEN . statement_list BRACKETS_CLOSE

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    BRACKETS_OPEN   shift, and go to state 9
    BRACKETS_CLOSE  shift, and go to state 46
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11
    CASE            shift, and go to state 12
    DEFAULT         shift, and go to state 13
    IF              shift, and go to state 14
    SWITCH          shift, and go to state 15
    WHILE           shift, and go to state 16
    DO              shift, and go to state 17
    FOR             shift, and go to state 18
    RETURN          shift, and go to state 19

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    statement                  go to state 35
    labeled_statement          go to state 36
    compound_statement         go to state 37
    statement_list             go to state 47
    expression_statement       go to state 39
    selection_statement        go to state 40
    iteration_statement        go to state 41
    jump_statement             go to state 42


state 10

    7 array_declaration: ARRAY_OPEN . ARRAY_CLOSE
    8                  | ARRAY_OPEN . array_values_list ARRAY_CLOSE

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PLACEHOLDER     shift, and go to state 48
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    ARRAY_CLOSE     shift, and go to state 49
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    array_values_list          go to state 50
    argument_expression_list   go to state 51
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 52


state 11

    1 lamda_declaration: SIMPLE_BAR . parameter_list SIMPLE_BAR LAMDA_ASSIGN compound_statement

    IDENTIFIER  shift, and go to state 53

    parameter_list  go to state 54


state 12

   79 labeled_statement: CASE . constant_expression COLONS statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 56
    constant_expression        go to state 57


state 13

   80 labeled_statement: DEFAULT . COLONS statement

    COLONS  shift, and go to state 58


state 14

   87 selection_statement: IF . PARENS_OPEN expression PARENS_CLOSE compound_statement
   88                    | IF . PARENS_OPEN expression PARENS_CLOSE compound_statement ELSE compound_statement

    PARENS_OPEN  shift, and go to state 59


state 15

   89 selection_statement: SWITCH . PARENS_OPEN expression PARENS_CLOSE compound_statement

    PARENS_OPEN  shift, and go to state 60


state 16

   90 iteration_statement: WHILE . PARENS_OPEN expression PARENS_CLOSE compound_statement

    PARENS_OPEN  shift, and go to state 61


state 17

   91 iteration_statement: DO . compound_statement WHILE PARENS_OPEN expression PARENS_CLOSE ENDMARKER

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 62


state 18

   92 iteration_statement: FOR . PARENS_OPEN expression_statement expression_statement PARENS_CLOSE compound_statement
   93                    | FOR . PARENS_OPEN expression_statement expression_statement expression PARENS_CLOSE compound_statement

    PARENS_OPEN  shift, and go to state 63


state 19

   94 jump_statement: RETURN . ENDMARKER
   95               | RETURN . expression ENDMARKER

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 64
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 65


state 20

   12 primary_expression: lamda_declaration .

    $default  reduce using rule 12 (primary_expression)


state 21

   14 primary_expression: array_declaration .

    $default  reduce using rule 14 (primary_expression)


state 22

   16 postfix_expression: primary_expression .

    $default  reduce using rule 16 (postfix_expression)


state 23

   17 postfix_expression: postfix_expression . ARRAY_OPEN expression ARRAY_CLOSE
   18                   | postfix_expression . PARENS_OPEN PARENS_CLOSE
   19                   | postfix_expression . PARENS_OPEN argument_expression_list PARENS_CLOSE
   20                   | postfix_expression . OBJECT_ACCESSOR IDENTIFIER
   21                   | postfix_expression . INC_OP
   22                   | postfix_expression . DEC_OP
   28 unary_expression: postfix_expression .

    INC_OP           shift, and go to state 66
    DEC_OP           shift, and go to state 67
    PARENS_OPEN      shift, and go to state 68
    ARRAY_OPEN       shift, and go to state 69
    OBJECT_ACCESSOR  shift, and go to state 70

    $default  reduce using rule 28 (unary_expression)


state 24

   31 multiplicative_expression: unary_expression .
   56 assignment_expression: unary_expression . assignment_operator assignment_expression
   57                      | unary_expression . REG_ASSIGN object_declaration

    MUL_ASSIGN    shift, and go to state 71
    DIV_ASSIGN    shift, and go to state 72
    MOD_ASSIGN    shift, and go to state 73
    ADD_ASSIGN    shift, and go to state 74
    SUB_ASSIGN    shift, and go to state 75
    LEFT_ASSIGN   shift, and go to state 76
    RIGHT_ASSIGN  shift, and go to state 77
    AND_ASSIGN    shift, and go to state 78
    REG_ASSIGN    shift, and go to state 79
    XOR_ASSIGN    shift, and go to state 80
    OR_ASSIGN     shift, and go to state 81

    $default  reduce using rule 31 (multiplicative_expression)

    assignment_operator  go to state 82


state 25

   32 multiplicative_expression: multiplicative_expression . PROD unary_expression
   33                          | multiplicative_expression . COCIENT unary_expression
   34                          | multiplicative_expression . MOD unary_expression
   35 additive_expression: multiplicative_expression .

    PROD     shift, and go to state 83
    MOD      shift, and go to state 84
    COCIENT  shift, and go to state 85

    $default  reduce using rule 35 (additive_expression)


state 26

   36 additive_expression: additive_expression . PLUS multiplicative_expression
   37                    | additive_expression . MINUS multiplicative_expression
   38 shift_expression: additive_expression .

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 38 (shift_expression)


state 27

   39 shift_expression: shift_expression . LEFT_OP additive_expression
   40                 | shift_expression . RIGHT_OP additive_expression
   41 relational_expression: shift_expression .

    LEFT_OP   shift, and go to state 88
    RIGHT_OP  shift, and go to state 89

    $default  reduce using rule 41 (relational_expression)


state 28

   42 relational_expression: relational_expression . LESS shift_expression
   43                      | relational_expression . GREATER shift_expression
   44                      | relational_expression . LE_OP shift_expression
   45                      | relational_expression . GE_OP shift_expression
   46 equality_expression: relational_expression .

    LE_OP    shift, and go to state 90
    GE_OP    shift, and go to state 91
    LESS     shift, and go to state 92
    GREATER  shift, and go to state 93

    $default  reduce using rule 46 (equality_expression)


state 29

   47 equality_expression: equality_expression . EQ_OP relational_expression
   48                    | equality_expression . NE_OP relational_expression
   49 logical_and_expression: equality_expression .

    EQ_OP  shift, and go to state 94
    NE_OP  shift, and go to state 95

    $default  reduce using rule 49 (logical_and_expression)


state 30

   50 logical_and_expression: logical_and_expression . AND_OP equality_expression
   51 logical_or_expression: logical_and_expression .

    AND_OP  shift, and go to state 96

    $default  reduce using rule 51 (logical_or_expression)


state 31

   52 logical_or_expression: logical_or_expression . OR_OP logical_and_expression
   53 conditional_expression: logical_or_expression .
   54                       | logical_or_expression . THEN expression COLONS conditional_expression

    OR_OP  shift, and go to state 97
    THEN   shift, and go to state 98

    $default  reduce using rule 53 (conditional_expression)


state 32

   55 assignment_expression: conditional_expression .

    $default  reduce using rule 55 (assignment_expression)


state 33

   69 expression: assignment_expression .

    $default  reduce using rule 69 (expression)


state 34

   86 expression_statement: expression . ENDMARKER

    ENDMARKER  shift, and go to state 99


state 35

   83 statement_list: statement .

    $default  reduce using rule 83 (statement_list)


state 36

   73 statement: labeled_statement .

    $default  reduce using rule 73 (statement)


state 37

   74 statement: compound_statement .

    $default  reduce using rule 74 (statement)


state 38

    0 $accept: statement_list . $end
   84 statement_list: statement_list . statement

    $end            shift, and go to state 100
    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    BRACKETS_OPEN   shift, and go to state 9
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11
    CASE            shift, and go to state 12
    DEFAULT         shift, and go to state 13
    IF              shift, and go to state 14
    SWITCH          shift, and go to state 15
    WHILE           shift, and go to state 16
    DO              shift, and go to state 17
    FOR             shift, and go to state 18
    RETURN          shift, and go to state 19

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    statement                  go to state 101
    labeled_statement          go to state 36
    compound_statement         go to state 37
    expression_statement       go to state 39
    selection_statement        go to state 40
    iteration_statement        go to state 41
    jump_statement             go to state 42


state 39

   75 statement: expression_statement .

    $default  reduce using rule 75 (statement)


state 40

   76 statement: selection_statement .

    $default  reduce using rule 76 (statement)


state 41

   77 statement: iteration_statement .

    $default  reduce using rule 77 (statement)


state 42

   78 statement: jump_statement .

    $default  reduce using rule 78 (statement)


state 43

   29 unary_expression: INC_OP unary_expression .

    $default  reduce using rule 29 (unary_expression)


state 44

   30 unary_expression: DEC_OP unary_expression .

    $default  reduce using rule 30 (unary_expression)


state 45

   15 primary_expression: PARENS_OPEN expression . PARENS_CLOSE

    PARENS_CLOSE  shift, and go to state 102


state 46

   81 compound_statement: BRACKETS_OPEN BRACKETS_CLOSE .

    $default  reduce using rule 81 (compound_statement)


state 47

   82 compound_statement: BRACKETS_OPEN statement_list . BRACKETS_CLOSE
   84 statement_list: statement_list . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    BRACKETS_OPEN   shift, and go to state 9
    BRACKETS_CLOSE  shift, and go to state 103
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11
    CASE            shift, and go to state 12
    DEFAULT         shift, and go to state 13
    IF              shift, and go to state 14
    SWITCH          shift, and go to state 15
    WHILE           shift, and go to state 16
    DO              shift, and go to state 17
    FOR             shift, and go to state 18
    RETURN          shift, and go to state 19

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    statement                  go to state 101
    labeled_statement          go to state 36
    compound_statement         go to state 37
    expression_statement       go to state 39
    selection_statement        go to state 40
    iteration_statement        go to state 41
    jump_statement             go to state 42


state 48

   26 argument_expression_list: PLACEHOLDER .

    $default  reduce using rule 26 (argument_expression_list)


state 49

    7 array_declaration: ARRAY_OPEN ARRAY_CLOSE .

    $default  reduce using rule 7 (array_declaration)


state 50

    8 array_declaration: ARRAY_OPEN array_values_list . ARRAY_CLOSE

    ARRAY_CLOSE  shift, and go to state 104


state 51

   24 array_values_list: argument_expression_list . LIST_DELIMITER assignment_expression
   27 argument_expression_list: argument_expression_list . LIST_DELIMITER assignment_expression

    LIST_DELIMITER  shift, and go to state 105


state 52

   23 array_values_list: assignment_expression .
   25 argument_expression_list: assignment_expression .

    LIST_DELIMITER  reduce using rule 25 (argument_expression_list)
    $default        reduce using rule 23 (array_values_list)


state 53

   71 parameter_list: IDENTIFIER .

    $default  reduce using rule 71 (parameter_list)


state 54

    1 lamda_declaration: SIMPLE_BAR parameter_list . SIMPLE_BAR LAMDA_ASSIGN compound_statement
   72 parameter_list: parameter_list . LIST_DELIMITER IDENTIFIER

    SIMPLE_BAR      shift, and go to state 106
    LIST_DELIMITER  shift, and go to state 107


state 55

   31 multiplicative_expression: unary_expression .

    $default  reduce using rule 31 (multiplicative_expression)


state 56

   70 constant_expression: conditional_expression .

    $default  reduce using rule 70 (constant_expression)


state 57

   79 labeled_statement: CASE constant_expression . COLONS statement

    COLONS  shift, and go to state 108


state 58

   80 labeled_statement: DEFAULT COLONS . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    BRACKETS_OPEN   shift, and go to state 9
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11
    CASE            shift, and go to state 12
    DEFAULT         shift, and go to state 13
    IF              shift, and go to state 14
    SWITCH          shift, and go to state 15
    WHILE           shift, and go to state 16
    DO              shift, and go to state 17
    FOR             shift, and go to state 18
    RETURN          shift, and go to state 19

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    statement                  go to state 109
    labeled_statement          go to state 36
    compound_statement         go to state 37
    expression_statement       go to state 39
    selection_statement        go to state 40
    iteration_statement        go to state 41
    jump_statement             go to state 42


state 59

   87 selection_statement: IF PARENS_OPEN . expression PARENS_CLOSE compound_statement
   88                    | IF PARENS_OPEN . expression PARENS_CLOSE compound_statement ELSE compound_statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 110


state 60

   89 selection_statement: SWITCH PARENS_OPEN . expression PARENS_CLOSE compound_statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 111


state 61

   90 iteration_statement: WHILE PARENS_OPEN . expression PARENS_CLOSE compound_statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 112


state 62

   91 iteration_statement: DO compound_statement . WHILE PARENS_OPEN expression PARENS_CLOSE ENDMARKER

    WHILE  shift, and go to state 113


state 63

   92 iteration_statement: FOR PARENS_OPEN . expression_statement expression_statement PARENS_CLOSE compound_statement
   93                    | FOR PARENS_OPEN . expression_statement expression_statement expression PARENS_CLOSE compound_statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    expression_statement       go to state 114


state 64

   94 jump_statement: RETURN ENDMARKER .

    $default  reduce using rule 94 (jump_statement)


state 65

   95 jump_statement: RETURN expression . ENDMARKER

    ENDMARKER  shift, and go to state 115


state 66

   21 postfix_expression: postfix_expression INC_OP .

    $default  reduce using rule 21 (postfix_expression)


state 67

   22 postfix_expression: postfix_expression DEC_OP .

    $default  reduce using rule 22 (postfix_expression)


state 68

   18 postfix_expression: postfix_expression PARENS_OPEN . PARENS_CLOSE
   19                   | postfix_expression PARENS_OPEN . argument_expression_list PARENS_CLOSE

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PLACEHOLDER     shift, and go to state 48
    PARENS_OPEN     shift, and go to state 8
    PARENS_CLOSE    shift, and go to state 116
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    argument_expression_list   go to state 117
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 118


state 69

   17 postfix_expression: postfix_expression ARRAY_OPEN . expression ARRAY_CLOSE

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 119


state 70

   20 postfix_expression: postfix_expression OBJECT_ACCESSOR . IDENTIFIER

    IDENTIFIER  shift, and go to state 120


state 71

   59 assignment_operator: MUL_ASSIGN .

    $default  reduce using rule 59 (assignment_operator)


state 72

   60 assignment_operator: DIV_ASSIGN .

    $default  reduce using rule 60 (assignment_operator)


state 73

   61 assignment_operator: MOD_ASSIGN .

    $default  reduce using rule 61 (assignment_operator)


state 74

   62 assignment_operator: ADD_ASSIGN .

    $default  reduce using rule 62 (assignment_operator)


state 75

   63 assignment_operator: SUB_ASSIGN .

    $default  reduce using rule 63 (assignment_operator)


state 76

   64 assignment_operator: LEFT_ASSIGN .

    $default  reduce using rule 64 (assignment_operator)


state 77

   65 assignment_operator: RIGHT_ASSIGN .

    $default  reduce using rule 65 (assignment_operator)


state 78

   66 assignment_operator: AND_ASSIGN .

    $default  reduce using rule 66 (assignment_operator)


state 79

   57 assignment_expression: unary_expression REG_ASSIGN . object_declaration
   58 assignment_operator: REG_ASSIGN .

    BRACKETS_OPEN  shift, and go to state 121

    $default  reduce using rule 58 (assignment_operator)

    object_declaration  go to state 122


state 80

   67 assignment_operator: XOR_ASSIGN .

    $default  reduce using rule 67 (assignment_operator)


state 81

   68 assignment_operator: OR_ASSIGN .

    $default  reduce using rule 68 (assignment_operator)


state 82

   56 assignment_expression: unary_expression assignment_operator . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 123


state 83

   32 multiplicative_expression: multiplicative_expression PROD . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration   go to state 20
    array_declaration   go to state 21
    primary_expression  go to state 22
    postfix_expression  go to state 23
    unary_expression    go to state 124


state 84

   34 multiplicative_expression: multiplicative_expression MOD . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration   go to state 20
    array_declaration   go to state 21
    primary_expression  go to state 22
    postfix_expression  go to state 23
    unary_expression    go to state 125


state 85

   33 multiplicative_expression: multiplicative_expression COCIENT . unary_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration   go to state 20
    array_declaration   go to state 21
    primary_expression  go to state 22
    postfix_expression  go to state 23
    unary_expression    go to state 126


state 86

   36 additive_expression: additive_expression PLUS . multiplicative_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 127


state 87

   37 additive_expression: additive_expression MINUS . multiplicative_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 128


state 88

   39 shift_expression: shift_expression LEFT_OP . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 129


state 89

   40 shift_expression: shift_expression RIGHT_OP . additive_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 130


state 90

   44 relational_expression: relational_expression LE_OP . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 131


state 91

   45 relational_expression: relational_expression GE_OP . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 132


state 92

   42 relational_expression: relational_expression LESS . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 133


state 93

   43 relational_expression: relational_expression GREATER . shift_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 134


state 94

   47 equality_expression: equality_expression EQ_OP . relational_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 135


state 95

   48 equality_expression: equality_expression NE_OP . relational_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 136


state 96

   50 logical_and_expression: logical_and_expression AND_OP . equality_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 137


state 97

   52 logical_or_expression: logical_or_expression OR_OP . logical_and_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 138


state 98

   54 conditional_expression: logical_or_expression THEN . expression COLONS conditional_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 139


state 99

   86 expression_statement: expression ENDMARKER .

    $default  reduce using rule 86 (expression_statement)


state 100

    0 $accept: statement_list $end .

    $default  accept


state 101

   84 statement_list: statement_list statement .

    $default  reduce using rule 84 (statement_list)


state 102

   15 primary_expression: PARENS_OPEN expression PARENS_CLOSE .

    $default  reduce using rule 15 (primary_expression)


state 103

   82 compound_statement: BRACKETS_OPEN statement_list BRACKETS_CLOSE .

    $default  reduce using rule 82 (compound_statement)


state 104

    8 array_declaration: ARRAY_OPEN array_values_list ARRAY_CLOSE .

    $default  reduce using rule 8 (array_declaration)


state 105

   24 array_values_list: argument_expression_list LIST_DELIMITER . assignment_expression
   27 argument_expression_list: argument_expression_list LIST_DELIMITER . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 140


state 106

    1 lamda_declaration: SIMPLE_BAR parameter_list SIMPLE_BAR . LAMDA_ASSIGN compound_statement

    LAMDA_ASSIGN  shift, and go to state 141


state 107

   72 parameter_list: parameter_list LIST_DELIMITER . IDENTIFIER

    IDENTIFIER  shift, and go to state 142


state 108

   79 labeled_statement: CASE constant_expression COLONS . statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    BRACKETS_OPEN   shift, and go to state 9
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11
    CASE            shift, and go to state 12
    DEFAULT         shift, and go to state 13
    IF              shift, and go to state 14
    SWITCH          shift, and go to state 15
    WHILE           shift, and go to state 16
    DO              shift, and go to state 17
    FOR             shift, and go to state 18
    RETURN          shift, and go to state 19

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    statement                  go to state 143
    labeled_statement          go to state 36
    compound_statement         go to state 37
    expression_statement       go to state 39
    selection_statement        go to state 40
    iteration_statement        go to state 41
    jump_statement             go to state 42


state 109

   80 labeled_statement: DEFAULT COLONS statement .

    $default  reduce using rule 80 (labeled_statement)


state 110

   87 selection_statement: IF PARENS_OPEN expression . PARENS_CLOSE compound_statement
   88                    | IF PARENS_OPEN expression . PARENS_CLOSE compound_statement ELSE compound_statement

    PARENS_CLOSE  shift, and go to state 144


state 111

   89 selection_statement: SWITCH PARENS_OPEN expression . PARENS_CLOSE compound_statement

    PARENS_CLOSE  shift, and go to state 145


state 112

   90 iteration_statement: WHILE PARENS_OPEN expression . PARENS_CLOSE compound_statement

    PARENS_CLOSE  shift, and go to state 146


state 113

   91 iteration_statement: DO compound_statement WHILE . PARENS_OPEN expression PARENS_CLOSE ENDMARKER

    PARENS_OPEN  shift, and go to state 147


state 114

   92 iteration_statement: FOR PARENS_OPEN expression_statement . expression_statement PARENS_CLOSE compound_statement
   93                    | FOR PARENS_OPEN expression_statement . expression_statement expression PARENS_CLOSE compound_statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    ENDMARKER       shift, and go to state 7
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 34
    expression_statement       go to state 148


state 115

   95 jump_statement: RETURN expression ENDMARKER .

    $default  reduce using rule 95 (jump_statement)


state 116

   18 postfix_expression: postfix_expression PARENS_OPEN PARENS_CLOSE .

    $default  reduce using rule 18 (postfix_expression)


state 117

   19 postfix_expression: postfix_expression PARENS_OPEN argument_expression_list . PARENS_CLOSE
   27 argument_expression_list: argument_expression_list . LIST_DELIMITER assignment_expression

    PARENS_CLOSE    shift, and go to state 149
    LIST_DELIMITER  shift, and go to state 150


state 118

   25 argument_expression_list: assignment_expression .

    $default  reduce using rule 25 (argument_expression_list)


state 119

   17 postfix_expression: postfix_expression ARRAY_OPEN expression . ARRAY_CLOSE

    ARRAY_CLOSE  shift, and go to state 151


state 120

   20 postfix_expression: postfix_expression OBJECT_ACCESSOR IDENTIFIER .

    $default  reduce using rule 20 (postfix_expression)


state 121

    2 object_declaration: BRACKETS_OPEN . BRACKETS_CLOSE
    3                   | BRACKETS_OPEN . object_body BRACKETS_CLOSE

    IDENTIFIER      shift, and go to state 152
    BRACKETS_CLOSE  shift, and go to state 153

    object_body                  go to state 154
    object_property_declaration  go to state 155


state 122

   57 assignment_expression: unary_expression REG_ASSIGN object_declaration .

    $default  reduce using rule 57 (assignment_expression)


state 123

   56 assignment_expression: unary_expression assignment_operator assignment_expression .

    $default  reduce using rule 56 (assignment_expression)


state 124

   32 multiplicative_expression: multiplicative_expression PROD unary_expression .

    $default  reduce using rule 32 (multiplicative_expression)


state 125

   34 multiplicative_expression: multiplicative_expression MOD unary_expression .

    $default  reduce using rule 34 (multiplicative_expression)


state 126

   33 multiplicative_expression: multiplicative_expression COCIENT unary_expression .

    $default  reduce using rule 33 (multiplicative_expression)


state 127

   32 multiplicative_expression: multiplicative_expression . PROD unary_expression
   33                          | multiplicative_expression . COCIENT unary_expression
   34                          | multiplicative_expression . MOD unary_expression
   36 additive_expression: additive_expression PLUS multiplicative_expression .

    PROD     shift, and go to state 83
    MOD      shift, and go to state 84
    COCIENT  shift, and go to state 85

    $default  reduce using rule 36 (additive_expression)


state 128

   32 multiplicative_expression: multiplicative_expression . PROD unary_expression
   33                          | multiplicative_expression . COCIENT unary_expression
   34                          | multiplicative_expression . MOD unary_expression
   37 additive_expression: additive_expression MINUS multiplicative_expression .

    PROD     shift, and go to state 83
    MOD      shift, and go to state 84
    COCIENT  shift, and go to state 85

    $default  reduce using rule 37 (additive_expression)


state 129

   36 additive_expression: additive_expression . PLUS multiplicative_expression
   37                    | additive_expression . MINUS multiplicative_expression
   39 shift_expression: shift_expression LEFT_OP additive_expression .

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 39 (shift_expression)


state 130

   36 additive_expression: additive_expression . PLUS multiplicative_expression
   37                    | additive_expression . MINUS multiplicative_expression
   40 shift_expression: shift_expression RIGHT_OP additive_expression .

    PLUS   shift, and go to state 86
    MINUS  shift, and go to state 87

    $default  reduce using rule 40 (shift_expression)


state 131

   39 shift_expression: shift_expression . LEFT_OP additive_expression
   40                 | shift_expression . RIGHT_OP additive_expression
   44 relational_expression: relational_expression LE_OP shift_expression .

    LEFT_OP   shift, and go to state 88
    RIGHT_OP  shift, and go to state 89

    $default  reduce using rule 44 (relational_expression)


state 132

   39 shift_expression: shift_expression . LEFT_OP additive_expression
   40                 | shift_expression . RIGHT_OP additive_expression
   45 relational_expression: relational_expression GE_OP shift_expression .

    LEFT_OP   shift, and go to state 88
    RIGHT_OP  shift, and go to state 89

    $default  reduce using rule 45 (relational_expression)


state 133

   39 shift_expression: shift_expression . LEFT_OP additive_expression
   40                 | shift_expression . RIGHT_OP additive_expression
   42 relational_expression: relational_expression LESS shift_expression .

    LEFT_OP   shift, and go to state 88
    RIGHT_OP  shift, and go to state 89

    $default  reduce using rule 42 (relational_expression)


state 134

   39 shift_expression: shift_expression . LEFT_OP additive_expression
   40                 | shift_expression . RIGHT_OP additive_expression
   43 relational_expression: relational_expression GREATER shift_expression .

    LEFT_OP   shift, and go to state 88
    RIGHT_OP  shift, and go to state 89

    $default  reduce using rule 43 (relational_expression)


state 135

   42 relational_expression: relational_expression . LESS shift_expression
   43                      | relational_expression . GREATER shift_expression
   44                      | relational_expression . LE_OP shift_expression
   45                      | relational_expression . GE_OP shift_expression
   47 equality_expression: equality_expression EQ_OP relational_expression .

    LE_OP    shift, and go to state 90
    GE_OP    shift, and go to state 91
    LESS     shift, and go to state 92
    GREATER  shift, and go to state 93

    $default  reduce using rule 47 (equality_expression)


state 136

   42 relational_expression: relational_expression . LESS shift_expression
   43                      | relational_expression . GREATER shift_expression
   44                      | relational_expression . LE_OP shift_expression
   45                      | relational_expression . GE_OP shift_expression
   48 equality_expression: equality_expression NE_OP relational_expression .

    LE_OP    shift, and go to state 90
    GE_OP    shift, and go to state 91
    LESS     shift, and go to state 92
    GREATER  shift, and go to state 93

    $default  reduce using rule 48 (equality_expression)


state 137

   47 equality_expression: equality_expression . EQ_OP relational_expression
   48                    | equality_expression . NE_OP relational_expression
   50 logical_and_expression: logical_and_expression AND_OP equality_expression .

    EQ_OP  shift, and go to state 94
    NE_OP  shift, and go to state 95

    $default  reduce using rule 50 (logical_and_expression)


state 138

   50 logical_and_expression: logical_and_expression . AND_OP equality_expression
   52 logical_or_expression: logical_or_expression OR_OP logical_and_expression .

    AND_OP  shift, and go to state 96

    $default  reduce using rule 52 (logical_or_expression)


state 139

   54 conditional_expression: logical_or_expression THEN expression . COLONS conditional_expression

    COLONS  shift, and go to state 156


state 140

   24 array_values_list: argument_expression_list LIST_DELIMITER assignment_expression .
   27 argument_expression_list: argument_expression_list LIST_DELIMITER assignment_expression .

    LIST_DELIMITER  reduce using rule 27 (argument_expression_list)
    $default        reduce using rule 24 (array_values_list)


state 141

    1 lamda_declaration: SIMPLE_BAR parameter_list SIMPLE_BAR LAMDA_ASSIGN . compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 157


state 142

   72 parameter_list: parameter_list LIST_DELIMITER IDENTIFIER .

    $default  reduce using rule 72 (parameter_list)


state 143

   79 labeled_statement: CASE constant_expression COLONS statement .

    $default  reduce using rule 79 (labeled_statement)


state 144

   87 selection_statement: IF PARENS_OPEN expression PARENS_CLOSE . compound_statement
   88                    | IF PARENS_OPEN expression PARENS_CLOSE . compound_statement ELSE compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 158


state 145

   89 selection_statement: SWITCH PARENS_OPEN expression PARENS_CLOSE . compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 159


state 146

   90 iteration_statement: WHILE PARENS_OPEN expression PARENS_CLOSE . compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 160


state 147

   91 iteration_statement: DO compound_statement WHILE PARENS_OPEN . expression PARENS_CLOSE ENDMARKER

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 161


state 148

   92 iteration_statement: FOR PARENS_OPEN expression_statement expression_statement . PARENS_CLOSE compound_statement
   93                    | FOR PARENS_OPEN expression_statement expression_statement . expression PARENS_CLOSE compound_statement

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    PARENS_CLOSE    shift, and go to state 162
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 163


state 149

   19 postfix_expression: postfix_expression PARENS_OPEN argument_expression_list PARENS_CLOSE .

    $default  reduce using rule 19 (postfix_expression)


state 150

   27 argument_expression_list: argument_expression_list LIST_DELIMITER . assignment_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 164


state 151

   17 postfix_expression: postfix_expression ARRAY_OPEN expression ARRAY_CLOSE .

    $default  reduce using rule 17 (postfix_expression)


state 152

    6 object_property_declaration: IDENTIFIER . COLONS expression

    COLONS  shift, and go to state 165


state 153

    2 object_declaration: BRACKETS_OPEN BRACKETS_CLOSE .

    $default  reduce using rule 2 (object_declaration)


state 154

    3 object_declaration: BRACKETS_OPEN object_body . BRACKETS_CLOSE

    BRACKETS_CLOSE  shift, and go to state 166


state 155

    4 object_body: object_property_declaration .
    5            | object_property_declaration . LIST_DELIMITER object_body

    LIST_DELIMITER  shift, and go to state 167

    $default  reduce using rule 4 (object_body)


state 156

   54 conditional_expression: logical_or_expression THEN expression COLONS . conditional_expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 55
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 168


state 157

    1 lamda_declaration: SIMPLE_BAR parameter_list SIMPLE_BAR LAMDA_ASSIGN compound_statement .

    $default  reduce using rule 1 (lamda_declaration)


state 158

   87 selection_statement: IF PARENS_OPEN expression PARENS_CLOSE compound_statement .
   88                    | IF PARENS_OPEN expression PARENS_CLOSE compound_statement . ELSE compound_statement

    ELSE  shift, and go to state 169

    $default  reduce using rule 87 (selection_statement)


state 159

   89 selection_statement: SWITCH PARENS_OPEN expression PARENS_CLOSE compound_statement .

    $default  reduce using rule 89 (selection_statement)


state 160

   90 iteration_statement: WHILE PARENS_OPEN expression PARENS_CLOSE compound_statement .

    $default  reduce using rule 90 (iteration_statement)


state 161

   91 iteration_statement: DO compound_statement WHILE PARENS_OPEN expression . PARENS_CLOSE ENDMARKER

    PARENS_CLOSE  shift, and go to state 170


state 162

   92 iteration_statement: FOR PARENS_OPEN expression_statement expression_statement PARENS_CLOSE . compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 171


state 163

   93 iteration_statement: FOR PARENS_OPEN expression_statement expression_statement expression . PARENS_CLOSE compound_statement

    PARENS_CLOSE  shift, and go to state 172


state 164

   27 argument_expression_list: argument_expression_list LIST_DELIMITER assignment_expression .

    $default  reduce using rule 27 (argument_expression_list)


state 165

    6 object_property_declaration: IDENTIFIER COLONS . expression

    IDENTIFIER      shift, and go to state 1
    CONSTANT        shift, and go to state 2
    STRING_LITERAL  shift, and go to state 3
    INC_OP          shift, and go to state 4
    DEC_OP          shift, and go to state 5
    THIS            shift, and go to state 6
    PARENS_OPEN     shift, and go to state 8
    ARRAY_OPEN      shift, and go to state 10
    SIMPLE_BAR      shift, and go to state 11

    lamda_declaration          go to state 20
    array_declaration          go to state 21
    primary_expression         go to state 22
    postfix_expression         go to state 23
    unary_expression           go to state 24
    multiplicative_expression  go to state 25
    additive_expression        go to state 26
    shift_expression           go to state 27
    relational_expression      go to state 28
    equality_expression        go to state 29
    logical_and_expression     go to state 30
    logical_or_expression      go to state 31
    conditional_expression     go to state 32
    assignment_expression      go to state 33
    expression                 go to state 173


state 166

    3 object_declaration: BRACKETS_OPEN object_body BRACKETS_CLOSE .

    $default  reduce using rule 3 (object_declaration)


state 167

    5 object_body: object_property_declaration LIST_DELIMITER . object_body

    IDENTIFIER  shift, and go to state 152

    object_body                  go to state 174
    object_property_declaration  go to state 155


state 168

   54 conditional_expression: logical_or_expression THEN expression COLONS conditional_expression .

    $default  reduce using rule 54 (conditional_expression)


state 169

   88 selection_statement: IF PARENS_OPEN expression PARENS_CLOSE compound_statement ELSE . compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 175


state 170

   91 iteration_statement: DO compound_statement WHILE PARENS_OPEN expression PARENS_CLOSE . ENDMARKER

    ENDMARKER  shift, and go to state 176


state 171

   92 iteration_statement: FOR PARENS_OPEN expression_statement expression_statement PARENS_CLOSE compound_statement .

    $default  reduce using rule 92 (iteration_statement)


state 172

   93 iteration_statement: FOR PARENS_OPEN expression_statement expression_statement expression PARENS_CLOSE . compound_statement

    BRACKETS_OPEN  shift, and go to state 9

    compound_statement  go to state 177


state 173

    6 object_property_declaration: IDENTIFIER COLONS expression .

    $default  reduce using rule 6 (object_property_declaration)


state 174

    5 object_body: object_property_declaration LIST_DELIMITER object_body .

    $default  reduce using rule 5 (object_body)


state 175

   88 selection_statement: IF PARENS_OPEN expression PARENS_CLOSE compound_statement ELSE compound_statement .

    $default  reduce using rule 88 (selection_statement)


state 176

   91 iteration_statement: DO compound_statement WHILE PARENS_OPEN expression PARENS_CLOSE ENDMARKER .

    $default  reduce using rule 91 (iteration_statement)


state 177

   93 iteration_statement: FOR PARENS_OPEN expression_statement expression_statement expression PARENS_CLOSE compound_statement .

    $default  reduce using rule 93 (iteration_statement)
