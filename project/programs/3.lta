(: Fibonacci with memoization and `this` reference implemented in LTA language :)

fibonacci = |num, memo| => {
  memo = memo || {};

  if (memo[num]) { return memo[num] }
  if (num <= 1) { return 1 }

  return memo[num] = this(num - 1, memo) + this(num - 2, memo)

}

fibonacci(3) (: 2 :)
fibonacci(4) (: 3 :)
fibonacci(5) (: 5 :)
