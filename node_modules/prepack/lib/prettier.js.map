{"version":3,"sources":["../scripts/prettier.js"],"names":["chalk","require","glob","path","execFileSync","mode","process","argv","shouldWrite","onlyChanged","isWindows","platform","prettier","prettierCmd","resolve","__dirname","defaultOptions","config","default","patterns","scripts","exec","command","args","options","console","log","concat","join","toString","mergeBase","trim","changedFiles","Set","match","Object","keys","forEach","key","ignore","globPattern","length","files","sync","filter","has","f","map","k","push","result","e","output","red","dim","reset","exit"],"mappings":";;;;AAAA;;;;;;;;;AAWA;AACA;;AAEA,IAAMA,QAAQC,QAAQ,OAAR,CAAd;AACA,IAAMC,OAAOD,QAAQ,MAAR,CAAb;AACA,IAAME,OAAOF,QAAQ,MAAR,CAAb;AACA,IAAMG,eAAeH,QAAQ,eAAR,EAAyBG,YAA9C;;AAEA,IAAMC,OAAOC,QAAQC,IAAR,CAAa,CAAb,KAAmB,OAAhC;AACA,IAAMC,cAAcH,SAAS,OAAT,IAAoBA,SAAS,eAAjD;AACA,IAAMI,cAAcJ,SAAS,eAAT,IAA4BA,SAAS,eAAzD;;AAEA,IAAMK,YAAYJ,QAAQK,QAAR,KAAqB,OAAvC;AACA,IAAMC,WAAWF,YAAY,cAAZ,GAA6B,UAA9C;AACA,IAAMG,cAAcV,KAAKW,OAAL,CAAaC,SAAb,EAAwB,0BAA0BH,QAAlD,CAApB;AACA,IAAMI,iBAAiB;AACrB,oBAAkB,KADG;AAErB,iBAAe;AAFM,CAAvB;AAIA,IAAMC,SAAS;AACbC,WAAS;AACPC,cAAU,CAAC,aAAD;AADH,GADI;AAIbC,WAAS;AACPD,cAAU,CAAC,iBAAD;AADH;AAJI,CAAf;;AASA,SAASE,IAAT,CAAcC,OAAd,EAAuBC,IAAvB,EAA2C;AAAA,MAAdC,OAAc,uEAAJ,EAAI;;AACzCC,UAAQC,GAAR,CAAY,OAAO,CAACJ,OAAD,EAAUK,MAAV,CAAiBJ,IAAjB,EAAuBK,IAAvB,CAA4B,GAA5B,CAAnB;AACA,SAAOxB,aAAakB,OAAb,EAAsBC,IAAtB,EAA4BC,OAA5B,EAAqCK,QAArC,EAAP;AACD;;AAED,IAAMC,YAAYT,KAAK,KAAL,EAAY,CAAC,YAAD,EAAe,MAAf,EAAuB,QAAvB,CAAZ,EAA8CU,IAA9C,EAAlB;AACA,IAAMC,eAAe,IAAIC,GAAJ,CACnBZ,KAAK,KAAL,EAAY,CAAC,MAAD,EAAS,IAAT,EAAe,aAAf,EAA8B,uBAA9B,EAAuDS,SAAvD,CAAZ,EAA+EI,KAA/E,CAAqF,SAArF,CADmB,CAArB;;AAIAC,OAAOC,IAAP,CAAYnB,MAAZ,EAAoBoB,OAApB,CAA4B,eAAO;AACjC,MAAMlB,WAAWF,OAAOqB,GAAP,EAAYnB,QAA7B;AACA,MAAMK,UAAUP,OAAOqB,GAAP,EAAYd,OAA5B;AACA,MAAMe,SAAStB,OAAOqB,GAAP,EAAYC,MAA3B;;AAEA,MAAMC,cAAcrB,SAASsB,MAAT,GAAkB,CAAlB,SAA0BtB,SAASS,IAAT,CAAc,GAAd,CAA1B,cAAqDT,SAASS,IAAT,CAAc,GAAd,CAAzE;AACA,MAAMc,QAAQxC,KAAKyC,IAAL,CAAUH,WAAV,EAAuB,EAAED,cAAF,EAAvB,EAAmCK,MAAnC,CAA0C;AAAA,WAAK,CAACnC,WAAD,IAAgBuB,aAAaa,GAAb,CAAiBC,CAAjB,CAArB;AAAA,GAA1C,CAAd;;AAEA,MAAI,CAACJ,MAAMD,MAAX,EAAmB;AACjB;AACD;;AAED,MAAMlB,OAAOY,OAAOC,IAAP,CAAYpB,cAAZ,EAA4B+B,GAA5B,CAAgC;AAAA,kBAAUC,CAAV,UAAgBxB,WAAWA,QAAQwB,CAAR,CAAZ,IAA2BhC,eAAegC,CAAf,CAA1C;AAAA,GAAhC,CAAb;AACAzB,OAAK0B,IAAL,SAAezC,cAAc,OAAd,GAAwB,GAAvC;;AAEA,MAAI0C,eAAJ;AACA,MAAI;AACFA,aAAS7B,KAAKR,WAAL,+BAAsBU,IAAtB,sBAA+BmB,KAA/B,GAAT;AACD,GAFD,CAEE,OAAOS,CAAP,EAAU;AACV,QAAI,CAAC3C,WAAL,EAAkB;AAChBiB,cAAQC,GAAR,CACE,OACEyB,EAAEC,MAAF,CAAS,CAAT,CADF,GAEE,IAFF,GAGEpD,MAAMqD,GAAN,iEAHF,GAIErD,MAAMsD,GAAN,mBAJF,GAKEtD,MAAMuD,KAAN,CAAY,eAAZ,CALF,GAMEvD,MAAMsD,GAAN,0DANF,OADF;AAUAhD,cAAQkD,IAAR,CAAa,CAAb;AACD;AACD,UAAML,CAAN;AACD;AACD1B,UAAQC,GAAR,CAAY,OAAOwB,MAAnB;AACD,CAnCD","file":"prettier.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\n// Mostly taken from a script in React\n// https://github.com/facebook/react/blob/master/scripts/prettier/index.js\n\nconst chalk = require(\"chalk\");\nconst glob = require(\"glob\");\nconst path = require(\"path\");\nconst execFileSync = require(\"child_process\").execFileSync;\n\nconst mode = process.argv[2] || \"check\";\nconst shouldWrite = mode === \"write\" || mode === \"write-changed\";\nconst onlyChanged = mode === \"check-changed\" || mode === \"write-changed\";\n\nconst isWindows = process.platform === \"win32\";\nconst prettier = isWindows ? \"prettier.cmd\" : \"prettier\";\nconst prettierCmd = path.resolve(__dirname, \"../node_modules/.bin/\" + prettier);\nconst defaultOptions = {\n  \"trailing-comma\": \"es5\",\n  \"print-width\": 120,\n};\nconst config = {\n  default: {\n    patterns: [\"src/**/*.js\"],\n  },\n  scripts: {\n    patterns: [\"scripts/**/*.js\"],\n  },\n};\n\nfunction exec(command, args, options = {}) {\n  console.log(\"> \" + [command].concat(args).join(\" \"));\n  return execFileSync(command, args, options).toString();\n}\n\nconst mergeBase = exec(\"git\", [\"merge-base\", \"HEAD\", \"master\"]).trim();\nconst changedFiles = new Set(\n  exec(\"git\", [\"diff\", \"-z\", \"--name-only\", \"--diff-filter=ACMRTUB\", mergeBase]).match(/[^\\0]+/g)\n);\n\nObject.keys(config).forEach(key => {\n  const patterns = config[key].patterns;\n  const options = config[key].options;\n  const ignore = config[key].ignore;\n\n  const globPattern = patterns.length > 1 ? `{${patterns.join(\",\")}}` : `${patterns.join(\",\")}`;\n  const files = glob.sync(globPattern, { ignore }).filter(f => !onlyChanged || changedFiles.has(f));\n\n  if (!files.length) {\n    return;\n  }\n\n  const args = Object.keys(defaultOptions).map(k => `--${k}=${(options && options[k]) || defaultOptions[k]}`);\n  args.push(`--${shouldWrite ? \"write\" : \"l\"}`);\n\n  let result;\n  try {\n    result = exec(prettierCmd, [...args, ...files]);\n  } catch (e) {\n    if (!shouldWrite) {\n      console.log(\n        \"\\n\" +\n          e.output[1] +\n          \"\\n\" +\n          chalk.red(`  This project uses prettier to format all JavaScript code.\\n`) +\n          chalk.dim(`    Please run `) +\n          chalk.reset(\"yarn prettier\") +\n          chalk.dim(` and add changes to files listed above to your commit.`) +\n          `\\n`\n      );\n      process.exit(1);\n    }\n    throw e;\n  }\n  console.log(\"\\n\" + result);\n});\n"]}