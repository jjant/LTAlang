{"version":3,"sources":["../../src/evaluators/SequenceExpression.js"],"names":["ast","strictCode","env","realm","expressions","length","val","node","GetValue","evaluate","undefined"],"mappings":";;;;;;kBAkBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKN;AACP,2BAAUH,IAAII,WAAJ,CAAgBC,MAAhB,GAAyB,CAAnC;AACA,MAAIC,YAAJ;AAFO;AAAA;AAAA;;AAAA;AAGP,yBAAiBN,IAAII,WAArB,8HAAkC;AAAA,UAAzBG,IAAyB;;AAChCD,YAAM,wBAAYE,QAAZ,CAAqBL,KAArB,EAA4BD,IAAIO,QAAJ,CAAaF,IAAb,EAAmBN,UAAnB,CAA5B,CAAN;AACD;AALM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAMP,2BAAUK,QAAQI,SAAlB;AACA,SAAOJ,GAAP;AACD,C;;AAjBD;;AAEA","file":"SequenceExpression.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport { Environment } from \"../singletons.js\";\nimport type { BabelNodeSequenceExpression } from \"babel-types\";\nimport invariant from \"../invariant.js\";\n\nexport default function(\n  ast: BabelNodeSequenceExpression,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  invariant(ast.expressions.length > 0);\n  let val;\n  for (let node of ast.expressions) {\n    val = Environment.GetValue(realm, env.evaluate(node, strictCode));\n  }\n  invariant(val !== undefined);\n  return val;\n}\n"]}