{"version":3,"sources":["../../src/evaluators/ThrowStatement.js"],"names":["ast","strictCode","env","realm","exprRef","evaluate","argument","exprValue","GetValue","loc"],"mappings":";;;;;;kBAkBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKN;AACP,MAAIC,UAAUF,IAAIG,QAAJ,CAAaL,IAAIM,QAAjB,EAA2BL,UAA3B,CAAd;AACA,MAAIM,YAAY,wBAAYC,QAAZ,CAAqBL,KAArB,EAA4BC,OAA5B,CAAhB;AACA,QAAM,iCAAoBG,SAApB,EAA+BP,IAAIS,GAAnC,CAAN;AACD,C;;AAbD;;AACA","file":"ThrowStatement.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport { ThrowCompletion } from \"../completions.js\";\nimport { Environment } from \"../singletons.js\";\nimport type { BabelNodeThrowStatement } from \"babel-types\";\n\nexport default function(\n  ast: BabelNodeThrowStatement,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  let exprRef = env.evaluate(ast.argument, strictCode);\n  let exprValue = Environment.GetValue(realm, exprRef);\n  throw new ThrowCompletion(exprValue, ast.loc);\n}\n"]}