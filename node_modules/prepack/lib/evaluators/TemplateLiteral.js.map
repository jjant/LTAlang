{"version":3,"sources":["../../src/evaluators/TemplateLiteral.js"],"names":["ast","strictCode","env","realm","str","i","quasis","length","elem","value","cooked","expr","expressions","GetValue","evaluate"],"mappings":";;;;;;kBAoBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKN;AACP,MAAIC,MAAM,EAAV;;AAEA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIL,IAAIM,MAAJ,CAAWC,MAA/B,EAAuCF,GAAvC,EAA4C;AAC1C;AACA,QAAIG,OAAOR,IAAIM,MAAJ,CAAWD,CAAX,CAAX;AACAD,WAAOI,KAAKC,KAAL,CAAWC,MAAlB;;AAEA;AACA,QAAIC,OAAOX,IAAIY,WAAJ,CAAgBP,CAAhB,CAAX;AACA,QAAIM,IAAJ,EAAU;AACRP,aAAO,6BAAgBD,KAAhB,EAAuB,wBAAYU,QAAZ,CAAqBV,KAArB,EAA4BD,IAAIY,QAAJ,CAAaH,IAAb,EAAmBV,UAAnB,CAA5B,CAAvB,CAAP;AACD;AACF;;AAED,SAAO,uBAAgBE,KAAhB,EAAuBC,GAAvB,CAAP;AACD,C;;AA3BD;;AACA;;AACA","file":"TemplateLiteral.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport { StringValue } from \"../values/index.js\";\nimport { ToStringPartial } from \"../methods/index.js\";\nimport { Environment } from \"../singletons.js\";\nimport type { BabelNodeTemplateLiteral } from \"babel-types\";\n\n// ECMA262 12.2.9\nexport default function(\n  ast: BabelNodeTemplateLiteral,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  let str = \"\";\n\n  for (let i = 0; i < ast.quasis.length; i++) {\n    // add quasi\n    let elem = ast.quasis[i];\n    str += elem.value.cooked;\n\n    // add expression\n    let expr = ast.expressions[i];\n    if (expr) {\n      str += ToStringPartial(realm, Environment.GetValue(realm, env.evaluate(expr, strictCode)));\n    }\n  }\n\n  return new StringValue(realm, str);\n}\n"]}