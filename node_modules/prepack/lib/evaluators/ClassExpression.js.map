{"version":3,"sources":["../../src/evaluators/ClassExpression.js"],"names":["ast","strictCode","env","realm","className","id","name","value","hasNameProperty","SetFunctionName"],"mappings":";;;;;;kBAoBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKN;AACP;AACA,MAAIC,kBAAJ;AACA;AACA,MAAIJ,IAAIK,EAAR,EAAY;AACVD,gBAAYJ,IAAIK,EAAJ,CAAOC,IAAnB;AACD;AACD;AACA,MAAIC,QAAQ,iDAA0BJ,KAA1B,EAAiCH,GAAjC,EAAsCI,SAAtC,EAAiDH,UAAjD,EAA6DC,GAA7D,CAAZ;;AAEA;;AAEA;AACA,MAAIE,SAAJ,EAAe;AACb;AACA,QAAII,kBAAkB,2BAAeL,KAAf,EAAsBI,KAAtB,EAA6B,MAA7B,CAAtB;;AAEA;;AAEA;AACA,QAAI,CAACC,eAAL,EAAsB;AACpB;AACA,4BAAUC,eAAV,CAA0BN,KAA1B,EAAiCI,KAAjC,EAAwCH,SAAxC;AACD;AACF;;AAED;AACA,SAAOG,KAAP;AACD,C;;AAtCD;;AACA;;AACA","file":"ClassExpression.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Value } from \"../values/index.js\";\nimport type { BabelNodeClassExpression } from \"babel-types\";\nimport { HasOwnProperty } from \"../methods/index.js\";\nimport { ClassDefinitionEvaluation } from \"./ClassDeclaration\";\nimport { Functions } from \"../singletons.js\";\n\n// ECMA262 14.5.16\nexport default function(\n  ast: BabelNodeClassExpression,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): Value {\n  // 1. If BindingIdentifieropt is not present, let className be undefined.\n  let className;\n  // 2. Else, let className be StringValue of BindingIdentifier.\n  if (ast.id) {\n    className = ast.id.name;\n  }\n  // 3. Let value be the result of ClassDefinitionEvaluation of ClassTail with argument className.\n  let value = ClassDefinitionEvaluation(realm, ast, className, strictCode, env);\n\n  // 4. ReturnIfAbrupt(value).\n\n  // 5. If className is not undefined, then\n  if (className) {\n    // a. Let hasNameProperty be HasOwnProperty(value, \"name\").\n    let hasNameProperty = HasOwnProperty(realm, value, \"name\");\n\n    // b. ReturnIfAbrupt(hasNameProperty).\n\n    // c. If hasNameProperty is false, then\n    if (!hasNameProperty) {\n      // i. Perform SetFunctionName(value, className).\n      Functions.SetFunctionName(realm, value, className);\n    }\n  }\n\n  // 6. Return NormalCompletion(value).\n  return value;\n}\n"]}