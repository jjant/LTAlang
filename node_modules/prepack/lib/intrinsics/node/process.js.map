{"version":3,"sources":["../../../src/intrinsics/node/process.js"],"names":["realm","processArgv","useAbstractInterpretation","configOverride","process","binding","hasIntl","nativeOverride","config","reverseConfigJSON","constants","natives","contextify","fs","fsEvent","initializeFSEvent","url","initializeURL","timerWrap","initializeTimerWrap","ttyWrap","initializeTTYWrap","signalWrap","initializeSignalWrap","streamWrap","initializeStreamWrap","caresWrap","createAbstractValue","tcpWrap","makeSimple","pipeWrap","uv","buffer","util","initializeUtil","os","moduleLoadList","createIntrinsicArrayValue","obj","intrinsics","ObjectPrototype","defineNativeMethod","context","args","arg0","length","undefined","module","createErrorThrowCompletion","TypeError","constantNames","name","value","_events","null","pid","debugPort","title","execArgv","cwd","methodNames","abstractMethod","argv0","DefinePropertyOrThrow","writable","configurable","enumerable","argv","false","execPath","env","self","pushValueToArray","OrdinaryDelete","promiseRejectCallback","tickCallback","runMicrotasks","runMicrotasksCallback","OrdinaryDefineOwnProperty","tickInfo","zero","constructor","nativeTTYWrap","argCount","NewTarget","fd","proto","TTYPrototype","toString","content","guessHandleType","isTTYtemplateSrc","isTTYtemplate","val","createFromTemplate","intrinsicName","SignalPrototype","WriteWrapPrototype","ShutdownWrap","FSEvent","arr","$TypedArrayName","true","pushValToArrayMax","type","template","values","Set","setExtensible","json","JSON","stringify","replace"],"mappings":";;;;;;;;kQAAA;;;;;;;;;kBAiUe,UAASA,KAAT,EAAuBC,WAAvB,EAAgE;AAC7E,MAAI,CAACD,MAAME,yBAAX,EAAsC;AACpC,6BAAU,KAAV,EAAiB,kDAAjB;AACD;AACD;AACA;;AAEA;AACA;AACA,MAAIC,8BAAsBC,QAAQC,OAAR,CAAgB,QAAhB,CAAtB,IAAiDC,SAAS,KAA1D,GAAJ;AACA;AACA;AACA,MAAIC,8BAAsBH,QAAQC,OAAR,CAAgB,SAAhB,CAAtB,IAAkDG,QAAQC,kBAAkBL,QAAQI,MAA1B,CAA1D,GAAJ;AACA,MAAIA,SAAS,gCAAoBR,KAApB,EAA2BG,cAA3B,EAA2C,2BAA3C,CAAb;AACA,MAAIO,YAAY,gCAAoBV,KAApB,EAA2BI,QAAQC,OAAR,CAAgB,WAAhB,CAA3B,EAAyD,8BAAzD,CAAhB;AACA,MAAIM,UAAU,gCAAoBX,KAApB,EAA2BO,cAA3B,EAA2C,4BAA3C,CAAd;;AAEA;AACA,MAAIK,aAAa,0BAAqBZ,KAArB,CAAjB;AACA,MAAIa,KAAK,kBAAab,KAAb,CAAT;AACA,MAAIc,UAAUC,kBAAkBf,KAAlB,CAAd;AACA,MAAIgB,MAAMC,cAAcjB,KAAd,CAAV;AACA,MAAIkB,YAAYC,oBAAoBnB,KAApB,CAAhB;AACA,MAAIoB,UAAUC,kBAAkBrB,KAAlB,CAAd;AACA,MAAIsB,aAAaC,qBAAqBvB,KAArB,CAAjB;AACA,MAAIwB,aAAaC,qBAAqBzB,KAArB,CAAjB;AACA,MAAI0B,YAAYC,oBAAoB3B,KAApB,sBAAwC,+BAAxC,CAAhB;AACA,MAAI4B,UAAUD,oBAAoB3B,KAApB,sBAAwC,6BAAxC,CAAd;AACA4B,UAAQC,UAAR;AACA,MAAIC,WAAWH,oBAAoB3B,KAApB,sBAAwC,8BAAxC,CAAf;AACA8B,WAASD,UAAT;AACA,MAAIE,KAAKJ,oBAAoB3B,KAApB,sBAAwC,uBAAxC,CAAT;AACA,MAAIgC,SAAS,sBAAiBhC,KAAjB,CAAb;AACA,MAAIiC,OAAOC,eAAelC,KAAf,CAAX;AACA,MAAImC,KAAKR,oBAAoB3B,KAApB,sBAAwC,uBAAxC,CAAT;AACAmC,KAAGN,UAAH;;AAEA;AACA,MAAIO,iBAAiBC,0BAA0BrC,KAA1B,EAAiC,wBAAjC,CAArB;;AAEA;AACA,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,SAAzD,CAAV;AACAF,MAAIG,kBAAJ,CAAuB,SAAvB,EAAkC,CAAlC,EAAqC,UAACC,OAAD,EAAUC,IAAV,EAAmB;AACtD,QAAIC,OAAOD,KAAKE,MAAL,GAAc,CAAd,GAAkB7C,MAAMuC,UAAN,CAAiBO,SAAnC,GAA+CH,KAAK,CAAL,CAA1D;AACA,QAAII,SAAS,sBAAS/C,KAAT,EAAgB4C,IAAhB,CAAb;AACA;AACA;AACA,YAAQG,MAAR;AACE;AACA,WAAK,QAAL;AACE,eAAOvC,MAAP;AACF,WAAK,WAAL;AACE,eAAOE,SAAP;AACF,WAAK,SAAL;AACE,eAAOC,OAAP;;AAEF;AACA,WAAK,YAAL;AACE,eAAOC,UAAP;AACF,WAAK,IAAL;AACE,eAAOC,EAAP;AACF,WAAK,eAAL;AACE,eAAOC,OAAP;AACF,WAAK,KAAL;AACE,eAAOE,GAAP;AACF,WAAK,IAAL;AACE,eAAOe,EAAP;AACF,WAAK,QAAL;AACE,eAAOC,MAAP;AACF,WAAK,MAAL;AACE,eAAOC,IAAP;AACF,WAAK,IAAL;AACE,eAAOE,EAAP;AACF,WAAK,YAAL;AACE,eAAOjB,SAAP;AACF,WAAK,UAAL;AACE,eAAOE,OAAP;AACF,WAAK,YAAL;AACE,eAAOM,SAAP;AACF,WAAK,UAAL;AACE,eAAOE,OAAP;AACF,WAAK,WAAL;AACE,eAAOE,QAAP;AACF,WAAK,aAAL;AACE,eAAON,UAAP;AACF,WAAK,aAAL;AACE,eAAOF,UAAP;;AAEF;AACE,cAAMtB,MAAMgD,0BAAN,CAAiChD,MAAMuC,UAAN,CAAiBU,SAAlD,uBAAgFF,MAAhF,CAAN;AA1CJ;AA4CD,GAjDD;;AAmDA,2BAAa/C,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,gBAAlC,EAAoDF,cAApD;;AAEA;AACA,MAAIc,gBAAgB,CAClB,SADkB,EAElB,UAFkB,EAGlB,qBAHkB,EAIlB,MAJkB,EAKlB,UALkB,EAMlB,SANkB,EAOlB,UAPkB,EAQlB,wBARkB,CAApB;AAhG6E;AAAA;AAAA;;AAAA;AA0G7E,yBAAiBA,aAAjB,8HAAgC;AAAA,UAAvBC,IAAuB;;AAC9B,UAAIC,QAAQ,gCAAoBpD,KAApB,EAA2BI,QAAQ+C,IAAR,CAA3B,EAA0C,aAAaA,IAAvD,CAAZ;AACA,+BAAanD,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkCa,IAAlC,EAAwCC,KAAxC;AACD;;AAED;AA/G6E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAgH7E,MAAIC,UAAU,uBAAgBrD,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBe,IAAxC,EAA8C,iBAA9C,CAAd;AACA,2BAAatD,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,SAAlC,EAA6Ce,OAA7C;;AAEA;AACA;AACA;AACA,MAAIE,MAAM,uBAAgBvD,KAAhB,EAAuB,CAAvB,EAA0B,aAA1B,CAAV;AACA,2BAAaA,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,KAAlC,EAAyCiB,GAAzC;AACA,MAAIC,YAAY7B,oBAAoB3B,KAApB,sBAAwC,mBAAxC,CAAhB;AACA,2BAAaA,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,WAAlC,EAA+CkB,SAA/C;AACA,MAAIC,QAAQ9B,oBAAoB3B,KAApB,sBAAwC,eAAxC,CAAZ;AACA,2BAAaA,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,OAAlC,EAA2CmB,KAA3C;;AAEA;AACA;AACA;AACA;AACA,MAAIC,WAAWrB,0BAA0BrC,KAA1B,EAAiC,kBAAjC,CAAf;AACA,2BAAaA,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,UAAlC,EAA8CoB,QAA9C;;AAEA,MAAIC,MAAM,+BAAwB3D,KAAxB,EAA+B,aAA/B,EAA8C,KAA9C,EAAqD,CAArD,EAAwD,UAAC0C,OAAD,EAAUC,IAAV,EAAmB;AACnF,WAAO,uBAAgB3C,KAAhB,EAAuBI,QAAQuD,GAAR,EAAvB,EAAsC,eAAtC,CAAP;AACD,GAFS,CAAV;AAGA,2BAAa3D,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,KAAlC,EAAyCqB,GAAzC;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA,MAAIC,cAAc,CAChB,4BADgB,EAEhB,2BAFgB,EAGhB,oBAHgB,EAIhB,mBAJgB,EAKhB,YALgB,EAMhB,OANgB,EAOhB,OAPgB,EAQhB,OARgB;;AAUhB;AACA,UAXgB,EAYhB,SAZgB,EAahB,QAbgB,EAchB,SAdgB,EAgBhB,QAhBgB,EAiBhB,SAjBgB,EAkBhB,QAlBgB,EAmBhB,SAnBgB,EAqBhB,WArBgB,EAsBhB,WAtBgB,EAuBhB,YAvBgB;AAwBhB;;AAEA,SA1BgB,EA4BhB,eA5BgB,EA6BhB,aA7BgB,EA8BhB,WA9BgB,EAgChB,QAhCgB,EAkChB,UAlCgB,EAoChB,QApCgB,EAsChB,QAtCgB,EAuChB,aAvCgB,EAyChB,gBAzCgB,EA2ChB,gBA3CgB,EA4ChB,gBA5CgB,EA6ChB,iBA7CgB,CAAlB;;AA7J6E;AAAA;AAAA;;AAAA;AA6M7E,0BAAiBA,WAAjB,mIAA8B;AAAA,UAArBT,KAAqB;;AAC5B,UAAIU,iBAAiBlC,oBAAoB3B,KAApB,wBAA0C,aAAamD,KAAvD,CAArB;AACA,+BAAanD,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkCa,KAAlC,EAAwCU,cAAxC;AACD;AAhN4E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAkN7E,MAAIC,QAAQ,uBAAgB9D,KAAhB,EAAuBI,QAAQ0D,KAA/B,EAAsC,eAAtC,CAAZ;AACA,yBAAWC,qBAAX,CAAiC/D,KAAjC,EAAwCsC,GAAxC,EAA6C,OAA7C,EAAsD;AACpDc,WAAOU,KAD6C;AAEpDE,cAAU,KAF0C;AAGpDC,kBAAc,IAHsC;AAIpDC,gBAAY;AAJwC,GAAtD;;AAOA,MAAIC,OAAOxC,oBAAoB3B,KAApB,sBAAwC,cAAxC,CAAX;;AAEA,yBAAW+D,qBAAX,CAAiC/D,KAAjC,EAAwCmE,IAAxC,EAA8C,GAA9C,EAAmD;AACjDf,WAAOU,KAD0C;AAEjDE,cAAU,IAFuC;AAGjDC,kBAAc,IAHmC;AAIjDC,gBAAY;AAJqC,GAAnD;;AAOA,yBAAWH,qBAAX,CAAiC/D,KAAjC,EAAwCmE,IAAxC,EAA8C,GAA9C,EAAmD;AACjDf,WAAO,uBAAgBpD,KAAhB,EAAuBC,YAAY,CAAZ,CAAvB,CAD0C;AAEjD+D,cAAU,IAFuC;AAGjDC,kBAAc,IAHmC;AAIjDC,gBAAY;AAJqC,GAAnD;;AAOA,yBAAWH,qBAAX,CAAiC/D,KAAjC,EAAwCmE,IAAxC,EAA8C,SAA9C,EAAyD;AACvDf,WAAO,+BAAwBpD,KAAxB,EAA+B,sBAA/B,EAAuD,SAAvD,EAAkE,CAAlE,EAAqE,UAAC0C,OAAD,EAAUC,IAAV,EAAmB;AAC7F,aAAO3C,MAAMuC,UAAN,CAAiB6B,KAAxB;AACD,KAFM,CADgD;AAIvDJ,cAAU,IAJ6C;AAKvDC,kBAAc,IALyC;AAMvDC,gBAAY;AAN2C,GAAzD;;AASAC,OAAKtC,UAAL;AACA,2BAAa7B,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,MAAlC,EAA0C6B,IAA1C;;AAEA,MAAIE,WAAW,uBAAgBrE,KAAhB,EAAuBI,QAAQiE,QAA/B,EAAyC,kBAAzC,CAAf;AACA,2BAAarE,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,UAAlC,EAA8C+B,QAA9C;;AAEA,MAAIC,MAAM,uBAAgBtE,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,aAAzD,CAAV;AACA;AACA,yBAAWuB,qBAAX,CAAiC/D,KAAjC,EAAwCsE,GAAxC,EAA6C,kBAA7C,EAAiE;AAC/DlB,WAAO,uBAAgBpD,KAAhB,EAAuB,GAAvB,EAA4B,8BAA5B,CADwD;AAE/DgE,cAAU,IAFqD;AAG/DC,kBAAc,IAHiD;AAI/DC,gBAAY;AAJmD,GAAjE;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAI,MAAIzC,UAAJ;AACA,2BAAa7B,KAAb,EAAoBI,OAApB,EAA6BkC,GAA7B,EAAkC,KAAlC,EAAyCgC,GAAzC;;AAEA;AACA;AACA;AACA;AACAhC,MAAIG,kBAAJ,CAAuB,qBAAvB,EAA8C,CAA9C,EAAiD,UAAC8B,IAAD,QAA8B;AAAA;AAAA,QAAtBC,gBAAsB;;AAC7E,2BAAWC,cAAX,CAA0BzE,KAA1B,EAAiCsC,GAAjC,EAAsC,qBAAtC;AACA,WAAOtC,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAHD;;AAKA;AACA;AACAR,MAAIG,kBAAJ,CAAuB,gBAAvB,EAAyC,CAAzC,EAA4C,UAAC8B,IAAD,SAAmC;AAAA;AAAA,QAA3BG,qBAA2B;;AAC7E,2BAAWD,cAAX,CAA0BzE,KAA1B,EAAiCsC,GAAjC,EAAsC,gBAAtC;AACA,WAAOtC,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAHD;;AAKA;AACA;AACAR,MAAIG,kBAAJ,CAAuB,gBAAvB,EAAyC,CAAzC,EAA4C,UAAC8B,IAAD,SAAyC;AAAA;AAAA,QAAjCI,YAAiC;AAAA,QAAnBC,aAAmB;;AACnF,2BAAWH,cAAX,CAA0BzE,KAA1B,EAAiCsC,GAAjC,EAAsC,gBAAtC;AACA,QAAIuC,wBAAwB,+BAC1B7E,KAD0B,EAE1B,sEAF0B,EAG1B,eAH0B,EAI1B,CAJ0B,EAK1B,UAAC0C,OAAD,EAAUC,IAAV,EAAmB;AACjB;AACA,aAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,KARyB,CAA5B;AAUA,2BAAWgC,yBAAX,CAAqC9E,KAArC,EAA4C4E,aAA5C,EAA2D,eAA3D,EAA4E;AAC1ExB,aAAOyB,qBADmE;AAE1Eb,gBAAU,IAFgE;AAG1EE,kBAAY,IAH8D;AAI1ED,oBAAc;AAJ4D,KAA5E;AAMA,QAAIc,WAAW,uBACb/E,KADa,EAEbA,MAAMuC,UAAN,CAAiBC,eAFJ,EAGb,4FAHa,CAAf;AAKA,2BAAWsC,yBAAX,CAAqC9E,KAArC,EAA4C+E,QAA5C,EAAsD,GAAtD,EAA2D;AACzD3B,aAAOpD,MAAMuC,UAAN,CAAiByC,IADiC;AAEzDhB,gBAAU,IAF+C;AAGzDE,kBAAY,IAH6C;AAIzDD,oBAAc;AAJ2C,KAA3D;AAMA,2BAAWa,yBAAX,CAAqC9E,KAArC,EAA4C+E,QAA5C,EAAsD,GAAtD,EAA2D;AACzD3B,aAAOpD,MAAMuC,UAAN,CAAiByC,IADiC;AAEzDhB,gBAAU,IAF+C;AAGzDE,kBAAY,IAH6C;AAIzDD,oBAAc;AAJ2C,KAA3D;AAMA,WAAOc,QAAP;AACD,GApCD;;AAsCA,SAAOzC,GAAP;AACD,C;;AA7nBD;;;;AAEA;;AAYA;;AACA;;AACA;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAIA,SAASnB,mBAAT,CAA6BnB,KAA7B,EAAoC;AAClC,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,+BAAzD,CAAV;AACA,MAAIyC,cAAc,+BAChBjF,KADgB,EAEhB,qCAFgB,EAGhB,OAHgB,EAIhB,CAJgB,EAKhB,UAAC0C,OAAD,EAAUC,IAAV,EAAmB;AACjB,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAPe,CAAlB;AASA,yBAAWgC,yBAAX,CAAqC9E,KAArC,EAA4CsC,GAA5C,EAAiD,OAAjD,EAA0D;AACxDc,WAAO6B,WADiD;AAExDjB,cAAU,IAF8C;AAGxDE,gBAAY,IAH4C;AAIxDD,kBAAc;AAJ0C,GAA1D;AAMA;AACA,SAAO3B,GAAP;AACD;;AAED,SAASjB,iBAAT,CAA2BrB,KAA3B,EAAkC;AAChC,MAAIkF,gBAAgB9E,QAAQC,OAAR,CAAgB,UAAhB,CAApB;AACA;AACA,MAAIiC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,6BAAzD,CAAV;;AAEA,MAAIyC,cAAc,+BAChBjF,KADgB,EAEhB,iCAFgB,EAGhB,KAHgB,EAIhB,CAJgB,EAKhB,UAAC0C,OAAD,EAAUC,IAAV,EAAgBwC,QAAhB,EAA0BC,SAA1B,EAAwC;AACtC,6BAAUzC,KAAK,CAAL,iCAAV;AACA,QAAI0C,KAAK,uBAAUrF,KAAV,EAAiB2C,KAAK,CAAL,CAAjB,CAAT;AACA,6BAAUA,KAAK,CAAL,iCAAV;AACA,QAAIS,QAAQ,uBAAUpD,KAAV,EAAiB2C,KAAK,CAAL,CAAjB,CAAZ;;AAEA,6BAAUyC,SAAV,EAAqB,sCAArB;;AAEA,QAAIE,QAAQ,iBAAItF,KAAJ,EAAWoF,SAAX,EAAsB,uBAAgBpF,KAAhB,EAAuB,WAAvB,CAAtB,CAAZ;AACA,QAAI,EAAEsF,mCAAF,CAAJ,EAAqC;AACnCA,cAAQC,YAAR;AACD;;AAED;AACA;;AAEA,WAAO,uBAAgBvF,KAAhB,EAAuBsF,KAAvB,6CAAuED,EAAvE,UAA8EjC,MAAMoC,QAAN,EAA9E,OAAP;AACD,GAtBe,CAAlB;AAwBA,yBAAWV,yBAAX,CAAqC9E,KAArC,EAA4CsC,GAA5C,EAAiD,KAAjD,EAAwD;AACtDc,WAAO6B,WAD+C;AAEtDjB,cAAU,IAF4C;AAGtDE,gBAAY,IAH0C;AAItDD,kBAAc;AAJwC,GAAxD;;AAOA,MAAIsB,eAAe,uBACjBvF,KADiB,EAEjBA,MAAMuC,UAAN,CAAiBC,eAFA,EAGjB,2CAHiB,CAAnB;;AAMA+C,eAAa9C,kBAAb,CAAgC,aAAhC,EAA+C,CAA/C,EAAkD,UAACC,OAAD,EAAUC,IAAV,EAAmB;AACnE,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAFD;AAGAyC,eAAa9C,kBAAb,CAAgC,eAAhC,EAAiD,CAAjD,EAAoD,UAACC,OAAD,EAAUC,IAAV,EAAmB;AACrE,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAFD;AAGAyC,eAAa9C,kBAAb,CAAgC,iBAAhC,EAAmD,CAAnD,EAAsD,UAACC,OAAD,EAAUC,IAAV,EAAmB;AACvE;AACA;AACA;AACA,QAAI8C,UAAU9C,KAAK,CAAL,CAAd;AACA,6BAAU8C,qCAAV;AACA,WAAOzF,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAPD;;AASA,yBAAWiB,qBAAX,CAAiC/D,KAAjC,EAAwCiF,WAAxC,EAAqD,WAArD,EAAkE;AAChE7B,WAAOmC,YADyD;AAEhEvB,cAAU,IAFsD;AAGhEE,gBAAY,KAHoD;AAIhED,kBAAc;AAJkD,GAAlE;;AAOA3B,MAAIG,kBAAJ,CAAuB,iBAAvB,EAA0C,CAA1C,EAA6C,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAC9D,QAAI0C,KAAK,uBAAUrF,KAAV,EAAiB2C,KAAK,CAAL,CAAjB,CAAT;AACA,WAAO,uBAAgB3C,KAAhB,EAAuBkF,cAAcQ,eAAd,CAA8BL,EAA9B,CAAvB,CAAP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAnBD;;AAqBA/C,MAAIG,kBAAJ,CAAuB,OAAvB,EAAgC,CAAhC,EAAmC,UAACC,OAAD,EAAUC,IAAV,EAAmB;AACpD,QAAI0C,KAAK,uBAAUrF,KAAV,EAAiB2C,KAAK,CAAL,CAAjB,CAAT;AACA,QAAMgD,2DAAyDN,EAAzD,OAAN;AACA,QAAMO,gBAAgB,uBAAwBD,gBAAxB,CAAtB;AACA,QAAIE,MAAM,qBAAcC,kBAAd,CAAiC9F,KAAjC,EAAwC4F,aAAxC,uBAAqE,EAArE,EAAyED,gBAAzE,CAAV;AACAE,QAAIE,aAAJ,GAAoBJ,gBAApB;AACA,WAAOE,GAAP;AACD,GAPD;AAQA;AACA,SAAOvD,GAAP;AACD;;AAED,SAASf,oBAAT,CAA8BvB,KAA9B,EAAqC;AACnC;AACA;AACA;AACA,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,gCAAzD,CAAV;;AAEA,MAAIyC,cAAc,+BAChBjF,KADgB,EAEhB,uCAFgB,EAGhB,QAHgB,EAIhB,CAJgB,EAKhB,UAAC0C,OAAD,EAAUC,IAAV,EAAmB;AACjB,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAPe,CAAlB;AASA,yBAAWgC,yBAAX,CAAqC9E,KAArC,EAA4CsC,GAA5C,EAAiD,QAAjD,EAA2D;AACzDc,WAAO6B,WADkD;AAEzDjB,cAAU,IAF+C;AAGzDE,gBAAY,IAH6C;AAIzDD,kBAAc;AAJ2C,GAA3D;;AAOA,MAAI+B,kBAAkB,uBACpBhG,KADoB,EAEpBA,MAAMuC,UAAN,CAAiBC,eAFG,EAGpB,iDAHoB,CAAtB;AAKAwD,kBAAgBvD,kBAAhB,CAAmC,OAAnC,EAA4C,CAA5C,EAA+C,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAChE;AACA,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAHD;AAIAkD,kBAAgBvD,kBAAhB,CAAmC,OAAnC,EAA4C,CAA5C,EAA+C,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAChE;AACA,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAHD;AAIAkD,kBAAgBvD,kBAAhB,CAAmC,OAAnC,EAA4C,CAA5C,EAA+C,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAChE;AACA,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAHD;;AAKA,yBAAWiB,qBAAX,CAAiC/D,KAAjC,EAAwCiF,WAAxC,EAAqD,WAArD,EAAkE;AAChE7B,WAAO4C,eADyD;AAEhEhC,cAAU,IAFsD;AAGhEE,gBAAY,KAHoD;AAIhED,kBAAc;AAJkD,GAAlE;;AAOA;AACA,SAAO3B,GAAP;AACD;;AAED,SAASb,oBAAT,CAA8BzB,KAA9B,EAAqC;AACnC;AACA,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,gCAAzD,CAAV;;AAEA,MAAIyC,cAAc,+BAChBjF,KADgB,EAEhB,0CAFgB,EAGhB,WAHgB,EAIhB,CAJgB,EAKhB,UAAC0C,OAAD,EAAUC,IAAV,EAAmB;AACjB,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAPe,CAAlB;AASA,yBAAWgC,yBAAX,CAAqC9E,KAArC,EAA4CsC,GAA5C,EAAiD,WAAjD,EAA8D;AAC5Dc,WAAO6B,WADqD;AAE5DjB,cAAU,IAFkD;AAG5DE,gBAAY,IAHgD;AAI5DD,kBAAc;AAJ8C,GAA9D;;AAOA,MAAIgC,qBAAqB,uBACvBjG,KADuB,EAEvBA,MAAMuC,UAAN,CAAiBC,eAFM,EAGvB,oDAHuB,CAAzB;AAKAyD,qBAAmBxD,kBAAnB,CAAsC,OAAtC,EAA+C,CAA/C,EAAkD,UAACC,OAAD,EAAUC,IAAV,EAAmB;AACnE;AACA,WAAO3C,MAAMuC,UAAN,CAAiBO,SAAxB;AACD,GAHD;;AAKA,yBAAWiB,qBAAX,CAAiC/D,KAAjC,EAAwCiF,WAAxC,EAAqD,WAArD,EAAkE;AAChE7B,WAAO6C,kBADyD;AAEhEjC,cAAU,IAFsD;AAGhEE,gBAAY,KAHoD;AAIhED,kBAAc;AAJkD,GAAlE;;AAOA,MAAIiC,eAAevE,oBAAoB3B,KAApB,wBAA0C,6CAA1C,CAAnB;AACA,yBAAW+D,qBAAX,CAAiC/D,KAAjC,EAAwCsC,GAAxC,EAA6C,cAA7C,EAA6D;AAC3Dc,WAAO8C,YADoD;AAE3DlC,cAAU,IAFiD;AAG3DC,kBAAc,IAH6C;AAI3DC,gBAAY;AAJ+C,GAA7D;;AAOA;AACA,SAAO5B,GAAP;AACD;;AAED,SAASvB,iBAAT,CAA2Bf,KAA3B,EAAkC;AAChC,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,kCAAzD,CAAV;AACA,MAAI2D,UAAUxE,oBAAoB3B,KAApB,wBAA0C,0CAA1C,CAAd;AACA,yBAAW+D,qBAAX,CAAiC/D,KAAjC,EAAwCsC,GAAxC,EAA6C,SAA7C,EAAwD;AACtDc,WAAO+C,OAD+C;AAEtDnC,cAAU,IAF4C;AAGtDC,kBAAc,IAHwC;AAItDC,gBAAY;AAJ0C,GAAxD;;AAOA;AACA,SAAO5B,GAAP;AACD;;AAED,SAASrB,aAAT,CAAuBjB,KAAvB,EAA8B;AAC5B,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,CAAV;AACA;AACA,SAAOF,GAAP;AACD;;AAED,SAASJ,cAAT,CAAwBlC,KAAxB,EAA+B;AAC7B,MAAIsC,MAAM,uBAAgBtC,KAAhB,EAAuBA,MAAMuC,UAAN,CAAiBC,eAAxC,EAAyD,yBAAzD,CAAV;AACAF,MAAIG,kBAAJ,CAAuB,cAAvB,EAAuC,CAAvC,EAA0C,UAACC,OAAD,EAAUC,IAAV,EAAmB;AAC3D,QAAIyD,MAAMzD,KAAK,CAAL,CAAV;AACA,QAAIyD,qCAA8BA,IAAIC,eAAJ,KAAwB,YAA1D,EAAwE;AACtE,aAAOrG,MAAMuC,UAAN,CAAiB+D,IAAxB;AACD;AACD,WAAOtG,MAAMuC,UAAN,CAAiB6B,KAAxB;AACD,GAND;AAOA,2BACEpE,KADF,EAEEI,QAAQC,OAAR,CAAgB,MAAhB,CAFF,EAGEiC,GAHF,EAIE,mBAJF,EAKE,uBAAgBtC,KAAhB,EAAuBI,QAAQC,OAAR,CAAgB,MAAhB,EAAwBkG,iBAA/C,EAAkE,2CAAlE,CALF;AAOA;AACA,SAAOjE,GAAP;AACD;;AAED,SAASX,mBAAT,CAA6B3B,KAA7B,EAAoCwG,IAApC,EAA0CT,aAA1C,EAA8E;AAC5E,MAAIU,WAAW,uBAAwBV,aAAxB,CAAf;AACA,MAAIF,MAAM,qBAAcC,kBAAd,CAAiC9F,KAAjC,EAAwCyG,QAAxC,sBAA+D,EAA/D,EAAmEV,aAAnE,CAAV;AACAF,MAAIa,MAAJ,GAAa,yBAAiB,IAAIC,GAAJ,CAAQ,CAAC,uBAAgB3G,KAAhB,CAAD,CAAR,CAAjB,CAAb;AACA6F,MAAIE,aAAJ,GAAoBA,aAApB;AACA,SAAQF,GAAR;AACD;;AAED,SAASxD,yBAAT,CAAmCrC,KAAnC,EAA0C+F,aAA1C,EAAyD;AACvD;AACA,MAAIzD,MAAM,sBAAetC,KAAf,EAAsB+F,aAAtB,CAAV;AACAzD,MAAIsE,aAAJ,CAAkB,IAAlB;AACA,yBAAW9B,yBAAX,CAAqC9E,KAArC,EAA4CsC,GAA5C,EAAiD,QAAjD,EAA2D;AACzDc,WAAOpD,MAAMuC,UAAN,CAAiByC,IADiC;AAEzDhB,cAAU,IAF+C;AAGzDE,gBAAY,KAH6C;AAIzDD,kBAAc;AAJ2C,GAA3D;AAMA,SAAO3B,GAAP;AACD;;AAED,SAAS7B,iBAAT,CAA2BD,MAA3B,EAAmC;AACjC;AACA,MAAIqG,OAAOC,KAAKC,SAAL,CAAe3G,QAAQI,MAAvB,EAA+BwG,OAA/B,CAAuC,IAAvC,EAA6C,GAA7C,CAAX;AACA,SAAO,OAAOH,IAAd;AACD","file":"process.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport invariant from \"../../invariant.js\";\nimport type { Realm } from \"../../realm.js\";\nimport {\n  AbstractObjectValue,\n  AbstractValue,\n  ArrayValue,\n  BooleanValue,\n  ConcreteValue,\n  FunctionValue,\n  NativeFunctionValue,\n  NumberValue,\n  ObjectValue,\n  StringValue,\n} from \"../../values/index.js\";\nimport { Get, ToString, ToInteger, ToBoolean } from \"../../methods/index.js\";\nimport { ValuesDomain } from \"../../domains/index.js\";\nimport { Properties } from \"../../singletons.js\";\nimport buildExpressionTemplate from \"../../utils/builder.js\";\nimport initializeBuffer from \"./buffer.js\";\nimport initializeContextify from \"./contextify.js\";\nimport initializeFS from \"./fs.js\";\nimport { copyProperty, createDeepIntrinsic } from \"./utils.js\";\n\ndeclare var process: any;\n\nfunction initializeTimerWrap(realm) {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process.binding('timer_wrap')\");\n  let constructor = new NativeFunctionValue(\n    realm,\n    \"process.binding('timer_wrap').Timer\",\n    \"Timer\",\n    0,\n    (context, args) => {\n      return realm.intrinsics.undefined;\n    }\n  );\n  Properties.OrdinaryDefineOwnProperty(realm, obj, \"Timer\", {\n    value: constructor,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n  // TODO: Implement the rest of this protocol as needed.\n  return obj;\n}\n\nfunction initializeTTYWrap(realm) {\n  let nativeTTYWrap = process.binding(\"tty_wrap\");\n  // let nativeTTY = nativeTTYWrap.TTY;\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process.binding('tty_wrap')\");\n\n  let constructor = new NativeFunctionValue(\n    realm,\n    \"process.binding('tty_wrap').TTY\",\n    \"TTY\",\n    0,\n    (context, args, argCount, NewTarget) => {\n      invariant(args[0] instanceof ConcreteValue);\n      let fd = ToInteger(realm, args[0]);\n      invariant(args[1] instanceof ConcreteValue);\n      let value = ToBoolean(realm, args[1]);\n\n      invariant(NewTarget, \"TTY must be called as a constructor.\");\n\n      let proto = Get(realm, NewTarget, new StringValue(realm, \"prototype\"));\n      if (!(proto instanceof ObjectValue)) {\n        proto = TTYPrototype;\n      }\n\n      // TODO: Store nativeTTY in an internal slot so that it can be used if this\n      // object gets passed to another native call.\n\n      return new ObjectValue(realm, proto, `new (process.binding('tty_wrap').TTY)(${fd}, ${value.toString()})`);\n    }\n  );\n  Properties.OrdinaryDefineOwnProperty(realm, obj, \"TTY\", {\n    value: constructor,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  let TTYPrototype = new ObjectValue(\n    realm,\n    realm.intrinsics.ObjectPrototype,\n    \"process.binding('tty_wrap').TTY.prototype\"\n  );\n\n  TTYPrototype.defineNativeMethod(\"setBlocking\", 0, (context, args) => {\n    return realm.intrinsics.undefined;\n  });\n  TTYPrototype.defineNativeMethod(\"getWindowSize\", 0, (context, args) => {\n    return realm.intrinsics.undefined;\n  });\n  TTYPrototype.defineNativeMethod(\"writeUtf8String\", 0, (context, args) => {\n    // TODO: Store this as a side-effect. When we do that, we need the first arg\n    // to be passed along to that side-effect.\n    // let req = args[0];\n    let content = args[1];\n    invariant(content instanceof StringValue);\n    return realm.intrinsics.undefined;\n  });\n\n  Properties.DefinePropertyOrThrow(realm, constructor, \"prototype\", {\n    value: TTYPrototype,\n    writable: true,\n    enumerable: false,\n    configurable: false,\n  });\n\n  obj.defineNativeMethod(\"guessHandleType\", 0, (context, args) => {\n    let fd = ToInteger(realm, args[0]);\n    return new StringValue(realm, nativeTTYWrap.guessHandleType(fd));\n    // TODO: Make this abstract so that changing the pipe at runtime is\n    // possible. Currently this causes an introspection error.\n\n    // let types = new TypesDomain(StringValue);\n    // let values = new ValuesDomain(new Set([\n    //   new StringValue(realm, \"TCP\"),\n    //   new StringValue(realm, \"TTY\"),\n    //   new StringValue(realm, \"UDP\"),\n    //   new StringValue(realm, \"FILE\"),\n    //   new StringValue(realm, \"PIPE\"),\n    //   new StringValue(realm, \"UNKNOWN\")\n    // ]));\n    // let buildNode = buildExpressionTemplate(\n    //   `(process.binding('tty_wrap').guessHandleType(${fd}))`\n    // )(this.realm.preludeGenerator);\n    // return realm.createAbstract(types, values, [], buildNode, undefined, `(process.binding('tty_wrap').guessHandleType(${fd}))`);\n  });\n\n  obj.defineNativeMethod(\"isTTY\", 0, (context, args) => {\n    let fd = ToInteger(realm, args[0]);\n    const isTTYtemplateSrc = `(process.binding('tty_wrap').isTTY(${fd}))`;\n    const isTTYtemplate = buildExpressionTemplate(isTTYtemplateSrc);\n    let val = AbstractValue.createFromTemplate(realm, isTTYtemplate, BooleanValue, [], isTTYtemplateSrc);\n    val.intrinsicName = isTTYtemplateSrc;\n    return val;\n  });\n  // TODO: Implement the rest of this protocol.\n  return obj;\n}\n\nfunction initializeSignalWrap(realm) {\n  // TODO: Implement more of this protocol. When doing so, we'll likely need to\n  // forward it to the native implementation.\n  // let nativeSignalWrap = process.binding(\"signal_wrap\");\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process.binding('signal_wrap')\");\n\n  let constructor = new NativeFunctionValue(\n    realm,\n    \"process.binding('signal_wrap').Signal\",\n    \"Signal\",\n    0,\n    (context, args) => {\n      return realm.intrinsics.undefined;\n    }\n  );\n  Properties.OrdinaryDefineOwnProperty(realm, obj, \"Signal\", {\n    value: constructor,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  let SignalPrototype = new ObjectValue(\n    realm,\n    realm.intrinsics.ObjectPrototype,\n    \"process.binding('signal_wrap').Signal.prototype\"\n  );\n  SignalPrototype.defineNativeMethod(\"unref\", 0, (context, args) => {\n    // TODO: Track the side-effect of this.\n    return realm.intrinsics.undefined;\n  });\n  SignalPrototype.defineNativeMethod(\"start\", 0, (context, args) => {\n    // TODO: Track the side-effect of this.\n    return realm.intrinsics.undefined;\n  });\n  SignalPrototype.defineNativeMethod(\"close\", 0, (context, args) => {\n    // TODO: Track the side-effect of this.\n    return realm.intrinsics.undefined;\n  });\n\n  Properties.DefinePropertyOrThrow(realm, constructor, \"prototype\", {\n    value: SignalPrototype,\n    writable: true,\n    enumerable: false,\n    configurable: false,\n  });\n\n  // TODO\n  return obj;\n}\n\nfunction initializeStreamWrap(realm) {\n  // let nativeStreamWrap = process.binding(\"stream_wrap\");\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process.binding('stream_wrap')\");\n\n  let constructor = new NativeFunctionValue(\n    realm,\n    \"process.binding('stream_wrap').WriteWrap\",\n    \"WriteWrap\",\n    0,\n    (context, args) => {\n      return realm.intrinsics.undefined;\n    }\n  );\n  Properties.OrdinaryDefineOwnProperty(realm, obj, \"WriteWrap\", {\n    value: constructor,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  let WriteWrapPrototype = new ObjectValue(\n    realm,\n    realm.intrinsics.ObjectPrototype,\n    \"process.binding('stream_wrap').WriteWrap.prototype\"\n  );\n  WriteWrapPrototype.defineNativeMethod(\"unref\", 0, (context, args) => {\n    // TODO: Track the side-effect of this.\n    return realm.intrinsics.undefined;\n  });\n\n  Properties.DefinePropertyOrThrow(realm, constructor, \"prototype\", {\n    value: WriteWrapPrototype,\n    writable: true,\n    enumerable: false,\n    configurable: false,\n  });\n\n  let ShutdownWrap = createAbstractValue(realm, FunctionValue, \"process.binding('stream_wrap').ShutdownWrap\");\n  Properties.DefinePropertyOrThrow(realm, obj, \"ShutdownWrap\", {\n    value: ShutdownWrap,\n    writable: true,\n    configurable: true,\n    enumerable: true,\n  });\n\n  // TODO\n  return obj;\n}\n\nfunction initializeFSEvent(realm) {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process.binding('fs_event_wrap')\");\n  let FSEvent = createAbstractValue(realm, FunctionValue, \"process.binding('fs_event_wrap').FSEvent\");\n  Properties.DefinePropertyOrThrow(realm, obj, \"FSEvent\", {\n    value: FSEvent,\n    writable: true,\n    configurable: true,\n    enumerable: true,\n  });\n\n  // TODO\n  return obj;\n}\n\nfunction initializeURL(realm) {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype);\n  // TODO\n  return obj;\n}\n\nfunction initializeUtil(realm) {\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, 'process.binding(\"util\")');\n  obj.defineNativeMethod(\"isUint8Array\", 0, (context, args) => {\n    let arr = args[0];\n    if (arr instanceof ObjectValue && arr.$TypedArrayName === \"Uint8Array\") {\n      return realm.intrinsics.true;\n    }\n    return realm.intrinsics.false;\n  });\n  copyProperty(\n    realm,\n    process.binding(\"util\"),\n    obj,\n    \"pushValToArrayMax\",\n    new NumberValue(realm, process.binding(\"util\").pushValToArrayMax, 'process.binding(\"util\").pushValToArrayMax')\n  );\n  // TODO\n  return obj;\n}\n\nfunction createAbstractValue(realm, type, intrinsicName): AbstractObjectValue {\n  let template = buildExpressionTemplate(intrinsicName);\n  let val = AbstractValue.createFromTemplate(realm, template, ObjectValue, [], intrinsicName);\n  val.values = new ValuesDomain(new Set([new ObjectValue(realm)]));\n  val.intrinsicName = intrinsicName;\n  return (val: any);\n}\n\nfunction createIntrinsicArrayValue(realm, intrinsicName) {\n  // Like ArrayCreate but accepts an intrinsic name.\n  let obj = new ArrayValue(realm, intrinsicName);\n  obj.setExtensible(true);\n  Properties.OrdinaryDefineOwnProperty(realm, obj, \"length\", {\n    value: realm.intrinsics.zero,\n    writable: true,\n    enumerable: false,\n    configurable: false,\n  });\n  return obj;\n}\n\nfunction reverseConfigJSON(config) {\n  // Hack to restore the gyp config format\n  let json = JSON.stringify(process.config).replace(/\"/g, \"'\");\n  return \"\\n\" + json;\n}\n\nexport default function(realm: Realm, processArgv: Array<string>): ObjectValue {\n  if (!realm.useAbstractInterpretation) {\n    invariant(false, \"Realm is not enabled for Abstract Interpretation\");\n  }\n  // TODO: This causes a dependency on the native `process` which doesn't\n  // exist in all environments such as the webpack version.\n\n  // Constant bindings\n  // TODO: Implement icu module so that we can let hasIntl be true.\n  let configOverride = { ...process.binding(\"config\"), hasIntl: false };\n  // By the time we run the host has already deleted natives.config so we have\n  // to restore it.\n  let nativeOverride = { ...process.binding(\"natives\"), config: reverseConfigJSON(process.config) };\n  let config = createDeepIntrinsic(realm, configOverride, 'process.binding(\"config\")');\n  let constants = createDeepIntrinsic(realm, process.binding(\"constants\"), 'process.binding(\"constants\")');\n  let natives = createDeepIntrinsic(realm, nativeOverride, 'process.binding(\"natives\")');\n\n  // Built-in native bindings\n  let contextify = initializeContextify(realm);\n  let fs = initializeFS(realm);\n  let fsEvent = initializeFSEvent(realm);\n  let url = initializeURL(realm);\n  let timerWrap = initializeTimerWrap(realm);\n  let ttyWrap = initializeTTYWrap(realm);\n  let signalWrap = initializeSignalWrap(realm);\n  let streamWrap = initializeStreamWrap(realm);\n  let caresWrap = createAbstractValue(realm, ObjectValue, 'process.binding(\"cares_wrap\")');\n  let tcpWrap = createAbstractValue(realm, ObjectValue, 'process.binding(\"tcp_wrap\")');\n  tcpWrap.makeSimple();\n  let pipeWrap = createAbstractValue(realm, ObjectValue, 'process.binding(\"pipe_wrap\")');\n  pipeWrap.makeSimple();\n  let uv = createAbstractValue(realm, ObjectValue, 'process.binding(\"uv\")');\n  let buffer = initializeBuffer(realm);\n  let util = initializeUtil(realm);\n  let os = createAbstractValue(realm, ObjectValue, 'process.binding(\"os\")');\n  os.makeSimple();\n\n  // List of loaded native modules\n  let moduleLoadList = createIntrinsicArrayValue(realm, \"process.moduleLoadList\");\n\n  // The process object\n  let obj = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process\");\n  obj.defineNativeMethod(\"binding\", 1, (context, args) => {\n    let arg0 = args.length < 1 ? realm.intrinsics.undefined : args[0];\n    let module = ToString(realm, arg0);\n    // TODO: Add the module to the moduleLoadList but don't track that\n    // as a side-effect.\n    switch (module) {\n      // Constants\n      case \"config\":\n        return config;\n      case \"constants\":\n        return constants;\n      case \"natives\":\n        return natives;\n\n      // Built-in bindings\n      case \"contextify\":\n        return contextify;\n      case \"fs\":\n        return fs;\n      case \"fs_event_wrap\":\n        return fsEvent;\n      case \"url\":\n        return url;\n      case \"uv\":\n        return uv;\n      case \"buffer\":\n        return buffer;\n      case \"util\":\n        return util;\n      case \"os\":\n        return os;\n      case \"timer_wrap\":\n        return timerWrap;\n      case \"tty_wrap\":\n        return ttyWrap;\n      case \"cares_wrap\":\n        return caresWrap;\n      case \"tcp_wrap\":\n        return tcpWrap;\n      case \"pipe_wrap\":\n        return pipeWrap;\n      case \"stream_wrap\":\n        return streamWrap;\n      case \"signal_wrap\":\n        return signalWrap;\n\n      default:\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, `No such module: ${module}`);\n    }\n  });\n\n  copyProperty(realm, process, obj, \"moduleLoadList\", moduleLoadList);\n\n  // Constants on the process\n  let constantNames = [\n    \"version\",\n    \"versions\",\n    \"_promiseRejectEvent\",\n    \"arch\",\n    \"platform\",\n    \"release\",\n    \"features\",\n    \"_needImmediateCallback\",\n  ];\n  for (let name of constantNames) {\n    let value = createDeepIntrinsic(realm, process[name], \"process.\" + name);\n    copyProperty(realm, process, obj, name, value);\n  }\n\n  // process._events is a mutable object with null prototype.\n  let _events = new ObjectValue(realm, realm.intrinsics.null, \"process._events\");\n  copyProperty(realm, process, obj, \"_events\", _events);\n\n  // TODO: When abstract numbers in string templates is implemented, turn this\n  // back into an abstract value.\n  // let pid = createAbstractValue(realm, NumberValue, \"process.pid\");\n  let pid = new NumberValue(realm, 0, \"process.pid\");\n  copyProperty(realm, process, obj, \"pid\", pid);\n  let debugPort = createAbstractValue(realm, NumberValue, \"process.debugPort\");\n  copyProperty(realm, process, obj, \"debugPort\", debugPort);\n  let title = createAbstractValue(realm, StringValue, \"process.title\");\n  copyProperty(realm, process, obj, \"title\", title);\n\n  // process.execArgv should probably be passed as an argument to the compile\n  // step rather than letting arbitrary options be passed to the program.\n  // For now I'll just hard code it as empty array.\n  // TODO: Allow execArgv to be passed as a compiler option.\n  let execArgv = createIntrinsicArrayValue(realm, \"process.execArgv\");\n  copyProperty(realm, process, obj, \"execArgv\", execArgv);\n\n  let cwd = new NativeFunctionValue(realm, \"process.cwd\", \"cwd\", 0, (context, args) => {\n    return new StringValue(realm, process.cwd(), \"process.cwd()\");\n  });\n  copyProperty(realm, process, obj, \"cwd\", cwd);\n\n  // These properties all depend on options being defined in \"execArgv\" but\n  // since we hard coded it, none of this will be added.\n  // \"_eval\" : string\n  // \"_print_eval\" : boolean\n  // \"_syntax_check_only\" : boolean\n  // \"_forceRepl\" : boolean\n  // \"noDeprecation\" : boolean\n  // \"noProcessWarnings\" : boolean\n  // \"traceProcessWarnings\" : boolean\n  // \"throwDeprecation\" : boolean\n  // \"_noBrowserGlobals\" : boolean\n  // \"profProcess\" : boolean\n  // \"traceDeprecation\" : boolean\n  // \"_debugWaitConnect\" : boolean\n\n  // \"_preload_modules\" gets looped over so it needs to be known but typically\n  // we don't need to do this so we can just leave it not defined.\n\n  // Side-effectful Methods\n\n  let methodNames = [\n    \"_startProfilerIdleNotifier\",\n    \"_stopProfilerIdleNotifier\",\n    \"_getActiveRequests\",\n    \"_getActiveHandles\",\n    \"reallyExit\",\n    \"abort\",\n    \"chdir\",\n    \"umask\",\n\n    // Start Posix only\n    \"getuid\",\n    \"geteuid\",\n    \"setuid\",\n    \"seteuid\",\n\n    \"setgid\",\n    \"setegid\",\n    \"getgid\",\n    \"getegid\",\n\n    \"getgroups\",\n    \"setgroups\",\n    \"initgroups\",\n    // End Posix only\n\n    \"_kill\",\n\n    \"_debugProcess\",\n    \"_debugPause\",\n    \"_debugEnd\",\n\n    \"hrtime\",\n\n    \"cpuUsage\",\n\n    \"dlopen\",\n\n    \"uptime\",\n    \"memoryUsage\",\n\n    \"_linkedBinding\",\n\n    \"_setupNextTick\",\n    \"_setupPromises\",\n    \"_setupDomainUse\",\n  ];\n\n  for (let name of methodNames) {\n    let abstractMethod = createAbstractValue(realm, FunctionValue, \"process.\" + name);\n    copyProperty(realm, process, obj, name, abstractMethod);\n  }\n\n  let argv0 = new StringValue(realm, process.argv0, \"process.argv0\");\n  Properties.DefinePropertyOrThrow(realm, obj, \"argv0\", {\n    value: argv0,\n    writable: false,\n    configurable: true,\n    enumerable: true,\n  });\n\n  let argv = createAbstractValue(realm, ObjectValue, \"process.argv\");\n\n  Properties.DefinePropertyOrThrow(realm, argv, \"0\", {\n    value: argv0,\n    writable: true,\n    configurable: true,\n    enumerable: true,\n  });\n\n  Properties.DefinePropertyOrThrow(realm, argv, \"1\", {\n    value: new StringValue(realm, processArgv[1]),\n    writable: true,\n    configurable: true,\n    enumerable: true,\n  });\n\n  Properties.DefinePropertyOrThrow(realm, argv, \"indexOf\", {\n    value: new NativeFunctionValue(realm, \"process.argv.indexOf\", \"indexOf\", 0, (context, args) => {\n      return realm.intrinsics.false;\n    }),\n    writable: true,\n    configurable: true,\n    enumerable: true,\n  });\n\n  argv.makeSimple();\n  copyProperty(realm, process, obj, \"argv\", argv);\n\n  let execPath = new StringValue(realm, process.execPath, \"process.execPath\");\n  copyProperty(realm, process, obj, \"execPath\", execPath);\n\n  let env = new ObjectValue(realm, realm.intrinsics.ObjectPrototype, \"process.env\");\n  // TODO: This abstract value doesn't work with a conditional for some reason.\n  Properties.DefinePropertyOrThrow(realm, env, \"NODE_NO_WARNINGS\", {\n    value: new StringValue(realm, \"0\", \"process.env.NODE_NO_WARNINGS\"),\n    writable: true,\n    configurable: true,\n    enumerable: true,\n  });\n\n  // Uncomment this to debug the module resolution system.\n  // DefinePropertyOrThrow(realm, env, \"NODE_DEBUG\", {\n  //   value: new StringValue(\n  //     realm, \"module\", \"process.env.NODE_DEBUG\"\n  //   ),\n  //   writable: true,\n  //   configurable: true,\n  //   enumerable: true,\n  // });\n  env.makeSimple();\n  copyProperty(realm, process, obj, \"env\", env);\n\n  // This method just gets passed a value from the initialization code and\n  // then deletes itself.\n  // TODO: The generated code needs to either always invoke this (make it\n  // abstract) or, if we assume it has been done, it doesn't need to delete it.\n  obj.defineNativeMethod(\"_setupProcessObject\", 1, (self, [pushValueToArray]) => {\n    Properties.OrdinaryDelete(realm, obj, \"_setupProcessObject\");\n    return realm.intrinsics.undefined;\n  });\n\n  // This method injects a generic global promise reject callback. In real\n  // environment we'd want to call this at rejections but we can safely skip it.\n  obj.defineNativeMethod(\"_setupPromises\", 1, (self, [promiseRejectCallback]) => {\n    Properties.OrdinaryDelete(realm, obj, \"_setupPromises\");\n    return realm.intrinsics.undefined;\n  });\n\n  // TODO: Support Promises. Set up a micro task runner and invoke the\n  // tickCallback as needed.\n  obj.defineNativeMethod(\"_setupNextTick\", 1, (self, [tickCallback, runMicrotasks]) => {\n    Properties.OrdinaryDelete(realm, obj, \"_setupNextTick\");\n    let runMicrotasksCallback = new NativeFunctionValue(\n      realm,\n      \"(function() { throw new Error('TODO runMicrotasks not reachable') })\",\n      \"runMicrotasks\",\n      0,\n      (context, args) => {\n        // TODO: Implement Promises and micro tasks.\n        return realm.intrinsics.undefined;\n      }\n    );\n    Properties.OrdinaryDefineOwnProperty(realm, runMicrotasks, \"runMicrotasks\", {\n      value: runMicrotasksCallback,\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    let tickInfo = new ObjectValue(\n      realm,\n      realm.intrinsics.ObjectPrototype,\n      \"(function() { throw new Error('TODO tickInfo is not reachable in the host environment') })\"\n    );\n    Properties.OrdinaryDefineOwnProperty(realm, tickInfo, \"0\", {\n      value: realm.intrinsics.zero,\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    Properties.OrdinaryDefineOwnProperty(realm, tickInfo, \"1\", {\n      value: realm.intrinsics.zero,\n      writable: true,\n      enumerable: true,\n      configurable: true,\n    });\n    return tickInfo;\n  });\n\n  return obj;\n}\n"]}