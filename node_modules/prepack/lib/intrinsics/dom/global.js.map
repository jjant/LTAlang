{"version":3,"sources":["../../../src/intrinsics/dom/global.js"],"names":["realm","global","$GlobalObject","$DefineOwnProperty","value","writable","enumerable","configurable","context","args","callback","throwIfNotConcrete","createErrorThrowCompletion","intrinsics","TypeError","useAbstractInterpretation","generator","undefined","emitCallAndCaptureResult","topVal","preludeGenerator","memoizeReference","emitCall"],"mappings":"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","file":"global.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\n\nimport { FunctionValue, NativeFunctionValue } from \"../../values/index.js\";\nimport initializeDocument from \"./document.js\";\nimport initializeConsole from \"../common/console.js\";\nimport { FatalError } from \"../../errors.js\";\nimport invariant from \"../../invariant.js\";\nimport { TypesDomain, ValuesDomain } from \"../../domains/index.js\";\n\nexport default function(realm: Realm): void {\n  let global = realm.$GlobalObject;\n\n  global.$DefineOwnProperty(\"console\", {\n    value: initializeConsole(realm),\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"self\", {\n    value: global,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"window\", {\n    value: global,\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"document\", {\n    value: initializeDocument(realm),\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"setTimeout\", {\n    value: new NativeFunctionValue(realm, \"global.setTimeout\", \"\", 2, (context, args) => {\n      let callback = args[0].throwIfNotConcrete();\n      if (!(callback instanceof FunctionValue))\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"callback arguments must be function\");\n      if (!realm.useAbstractInterpretation) throw new FatalError(\"TODO #1003: implement global.setTimeout\");\n      invariant(realm.generator !== undefined);\n      let generator = realm.generator;\n      return generator.emitCallAndCaptureResult(\n        TypesDomain.topVal,\n        ValuesDomain.topVal,\n        () => generator.preludeGenerator.memoizeReference(\"global.setTimeout\"),\n        args\n      );\n    }),\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"clearTimeout\", {\n    value: new NativeFunctionValue(realm, \"global.clearTimeout\", \"\", 2, (context, args) => {\n      if (!realm.useAbstractInterpretation) throw new FatalError(\"TODO #1003: implement global.clearTimeout\");\n      invariant(realm.generator !== undefined);\n      let generator = realm.generator;\n      generator.emitCall(() => generator.preludeGenerator.memoizeReference(\"global.clearTimeout\"), args);\n      return realm.intrinsics.undefined;\n    }),\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"setInterval\", {\n    value: new NativeFunctionValue(realm, \"global.setInterval\", \"\", 2, (context, args) => {\n      if (!realm.useAbstractInterpretation) throw new FatalError(\"TODO #1003: implement global.setInterval\");\n      let callback = args[0].throwIfNotConcrete();\n      if (!(callback instanceof FunctionValue))\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"callback arguments must be function\");\n      invariant(realm.generator !== undefined);\n      let generator = realm.generator;\n      return generator.emitCallAndCaptureResult(\n        TypesDomain.topVal,\n        ValuesDomain.topVal,\n        () => generator.preludeGenerator.memoizeReference(\"global.setInterval\"),\n        args\n      );\n    }),\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n\n  global.$DefineOwnProperty(\"clearInterval\", {\n    value: new NativeFunctionValue(realm, \"global.clearInterval\", \"\", 2, (context, args) => {\n      if (!realm.useAbstractInterpretation) throw new FatalError(\"TODO #1003: implement global.clearInterval\");\n      invariant(realm.generator !== undefined);\n      let generator = realm.generator;\n      generator.emitCall(() => generator.preludeGenerator.memoizeReference(\"global.clearInterval\"), args);\n      return realm.intrinsics.undefined;\n    }),\n    writable: true,\n    enumerable: true,\n    configurable: true,\n  });\n}\n"]}