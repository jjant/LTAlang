{"version":3,"sources":["../../../src/intrinsics/ecma262/global.js"],"names":["realm","global","$GlobalObject","$DefineOwnProperty","value","writable","enumerable","configurable","name","intrinsics","typeNames","isCompatibleWith","MOBILE_JSC_VERSION","concat"],"mappings":";;;;;;kBAce,UAASA,KAAT,EAA6B;AAC1C,MAAIC,SAASD,MAAME,aAAnB;;AAEAD,SAAOE,kBAAP,CAA0B,QAA1B,EAAoC;AAClCC,WAAOH,MAD2B;AAElCI,cAAU,IAFwB;AAGlCC,gBAAY,KAHsB;AAIlCC,kBAAc;AAJoB,GAApC;;AAH0C,aAUzB,CAAC,WAAD,EAAc,KAAd,EAAqB,UAArB,CAVyB;AAU1C,2CAAmD;AAA9C,QAAIC,eAAJ;AACHP,WAAOE,kBAAP,CAA0BK,IAA1B,EAAgC;AAC9BJ,aAAOJ,MAAMS,UAAN,CAAiBD,IAAjB,CADuB;AAE9BH,gBAAU,KAFoB;AAG9BC,kBAAY,KAHkB;AAI9BC,oBAAc;AAJgB,KAAhC;AAMD;AACD,MAAIG,YAAY,CACd,QADc,EAEd,QAFc,EAGd,UAHc,EAId,OAJc,EAKd,QALc,EAMd,QANc,EAOd,MAPc,EAQd,MARc,EASd,OATc,EAUd,UAVc,EAWd,WAXc,EAYd,YAZc,EAad,gBAbc,EAcd,aAdc,EAed,UAfc,EAgBd,WAhBc,EAiBd,SAjBc,EAkBd,UAlBc,EAmBd,cAnBc,EAoBd,cApBc,EAqBd,WArBc,EAsBd,YAtBc,EAuBd,YAvBc,EAwBd,KAxBc,EAyBd,KAzBc,EA0Bd,SA1Bc,EA2Bd,YA3Bc,EA4Bd,mBA5Bc,EA6Bd,aA7Bc,EA8Bd,aA9Bc,EA+Bd,aA/Bc,EAgCd,MAhCc,CAAhB;AAkCA,MAAI,CAACV,MAAMW,gBAAN,CAAuBX,MAAMY,kBAA7B,CAAL,EACEF,YAAYA,UAAUG,MAAV,CAAiB,QAAjB,EAA2B,SAA3B,EAAsC,SAAtC,EAAiD,OAAjD,EAA0D,SAA1D,CAAZ;AArDwC;AAAA;AAAA;;AAAA;AAsD1C,yBAAiBH,SAAjB,8HAA4B;AAAA,UAAnBF,KAAmB;;AAC1B;AACA,UAAIR,MAAMS,UAAN,CAAiBD,KAAjB,CAAJ,EAA4B;AAC1BP,eAAOE,kBAAP,CAA0BK,KAA1B,EAAgC;AAC9BJ,iBAAOJ,MAAMS,UAAN,CAAiBD,KAAjB,CADuB;AAE9BH,oBAAU,IAFoB;AAG9BC,sBAAY,KAHkB;AAI9BC,wBAAc;AAJgB,SAAhC;AAMD,OAPD,MAOO;AACL,iCACEC,UAAS,QAAT,IAAqBA,UAAS,SAA9B,IAA2CA,UAAS,SAApD,IAAiEA,UAAS,OAA1E,IAAqFA,UAAS,SADhG;AAGA,iCAAUR,MAAMW,gBAAN,CAAuBX,MAAMY,kBAA7B,CAAV;AACD;AACF;AArEyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,cAsEzB,CACf,YADe,EAEf,UAFe,EAGf,SAHe,EAIf,OAJe,EAKf,MALe,EAMf,UANe,EAOf,WAPe,EAQf,WARe,EASf,oBATe,EAUf,oBAVe,CAtEyB;AAsE1C,+CAWG;AAXE,QAAIJ,mBAAJ;AAYHP,WAAOE,kBAAP,CAA0BK,MAA1B,EAAgC;AAC9BJ,aAAOJ,MAAMS,UAAN,CAAiBD,MAAjB,CADuB;AAE9BH,gBAAU,IAFoB;AAG9BC,kBAAY,KAHkB;AAI9BC,oBAAc;AAJgB,KAAhC;AAMD;AACF,C;;AA3FD","file":"global.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm): void {\n  let global = realm.$GlobalObject;\n\n  global.$DefineOwnProperty(\"global\", {\n    value: global,\n    writable: true,\n    enumerable: false,\n    configurable: true,\n  });\n\n  for (let name of [\"undefined\", \"NaN\", \"Infinity\"]) {\n    global.$DefineOwnProperty(name, {\n      value: realm.intrinsics[name],\n      writable: false,\n      enumerable: false,\n      configurable: false,\n    });\n  }\n  let typeNames = [\n    \"String\",\n    \"Object\",\n    \"Function\",\n    \"Array\",\n    \"Number\",\n    \"RegExp\",\n    \"Date\",\n    \"Math\",\n    \"Error\",\n    \"Function\",\n    \"TypeError\",\n    \"RangeError\",\n    \"ReferenceError\",\n    \"SyntaxError\",\n    \"URIError\",\n    \"EvalError\",\n    \"Boolean\",\n    \"DataView\",\n    \"Float32Array\",\n    \"Float64Array\",\n    \"Int8Array\",\n    \"Int16Array\",\n    \"Int32Array\",\n    \"Map\",\n    \"Set\",\n    \"WeakMap\",\n    \"Uint8Array\",\n    \"Uint8ClampedArray\",\n    \"Uint16Array\",\n    \"Uint32Array\",\n    \"ArrayBuffer\",\n    \"JSON\",\n  ];\n  if (!realm.isCompatibleWith(realm.MOBILE_JSC_VERSION))\n    typeNames = typeNames.concat(\"Symbol\", \"Promise\", \"WeakSet\", \"Proxy\", \"Reflect\");\n  for (let name of typeNames) {\n    // need to check if the property exists (it may not due to --compatibility)\n    if (realm.intrinsics[name]) {\n      global.$DefineOwnProperty(name, {\n        value: realm.intrinsics[name],\n        writable: true,\n        enumerable: false,\n        configurable: true,\n      });\n    } else {\n      invariant(\n        name === \"Symbol\" || name === \"Promise\" || name === \"WeakSet\" || name === \"Proxy\" || name === \"Reflect\"\n      );\n      invariant(realm.isCompatibleWith(realm.MOBILE_JSC_VERSION));\n    }\n  }\n  for (let name of [\n    \"parseFloat\",\n    \"parseInt\",\n    \"console\",\n    \"isNaN\",\n    \"eval\",\n    \"isFinite\",\n    \"encodeURI\",\n    \"decodeURI\",\n    \"encodeURIComponent\",\n    \"decodeURIComponent\",\n  ]) {\n    global.$DefineOwnProperty(name, {\n      value: realm.intrinsics[name],\n      writable: true,\n      enumerable: false,\n      configurable: true,\n    });\n  }\n}\n"]}