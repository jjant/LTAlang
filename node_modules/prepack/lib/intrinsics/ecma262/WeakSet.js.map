{"version":3,"sources":["../../../src/intrinsics/ecma262/WeakSet.js"],"names":["realm","func","args","argCount","NewTarget","iterable","createErrorThrowCompletion","intrinsics","TypeError","set","$WeakSetData","undefined","iter","adder","next","nextValue","statusCompletion"],"mappings":";;;;;;ypBAAA;;;;;;;;;kBA0Be,UAASA,KAAT,EAA4C;AACzD;AACA,MAAIC,OAAO,+BAAwBD,KAAxB,EAA+B,SAA/B,EAA0C,SAA1C,EAAqD,CAArD,EAAwD,UAACE,IAAD,QAAmBC,QAAnB,EAA6BC,SAA7B,EAA2C;AAAA;AAAA,QAAnCC,QAAmC;;AAC5G;AACA,QAAI,CAACD,SAAL,EAAgB;AACd,YAAMJ,MAAMM,0BAAN,CAAiCN,MAAMO,UAAN,CAAiBC,SAAlD,CAAN;AACD;;AAED;AACA,QAAIC,MAAM,2CAA8BT,KAA9B,EAAqCI,SAArC,EAAgD,kBAAhD,EAAoE;AAC5EM,oBAAcC;AAD8D,KAApE,CAAV;;AAIA;AACAF,QAAIC,YAAJ,GAAmB,EAAnB;;AAEA;AACA,QAAIL,aAAaM,SAAjB,EAA4BN,WAAWL,MAAMO,UAAN,CAAiBI,SAA5B;;AAE5B,QAAIC,aAAJ;AAAA,QAAUC,cAAV;AACA;AACA,QAAKR,QAAD,qCAA8CA,QAAD,4BAAjD,EAAuF;AACrFO,aAAOZ,MAAMO,UAAN,CAAiBI,SAAxB;AACAE,cAAQb,MAAMO,UAAN,CAAiBI,SAAzB;AACD,KAHD,MAGO;AACL;AACA;AACAE,cAAQ,iBAAIb,KAAJ,EAAWS,GAAX,EAAgB,KAAhB,CAAR;;AAEA;AACA,UAAI,CAAC,wBAAWT,KAAX,EAAkBa,KAAlB,CAAL,EAA+B;AAC7B,cAAMb,MAAMM,0BAAN,CAAiCN,MAAMO,UAAN,CAAiBC,SAAlD,EAA6D,4BAA7D,CAAN;AACD;;AAED;AACAI,aAAO,yBAAYZ,KAAZ,EAAmBK,QAAnB,CAAP;AACD;AACD;AACA,QAAIO,qCAAJ,EAAoC,OAAOH,GAAP;;AAEpC;AACA,WAAO,IAAP,EAAa;AACX;AACA,UAAIK,OAAO,0BAAad,KAAb,EAAoBY,IAApB,CAAX;;AAEA;AACA,UAAIE,SAAS,KAAb,EAAoB,OAAOL,GAAP;;AAEpB;AACA,UAAIM,YAAY,2BAAcf,KAAd,EAAqBc,IAArB,CAAhB;;AAEA;AACA,UAAI;AACF,0BAAKd,KAAL,EAAYa,KAAZ,EAAmBJ,GAAnB,EAAwB,CAACM,SAAD,CAAxB;AACD,OAFD,CAEE,OAAOC,gBAAP,EAAyB;AACzB,YAAI,EAAEA,yDAAF,CAAJ,EAAqD,MAAMA,gBAAN;AACrD;AACA,cAAM,2BAAchB,KAAd,EAAqBY,IAArB,EAA2BI,gBAA3B,CAAN;AACD;AACF;;AAED,6BAAU,KAAV;AACD,GA5DU,CAAX;;AA8DA,SAAOf,IAAP;AACD,C;;AA/ED;;AACA;;AACA;;AAUA","file":"WeakSet.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue, NullValue, UndefinedValue } from \"../../values/index.js\";\nimport { AbruptCompletion } from \"../../completions.js\";\nimport {\n  OrdinaryCreateFromConstructor,\n  Get,\n  IsCallable,\n  IteratorClose,\n  IteratorValue,\n  GetIterator,\n  IteratorStep,\n  Call,\n} from \"../../methods/index.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  // ECMA262 23.4.1.1\n  let func = new NativeFunctionValue(realm, \"WeakSet\", \"WeakSet\", 0, (args, [iterable], argCount, NewTarget) => {\n    // 1. If NewTarget is undefined, throw a TypeError exception.\n    if (!NewTarget) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let set be ? OrdinaryCreateFromConstructor(NewTarget, \"%WeakSetPrototype%\", « [[WeakSetData]] »).\n    let set = OrdinaryCreateFromConstructor(realm, NewTarget, \"WeakSetPrototype\", {\n      $WeakSetData: undefined,\n    });\n\n    // 3. Set set.[[WeakSetData]] to a new empty List.\n    set.$WeakSetData = [];\n\n    // 4. If iterable is not present, let iterable be undefined.\n    if (iterable === undefined) iterable = realm.intrinsics.undefined;\n\n    let iter, adder;\n    // 5. If iterable is either undefined or null, let iter be undefined.\n    if ((iterable: any) instanceof UndefinedValue || (iterable: any) instanceof NullValue) {\n      iter = realm.intrinsics.undefined;\n      adder = realm.intrinsics.undefined;\n    } else {\n      // 6. Else,\n      // a. Let adder be ? Get(set, \"add\").\n      adder = Get(realm, set, \"add\");\n\n      // b. If IsCallable(adder) is false, throw a TypeError exception.\n      if (!IsCallable(realm, adder)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError, \"IsCallable(adder) is false\");\n      }\n\n      // c. Let iter be ? GetIterator(iterable).\n      iter = GetIterator(realm, iterable);\n    }\n    // 7. If iter is undefined, return set.\n    if (iter instanceof UndefinedValue) return set;\n\n    // 8. Repeat\n    while (true) {\n      // a. Let next be ? IteratorStep(iter).\n      let next = IteratorStep(realm, iter);\n\n      // b. If next is false, return set.\n      if (next === false) return set;\n\n      // c. Let nextValue be ? IteratorValue(next).\n      let nextValue = IteratorValue(realm, next);\n\n      // d. Let status be Call(adder, set, « nextValue »).\n      try {\n        Call(realm, adder, set, [nextValue]);\n      } catch (statusCompletion) {\n        if (!(statusCompletion instanceof AbruptCompletion)) throw statusCompletion;\n        // e. If status is an abrupt completion, return ? IteratorClose(iter, status).\n        throw IteratorClose(realm, iter, statusCompletion);\n      }\n    }\n\n    invariant(false);\n  });\n\n  return func;\n}\n"]}