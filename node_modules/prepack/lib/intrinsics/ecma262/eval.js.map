{"version":3,"sources":["../../../src/intrinsics/ecma262/eval.js"],"names":["realm","context","x","rcontext","getRunningContext","evalRealm","function","$Realm","strictCaller","directEval","PerformEval"],"mappings":";;;;;;ypBAAA;;;;;;;;;kBAee,UAASA,KAAT,EAA4C;AACzD;AACA,SAAO,+BACLA,KADK,EAEL,MAFK,EAGL,MAHK,EAIL,CAJK,EAKL,UAACC,OAAD,QAAkB;AAAA;AAAA,QAAPC,CAAO;;AAChB;AACA,QAAIC,WAAWH,MAAMI,iBAAN,EAAf;AACA,QAAIC,YAAYF,SAASG,QAAT,IAAqB,IAArB,GAA4BN,KAA5B,GAAoCG,SAASG,QAAT,CAAkBC,MAAtE;;AAEA;AACA,QAAIC,eAAe,KAAnB;;AAEA;AACA,QAAIC,aAAa,KAAjB;;AAEA;AACA,WAAO,sBAAUC,WAAV,CAAsBV,KAAtB,EAA6BE,CAA7B,EAAgCG,SAAhC,EAA2CG,YAA3C,EAAyDC,UAAzD,CAAP;AACD,GAlBI,EAmBL,KAnBK,CAAP;AAqBD,C;;AA1BD;;AACA","file":"eval.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue } from \"../../values/index.js\";\nimport { Functions } from \"../../singletons.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  // ECMA262 18.2.1\n  return new NativeFunctionValue(\n    realm,\n    \"eval\",\n    \"eval\",\n    1,\n    (context, [x]) => {\n      // 1. Let evalRealm be the value of the active function object's [[Realm]] internal slot.\n      let rcontext = realm.getRunningContext();\n      let evalRealm = rcontext.function == null ? realm : rcontext.function.$Realm;\n\n      // 2. Let strictCaller be false.\n      let strictCaller = false;\n\n      // 3. Let directEval be false.\n      let directEval = false;\n\n      // 4. Return ? PerformEval(x, evalRealm, strictCaller, directEval).\n      return Functions.PerformEval(realm, x, evalRealm, strictCaller, directEval);\n    },\n    false\n  );\n}\n"]}