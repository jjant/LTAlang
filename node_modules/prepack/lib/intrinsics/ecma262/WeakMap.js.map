{"version":3,"sources":["../../../src/intrinsics/ecma262/WeakMap.js"],"names":["realm","func","args","argCount","NewTarget","iterable","createErrorThrowCompletion","intrinsics","TypeError","map","$WeakMapData","undefined","isCompatibleWith","MOBILE_JSC_VERSION","iter","adder","next","nextItem","throwIfNotConcrete","error","k","kCompletion","v","vCompletion","status","statusCompletion"],"mappings":"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","file":"WeakMap.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { Realm } from \"../../realm.js\";\nimport { NativeFunctionValue, ObjectValue, NullValue, UndefinedValue } from \"../../values/index.js\";\nimport { AbruptCompletion } from \"../../completions.js\";\nimport {\n  OrdinaryCreateFromConstructor,\n  Get,\n  IsCallable,\n  IteratorClose,\n  IteratorValue,\n  GetIterator,\n  IteratorStep,\n  Call,\n} from \"../../methods/index.js\";\nimport invariant from \"../../invariant.js\";\n\nexport default function(realm: Realm): NativeFunctionValue {\n  let func = new NativeFunctionValue(realm, \"WeakMap\", \"WeakMap\", 0, (args, [iterable], argCount, NewTarget) => {\n    // 1. If NewTarget is undefined, throw a TypeError exception.\n    if (!NewTarget) {\n      throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n    }\n\n    // 2. Let map be ? OrdinaryCreateFromConstructor(NewTarget, \"%WeakMapPrototype%\", « [[WeakMapData]] »).\n    let map = OrdinaryCreateFromConstructor(realm, NewTarget, \"WeakMapPrototype\", {\n      $WeakMapData: undefined,\n    });\n\n    // 3. Set map's [[WeakMapData]] internal slot to a new empty List.\n    map.$WeakMapData = [];\n\n    // 4. If iterable is not present, let iterable be undefined.\n    if (iterable && realm.isCompatibleWith(realm.MOBILE_JSC_VERSION)) {\n      throw realm.createErrorThrowCompletion(\n        realm.intrinsics.TypeError,\n        \"the weak map constructor doesn't take arguments\"\n      );\n    }\n    if (!iterable) iterable = realm.intrinsics.undefined;\n\n    // 5. If iterable is either undefined or null, let iter be undefined.\n    let iter, adder;\n    if ((iterable: any) instanceof UndefinedValue || (iterable: any) instanceof NullValue) {\n      adder = realm.intrinsics.undefined;\n      iter = realm.intrinsics.undefined;\n    } else {\n      // 6. Else,\n      // a. Let adder be ? Get(map, \"set\").\n      adder = Get(realm, map, \"set\");\n\n      // b. If IsCallable(adder) is false, throw a TypeError exception.\n      if (!IsCallable(realm, adder)) {\n        throw realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n      }\n\n      // c. Let iter be ? GetIterator(iterable).\n      iter = GetIterator(realm, iterable);\n    }\n\n    // 7. If iter is undefined, return map.\n    if (iter instanceof UndefinedValue) {\n      return map;\n    }\n\n    // 8. Repeat\n    while (true) {\n      // a. Let next be ? IteratorStep(iter).\n      let next = IteratorStep(realm, iter);\n\n      // b. If next is false, return map.\n      if (!next) return map;\n\n      // c. Let nextItem be ? IteratorValue(next).\n      let nextItem = IteratorValue(realm, next).throwIfNotConcrete();\n\n      // d. If Type(nextItem) is not Object, then\n      if (!(nextItem instanceof ObjectValue)) {\n        // i. Let error be Completion{[[Type]]: throw, [[Value]]: a newly created TypeError object, [[Target]]: empty}.\n        let error = realm.createErrorThrowCompletion(realm.intrinsics.TypeError);\n\n        // ii. Return ? IteratorClose(iter, error).\n        throw IteratorClose(realm, iter, error);\n      }\n\n      // e. Let k be Get(nextItem, \"0\").\n      let k;\n      try {\n        k = Get(realm, nextItem, \"0\");\n      } catch (kCompletion) {\n        if (kCompletion instanceof AbruptCompletion) {\n          // f. If k is an abrupt completion, return ? IteratorClose(iter, k).\n          throw IteratorClose(realm, iter, kCompletion);\n        } else throw kCompletion;\n      }\n\n      // g. Let v be Get(nextItem, \"1\").\n      let v;\n      try {\n        v = Get(realm, nextItem, \"1\");\n      } catch (vCompletion) {\n        if (vCompletion instanceof AbruptCompletion) {\n          // h. If v is an abrupt completion, return ? IteratorClose(iter, v).\n          throw IteratorClose(realm, iter, vCompletion);\n        } else throw vCompletion;\n      }\n\n      // i. Let status be Call(adder, map, « k.[[Value]], v.[[Value]] »).\n      let status;\n      try {\n        status = Call(realm, adder, map, [k, v]);\n      } catch (statusCompletion) {\n        if (statusCompletion instanceof AbruptCompletion) {\n          // j. If status is an abrupt completion, return ? IteratorClose(iter, status).\n          throw IteratorClose(realm, iter, statusCompletion);\n        } else throw statusCompletion;\n      }\n      status;\n    }\n\n    invariant(false);\n  });\n\n  return func;\n}\n"]}