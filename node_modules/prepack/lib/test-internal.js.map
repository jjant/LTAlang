{"version":3,"sources":["../scripts/test-internal.js"],"names":["chalk","require","path","fs","search","dir","relative","tests","existsSync","readdirSync","name","loc","join","stat","statSync","isFile","push","file","readFileSync","isDirectory","concat","__dirname","errors","errorList","errorHandler","diagnostic","location","set","runTest","code","console","log","inverse","Map","modelName","sourceMapName","sourceCode","modelCode","undefined","sourceMap","sources","additionalFunctions","marker","includes","i","indexOf","value","substring","length","split","map","funcStr","trim","filePath","fileContents","sourceMapContents","options","internalDebug","compatibility","delayUnsupportedRequires","mathRandomSeed","serialize","initializeMoreModules","sourceMaps","endsWith","serialized","new_map","red","e","error","severity","source","start","line","column","errorCode","message","run","failed","passed","total","test","Math","round","process","exit"],"mappings":"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","file":"test-internal.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { CompilerDiagnostic, type ErrorHandlerResult, FatalError } from \"../lib/errors.js\";\nimport type { BabelNodeSourceLocation } from \"babel-types\";\nimport { prepackSources } from \"../lib/prepack-standalone.js\";\n\nlet chalk = require(\"chalk\");\nlet path = require(\"path\");\nlet fs = require(\"fs\");\n\nfunction search(dir, relative) {\n  let tests = [];\n\n  if (fs.existsSync(dir)) {\n    for (let name of fs.readdirSync(dir)) {\n      let loc = path.join(dir, name);\n      let stat = fs.statSync(loc);\n\n      if (stat.isFile()) {\n        tests.push({\n          file: fs.readFileSync(loc, \"utf8\"),\n          name: path.join(relative, name),\n        });\n      } else if (stat.isDirectory()) {\n        tests = tests.concat(search(loc, path.join(relative, name)));\n      }\n    }\n  }\n\n  return tests;\n}\n\nlet tests = search(`${__dirname}/../facebook/test`, \"facebook/test\");\n\nlet errors: Map<BabelNodeSourceLocation, CompilerDiagnostic>;\nlet errorList: Array<CompilerDiagnostic>;\nfunction errorHandler(diagnostic: CompilerDiagnostic): ErrorHandlerResult {\n  if (diagnostic.location) errors.set(diagnostic.location, diagnostic);\n  else errorList.push(diagnostic);\n  return \"Fail\";\n}\n\nfunction runTest(name: string, code: string): boolean {\n  console.log(chalk.inverse(name));\n  try {\n    errors = new Map();\n    errorList = [];\n    let modelName = name + \".model\";\n    let sourceMapName = name + \".map\";\n    let sourceCode = fs.readFileSync(name, \"utf8\");\n    let modelCode = fs.existsSync(modelName) ? fs.readFileSync(modelName, \"utf8\") : undefined;\n    let sourceMap = fs.existsSync(sourceMapName) ? fs.readFileSync(sourceMapName, \"utf8\") : undefined;\n    let sources = [];\n    let additionalFunctions;\n    if (modelCode) {\n      /* allows specifying additional functions by a comment of the form:\n      // additional function: additional1, additional2\n      */\n      let marker = \"// additional functions:\";\n      if (modelCode.includes(marker)) {\n        let i = modelCode.indexOf(marker);\n        let value = modelCode.substring(i + marker.length, modelCode.indexOf(\"\\n\", i));\n        additionalFunctions = value.split(\",\").map(funcStr => funcStr.trim());\n      }\n      sources.push({ filePath: modelName, fileContents: modelCode });\n    }\n    sources.push({ filePath: name, fileContents: sourceCode, sourceMapContents: sourceMap });\n\n    let options = {\n      internalDebug: true,\n      compatibility: \"jsc-600-1-4-17\",\n      delayUnsupportedRequires: true,\n      mathRandomSeed: \"0\",\n      errorHandler,\n      serialize: true,\n      initializeMoreModules: !modelCode,\n      sourceMaps: !!sourceMap,\n      additionalFunctions: additionalFunctions,\n    };\n    if (name.endsWith(\"/bundle.js~\"))\n      (options: any).additionalFunctions = [\n        \"global.WildeBundle.prepareComponentScript\",\n        \"global.WildeBundle.prepareReact\",\n      ];\n    let serialized = prepackSources(sources, options);\n    let new_map = serialized.map; // force source maps to get computed\n    if (!new_map) console.log(chalk.red(\"No source map\"));\n    if (!serialized) {\n      console.log(chalk.red(\"Error during serialization\"));\n      return false;\n    } else {\n      return true;\n    }\n  } catch (e) {\n    if (!(e instanceof FatalError)) console.log(e);\n    return false;\n  } finally {\n    for (let [loc, error] of errors) {\n      console.log(\n        `${error.severity}: ${loc.source || \"\"} ${loc.start.line}:${loc.start.column +\n          1} ${error.errorCode} ${error.message}`\n      );\n    }\n    for (let error of errorList) {\n      console.log(`${error.severity}: ${error.errorCode} ${error.message}`);\n    }\n  }\n}\n\nfunction run() {\n  let failed = 0;\n  let passed = 0;\n  let total = 0;\n\n  for (let test of tests) {\n    if (!test.name.endsWith(\".js\")) continue;\n\n    total++;\n    if (runTest(test.name, test.file)) passed++;\n    else failed++;\n  }\n\n  console.log(\"Passed:\", `${passed}/${total}`, (Math.round(passed / total * 100) || 0) + \"%\");\n  return failed === 0;\n}\n\nif (!run()) process.exit(1);\n"]}