{"version":3,"sources":["../scripts/test262-runner.js"],"names":["EOL","numCPUs","cpus","length","require","install","TestTask","file","type","sentinel","obj","TestFileInfo","fromObject","Error","JSON","stringify","location","isES6","groupName","dirname","DoneMessage","test","testResult","testResults","msg","Array","isArray","ErrorMessage","err","TestResult","passed","strict","QuitMessage","BannerData","info","es5id","es6id","description","flags","features","includes","negative","bd","MasterProgramArgs","verbose","timeout","bailAfter","cpuScale","statusFile","filterString","singleThreaded","relativeTestPath","WorkerProgramArgs","ArgsParseError","message","prototype","Object","defineProperty","value","alt","getOwnPropertyNames","forEach","key","configurable","writable","main","isMaster","args","masterArgsParse","masterRun","isWorker","workerArgsParse","workerRun","e","console","log","usage","exit","argv","parsedArgs","slice","string","boolean","default","stdout","WriteStream","Infinity","_","programArgs","testPath","__dirname","tests","getFilesSync","filter","originalTestLength","testFilterByMetadata","groups","masterRunSingleProcess","masterRunMultiProcess","numFiltered","granularity","Math","floor","harnesses","getHarnesses","numLeft","t","handleTest","results","ok","handleTestResults","progress","getProgressBar","handleFinished","on","numWorkers","i","fork","exitCount","worker","code","signal","giveTask","send","pop","handle","errMsg","process","pid","done","killWorkers","workers","earlierNumSkipped","numPassed","numPassedES5","numPassedES6","numFailed","numFailedES5","numFailedES6","numSkipped","numTimeouts","failed_groups","group","group_passed","group_failed","group_es5_passed","group_es5_failed","group_es6_passed","group_es6_failed","relative","join","errmsg","testName","all_passed","was_skipped","result","create_test_message","toPercentage","yellow","push","status","groupMessage","writeFileSync","red","currentTestLength","workerID","kill","x","total","name","success","isStrict","checkmark","green","xmark","parts","split","line","stack","harnessPath","harnessesList","harness","basename","readFileSync","toString","task","handleTestResultsMultiProcess","jsonCircularSerializationErr","cb","prepareTest","testFilterByContents","banners","testFileContents","keepThisTest","filterFeatures","filterFlags","filterIncludes","filterDescription","filterCircleCI","filterSneakyGenerators","runTestWithStrictness","filepath","stat","statSync","isFile","isDirectory","subFiles","readdirSync","flatten","map","f","arr","reduce","a","b","concat","filterFn","readFile","contents","contentsStr","getBanners","bannerParseErr","createRealm","realm","strictlyMonotonicDateNow","executionContext","pushContext","$","defineNativeMethod","context","buffer","sourceText","intrinsics","undefined","defineNativeProperty","$GlobalObject","glob","arg","runTest","data","completion","$GlobalEnv","execute","$Prototype","intrinsicName","interpreterStack","$HasProperty","nativeStack","_err","is_es6","phase_early","indexOf","end_of_comment","esid_pending","skipTests","skipTests6","env","NIGHTLY_BUILD","fn","strictResult","unStrictResult","finalResult","fileContents","match","bannerText","safeLoad"],"mappings":"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","file":"test262-runner.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n/* eslint-disable no-extend-native */\n\nimport { AbruptCompletion, ThrowCompletion } from \"../lib/completions.js\";\nimport { ObjectValue, StringValue } from \"../lib/values/index.js\";\nimport { Realm, ExecutionContext } from \"../lib/realm.js\";\nimport construct_realm from \"../lib/construct_realm.js\";\nimport initializeGlobals from \"../lib/globals.js\";\nimport { DetachArrayBuffer } from \"../lib/methods/arraybuffer.js\";\nimport { ToStringPartial } from \"../lib/methods/to.js\";\nimport { Get } from \"../lib/methods/get.js\";\nimport invariant from \"../lib/invariant.js\";\n\nimport yaml from \"js-yaml\";\nimport chalk from \"chalk\";\nimport path from \"path\";\n// need to use graceful-fs for single-process code because it opens too many\n// files\nimport fs from \"graceful-fs\";\nimport cluster from \"cluster\";\nimport os from \"os\";\nimport tty from \"tty\";\nimport minimist from \"minimist\";\nimport process from \"process\";\n\nconst EOL = os.EOL;\nconst numCPUs = os.cpus().length;\nrequire(\"source-map-support\").install();\n\ntype HarnessMap = { [key: string]: string };\ntype TestRecord = { test: TestFileInfo, result: TestResult[] };\ntype GroupsMap = { [key: string]: TestRecord[] };\n\n// A TestTask is a task for a worker process to execute, which contains a\n// single test to run\nclass TestTask {\n  static sentinel: string = \"TestTask\";\n  type: string;\n  file: TestFileInfo;\n\n  constructor(file: TestFileInfo) {\n    this.type = TestTask.sentinel;\n    this.file = file;\n  }\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  static fromObject(obj: Object): TestTask {\n    // attempt to coerce the object into a test task\n    if (\"file\" in obj && typeof obj.file === \"object\") {\n      return new TestTask(TestFileInfo.fromObject(obj.file));\n    } else {\n      throw new Error(`Cannot be converted to a TestTask: ${JSON.stringify(obj)}`);\n    }\n  }\n}\n\n/**\n * Information about a test file to be run.\n *\n */\nclass TestFileInfo {\n  // Location of the test on the filesystem, call fs.readFile on this\n  location: string;\n  isES6: boolean;\n  groupName: string;\n\n  constructor(location: string, isES6: boolean) {\n    this.location = location;\n    this.isES6 = isES6;\n    this.groupName = path.dirname(location);\n  }\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  static fromObject(obj: Object): TestFileInfo {\n    // attempt to coerce the object into a TestFileInfo\n    if (\"location\" in obj && typeof obj.location === \"string\" && \"isES6\" in obj && typeof obj.isES6 === \"boolean\") {\n      return new TestFileInfo(obj.location, obj.isES6);\n    } else {\n      throw new Error(`Cannot be converted to a TestFileInfo: ${JSON.stringify(obj)}`);\n    }\n  }\n}\n\n// A Message sent by a worker to the master to say that it has finished its\n// current task successfully\nclass DoneMessage {\n  static sentinel: string = \"DoneMessage\";\n  type: string;\n  test: TestFileInfo;\n  testResults: TestResult[];\n\n  constructor(test: TestFileInfo, testResult: TestResult[] = []) {\n    this.type = DoneMessage.sentinel;\n    this.test = test;\n    this.testResults = testResult;\n  }\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  static fromObject(obj: Object): DoneMessage {\n    if (!(\"type\" in obj && typeof obj.type === \"string\" && obj.type === DoneMessage.sentinel)) {\n      throw new Error(`Cannot be converted to a DoneMessage: ${JSON.stringify(obj)}`);\n    }\n    if (!(\"test\" in obj && typeof obj.test === \"object\")) {\n      throw new Error(\"A DoneMessage must have a test\");\n    }\n    let msg = new DoneMessage(obj.test);\n    if (\"testResults\" in obj && typeof obj.testResults === \"object\" && Array.isArray(obj.testResults)) {\n      msg.testResults = obj.testResults;\n    }\n    return msg;\n  }\n}\n\nclass ErrorMessage {\n  static sentinel: string = \"ErrorMessage\";\n  type: string;\n  err: Error;\n\n  constructor(err: Error) {\n    this.type = ErrorMessage.sentinel;\n    this.err = err;\n  }\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  static fromObject(obj: Object): ErrorMessage {\n    if (!(\"type\" in obj && typeof obj.type === \"string\" && obj.type === ErrorMessage.sentinel)) {\n      throw new Error(`Cannot be converted to an ErrorMessage: ${JSON.stringify(obj)}`);\n    }\n    if (!(\"err\" in obj && typeof obj.err === \"object\")) {\n      throw new Error(`Cannot be converted to an ErrorMessage: ${JSON.stringify(obj)}`);\n    }\n    return new ErrorMessage(obj.err);\n  }\n}\n\n/**\n * TestResult contains information about a test that ran.\n */\nclass TestResult {\n  passed: boolean;\n  strict: boolean;\n  err: ?Error;\n\n  constructor(passed: boolean, strict: boolean, err: ?Error = null) {\n    this.passed = passed;\n    this.strict = strict;\n    this.err = err;\n  }\n}\n\n// A Message sent by the master to workers to say that there is nothing more\n// to do\nclass QuitMessage {\n  static sentinel: string = \"QuitMessage\";\n  type: string;\n\n  constructor() {\n    this.type = QuitMessage.sentinel;\n  }\n\n  static fromObject(obj): QuitMessage {\n    return new QuitMessage();\n  }\n}\n\nclass BannerData {\n  info: string;\n  es5id: string;\n  es6id: string;\n  description: string;\n  flags: string[];\n  features: string[];\n  includes: string[];\n  // eslint-disable-next-line flowtype/no-weak-types\n  negative: Object;\n\n  constructor() {\n    this.info = \"\";\n    this.es5id = \"\";\n    this.es6id = \"\";\n    this.description = \"\";\n    this.flags = [];\n    this.features = [];\n    this.includes = [];\n    this.negative = {};\n  }\n\n  // eslint-disable-next-line flowtype/no-weak-types\n  static fromObject(obj: Object): BannerData {\n    let bd = new BannerData();\n    if (\"info\" in obj && typeof obj.info === \"string\") {\n      bd.info = obj.info;\n    }\n    if (\"es5id\" in obj && typeof obj.es5id === \"string\") {\n      bd.es5id = obj.es5id;\n    }\n    if (\"es6id\" in obj && typeof obj.es6id === \"string\") {\n      bd.es6id = obj.es6id;\n    }\n    if (\"description\" in obj && typeof obj.description === \"string\") {\n      bd.description = obj.description;\n    }\n    if (\"flags\" in obj && typeof obj.flags === \"object\" && Array.isArray(obj.flags)) {\n      bd.flags = obj.flags;\n    }\n    if (\"features\" in obj && typeof obj.features === \"object\" && Array.isArray(obj.features)) {\n      bd.features = obj.features;\n    }\n    if (\"includes\" in obj && typeof obj.includes === \"object\" && Array.isArray(obj.includes)) {\n      bd.includes = obj.includes;\n    }\n    if (\"negative\" in obj && typeof obj.negative === \"object\") {\n      bd.negative = obj.negative;\n    }\n    return bd;\n  }\n}\n\nclass MasterProgramArgs {\n  verbose: boolean;\n  timeout: number;\n  bailAfter: number;\n  cpuScale: number;\n  statusFile: string;\n  filterString: string;\n  singleThreaded: boolean;\n  relativeTestPath: string;\n\n  constructor(\n    verbose: boolean,\n    timeout: number,\n    bailAfter: number,\n    cpuScale: number,\n    statusFile: string,\n    filterString: string,\n    singleThreaded: boolean,\n    relativeTestPath: string\n  ) {\n    this.verbose = verbose;\n    this.timeout = timeout;\n    this.bailAfter = bailAfter;\n    this.cpuScale = cpuScale;\n    this.statusFile = statusFile;\n    this.filterString = filterString;\n    this.singleThreaded = singleThreaded;\n    this.relativeTestPath = relativeTestPath;\n  }\n}\n\nclass WorkerProgramArgs {\n  timeout: number;\n  relativeTestPath: string;\n\n  constructor(timeout: number, relativeTestPath: string) {\n    this.timeout = timeout;\n    this.relativeTestPath = relativeTestPath;\n  }\n}\n\n// NOTE: inheriting from Error does not seem to pass through an instanceof\n// check\nclass ArgsParseError {\n  message: string;\n\n  constructor(message: string) {\n    this.message = message;\n  }\n}\n\nif (!(\"toJSON\" in Error.prototype)) {\n  // $FlowFixMe this needs to become defined for Error to be serialized\n  Object.defineProperty(Error.prototype, \"toJSON\", {\n    // eslint-disable-line\n    value: function() {\n      let alt = {};\n      Object.getOwnPropertyNames(this).forEach(function(key) {\n        alt[key] = this[key];\n      }, this);\n      return alt;\n    },\n    configurable: true,\n    writable: true,\n  });\n}\n\nmain();\n\nfunction main(): number {\n  try {\n    if (cluster.isMaster) {\n      let args = masterArgsParse();\n      masterRun(args);\n    } else if (cluster.isWorker) {\n      let args = workerArgsParse();\n      workerRun(args);\n    } else {\n      throw new Error(\"Not a master or a worker\");\n    }\n  } catch (e) {\n    if (e instanceof ArgsParseError) {\n      console.log(\"Illegal argument: %s.\\n%s\", e.message, usage());\n    } else {\n      console.log(e);\n    }\n    process.exit(1);\n  }\n  return 0;\n}\n\nfunction usage(): string {\n  return (\n    `Usage: ${process.argv[0]} ${process.argv[1]} ` +\n    EOL +\n    `[--verbose] [--timeout <number>] [--bailAfter <number>] ` +\n    EOL +\n    `[--cpuScale <number>] [--statusFile <string>] [--singleThreaded] [--relativeTestPath <string>]`\n  );\n}\n\nfunction masterArgsParse(): MasterProgramArgs {\n  let parsedArgs = minimist(process.argv.slice(2), {\n    string: [\"statusFile\", \"relativeTestPath\"],\n    boolean: [\"verbose\", \"singleThreaded\"],\n    default: {\n      verbose: process.stdout instanceof tty.WriteStream ? false : true,\n      statusFile: \"\",\n      timeout: 10,\n      cpuScale: 1,\n      bailAfter: Infinity,\n      singleThreaded: false,\n      relativeTestPath: \"/../test/test262\",\n    },\n  });\n  let filterString = parsedArgs._[0];\n  if (typeof parsedArgs.verbose !== \"boolean\") {\n    throw new ArgsParseError(\"verbose must be a boolean (either --verbose or not)\");\n  }\n  if (typeof parsedArgs.timeout !== \"number\") {\n    throw new ArgsParseError(\"timeout must be a number (in seconds) (--timeout 10)\");\n  }\n  if (typeof parsedArgs.bailAfter !== \"number\") {\n    throw new ArgsParseError(\"bailAfter must be a number (--bailAfter 10)\");\n  }\n  if (typeof parsedArgs.cpuScale !== \"number\") {\n    throw new ArgsParseError(\"cpuScale must be a number (--cpuScale 0.5)\");\n  }\n  if (typeof parsedArgs.statusFile !== \"string\") {\n    throw new ArgsParseError(\"statusFile must be a string (--statusFile file.txt)\");\n  }\n  if (typeof parsedArgs.singleThreaded !== \"boolean\") {\n    throw new ArgsParseError(\"singleThreaded must be a boolean (either --singleThreaded or not)\");\n  }\n  if (typeof parsedArgs.relativeTestPath !== \"string\") {\n    throw new ArgsParseError(\"relativeTestPath must be a string (--relativeTestPath /../test/test262)\");\n  }\n  let programArgs = new MasterProgramArgs(\n    parsedArgs.verbose,\n    parsedArgs.timeout,\n    parsedArgs.bailAfter,\n    parsedArgs.cpuScale,\n    parsedArgs.statusFile,\n    filterString,\n    parsedArgs.singleThreaded,\n    parsedArgs.relativeTestPath\n  );\n  if (programArgs.filterString) {\n    // if filterstring is provided, assume that verbosity is desired\n    programArgs.verbose = true;\n  }\n  return programArgs;\n}\n\nfunction workerArgsParse(): WorkerProgramArgs {\n  let parsedArgs = minimist(process.argv.slice(2), {\n    default: {\n      timeout: 10,\n      relativeTestPath: \"/../test/test262\",\n    },\n  });\n  if (typeof parsedArgs.timeout !== \"number\") {\n    throw new ArgsParseError(\"timeout must be a number (in seconds) (--timeout 10)\");\n  }\n  if (typeof parsedArgs.relativeTestPath !== \"string\") {\n    throw new ArgsParseError(\"relativeTestPath must be a string (--relativeTestPath /../test/test262)\");\n  }\n  return new WorkerProgramArgs(parsedArgs.timeout, parsedArgs.relativeTestPath);\n}\n\nfunction masterRun(args: MasterProgramArgs) {\n  let testPath = `${__dirname}` + args.relativeTestPath + \"/test\";\n  let tests = getFilesSync(testPath);\n  // remove tests that don't need to be run\n  if (args.filterString) tests = tests.filter(test => test.location.includes(args.filterString));\n  const originalTestLength = tests.length;\n  tests = tests.filter(test => testFilterByMetadata(test));\n  let groups: GroupsMap = {};\n\n  // Now that all the tasks are ready, start up workers to begin processing\n  // if single threaded, use that route instead\n  if (args.singleThreaded) {\n    masterRunSingleProcess(args, groups, tests, originalTestLength - tests.length);\n  } else {\n    masterRunMultiProcess(args, groups, tests, originalTestLength - tests.length);\n  }\n}\n\nfunction masterRunSingleProcess(\n  args: MasterProgramArgs,\n  groups: GroupsMap,\n  tests: TestFileInfo[],\n  numFiltered: number\n): void {\n  console.log(`Running ${tests.length} tests as a single process`);\n  // print out every 5 percent (more granularity than multi-process because multi-process\n  // runs a lot faster)\n  const granularity = Math.floor(tests.length / 20);\n  let harnesses = getHarnesses(args.relativeTestPath);\n  let numLeft = tests.length;\n  for (let t of tests) {\n    handleTest(t, harnesses, args.timeout, (err, results) => {\n      if (err) {\n        if (args.verbose) {\n          console.log(err);\n        }\n      } else {\n        let ok = handleTestResults(groups, t, results);\n        if (!ok) {\n          // handleTestResults returns false if a failure threshold was exceeded\n          throw new Error(\"Too many test failures\");\n        }\n        let progress = getProgressBar(numLeft, tests.length, granularity);\n        if (progress) {\n          console.log(progress);\n        }\n      }\n      numLeft--;\n      if (numLeft === 0) {\n        // all done\n        process.exit(handleFinished(args, groups, numFiltered));\n      }\n    });\n  }\n}\n\nfunction masterRunMultiProcess(\n  args: MasterProgramArgs,\n  groups: GroupsMap,\n  tests: TestFileInfo[],\n  numFiltered: number\n): void {\n  if (!cluster.on) {\n    // stop flow errors on \"cluster.on\"\n    throw new Error(\"cluster is malformed\");\n  }\n  const granularity = Math.floor(tests.length / 10);\n  const originalTestLength = tests.length;\n  // Fork workers.\n  const numWorkers = Math.floor(numCPUs * args.cpuScale);\n  console.log(`Master starting up, forking ${numWorkers} workers`);\n  for (let i = 0; i < numWorkers; i++) {\n    cluster.fork();\n  }\n\n  let exitCount = 0;\n  cluster.on(\"exit\", (worker, code, signal) => {\n    exitCount++;\n    if (exitCount === numWorkers) {\n      process.exit(handleFinished(args, groups, numFiltered));\n    }\n  });\n\n  const giveTask = worker => {\n    // grab another test to run and give it to the child process\n    if (tests.length === 0) {\n      worker.send(new QuitMessage());\n    } else {\n      worker.send(new TestTask(tests.pop()));\n    }\n  };\n\n  cluster.on(\"message\", (worker, message, handle) => {\n    switch (message.type) {\n      case ErrorMessage.sentinel:\n        let errMsg = ErrorMessage.fromObject(message);\n        // just skip the error, thus skipping that test\n        if (args.verbose) {\n          console.log(`An error occurred in worker #${worker.process.pid}:`);\n          console.log(errMsg.err);\n        }\n        giveTask(worker);\n        break;\n      case DoneMessage.sentinel:\n        let done = DoneMessage.fromObject(message);\n        let ok = handleTestResults(groups, done.test, done.testResults);\n        if (!ok) {\n          // bail\n          killWorkers(cluster.workers);\n          handleFinished(args, groups, numFiltered);\n          process.exit(1);\n        }\n        giveTask(worker);\n        let progress = getProgressBar(tests.length, originalTestLength, granularity);\n        if (progress) {\n          console.log(progress);\n        }\n        break;\n      default:\n        throw new Error(`Master got an unexpected message: ${JSON.stringify(message)}`);\n    }\n  });\n\n  cluster.on(\"online\", worker => {\n    giveTask(worker);\n  });\n}\n\nfunction handleFinished(args: MasterProgramArgs, groups: GroupsMap, earlierNumSkipped: number): number {\n  let numPassed = 0;\n  let numPassedES5 = 0;\n  let numPassedES6 = 0;\n  let numFailed = 0;\n  let numFailedES5 = 0;\n  let numFailedES6 = 0;\n  let numSkipped = earlierNumSkipped;\n  let numTimeouts = 0;\n  let failed_groups = [];\n  for (let group in groups) {\n    // count some totals\n    let group_passed = 0;\n    let group_failed = 0;\n    let group_es5_passed = 0;\n    let group_es5_failed = 0;\n    let group_es6_passed = 0;\n    let group_es6_failed = 0;\n    let groupName = path.relative(path.join(__dirname, \"..\", \"..\", \"test\"), group);\n    let msg = \"\";\n    let errmsg = \"\";\n    msg += `${groupName}: `;\n    for (let t of groups[group]) {\n      let testName = path.relative(group, t.test.location);\n      let all_passed = true;\n      let was_skipped = true;\n      for (let testResult of t.result) {\n        was_skipped = false;\n        if (!testResult.passed) {\n          all_passed = false;\n          if (args.verbose) {\n            errmsg +=\n              create_test_message(testName, testResult.passed, testResult.err, t.test.isES6, testResult.strict) + EOL;\n          }\n          if (testResult.err && testResult.err.message === \"Timed out\") {\n            numTimeouts++;\n          }\n        }\n      }\n      if (was_skipped) {\n        numSkipped++;\n      } else if (all_passed) {\n        group_passed++;\n        if (t.test.isES6) {\n          group_es6_passed++;\n        } else {\n          group_es5_passed++;\n        }\n      } else {\n        group_failed++;\n        if (t.test.isES6) {\n          group_es6_failed++;\n        } else {\n          group_es5_failed++;\n        }\n      }\n    }\n    msg +=\n      `Passed: ${group_passed} / ${group_passed + group_failed} ` +\n      `(${toPercentage(group_passed, group_passed + group_failed)}%) ` +\n      chalk.yellow(\"(es5)\") +\n      `: ${group_es5_passed} / ` +\n      `${group_es5_passed + group_es5_failed} ` +\n      `(${toPercentage(group_es5_passed, group_es5_passed + group_es5_failed)}%) ` +\n      chalk.yellow(\"(es6)\") +\n      `: ${group_es6_passed} / ` +\n      `${group_es6_passed + group_es6_failed} ` +\n      `(${toPercentage(group_es6_passed, group_es6_passed + group_es6_failed)}%)`;\n    if (args.verbose) {\n      console.log(msg);\n      if (errmsg) {\n        console.log(errmsg);\n      }\n    }\n    if (group_es5_failed + group_es6_failed > 0) {\n      failed_groups.push(msg);\n    }\n\n    numPassed += group_passed;\n    numPassedES5 += group_es5_passed;\n    numPassedES6 += group_es6_passed;\n    numFailed += group_failed;\n    numFailedES5 += group_es5_failed;\n    numFailedES6 += group_es6_failed;\n  }\n  let status =\n    `=== RESULTS ===` +\n    EOL +\n    `Passes: ${numPassed} / ${numPassed + numFailed} ` +\n    `(${toPercentage(numPassed, numPassed + numFailed)}%)` +\n    EOL +\n    `ES5 passes: ${numPassedES5} / ${numPassedES5 + numFailedES5} ` +\n    `(${toPercentage(numPassedES5, numPassedES5 + numFailedES5)}%) ` +\n    EOL +\n    `ES6 passes: ${numPassedES6} / ${numPassedES6 + numFailedES6} ` +\n    `(${toPercentage(numPassedES6, numPassedES6 + numFailedES6)}%)` +\n    EOL +\n    `Skipped: ${numSkipped}` +\n    EOL +\n    `Timeouts: ${numTimeouts}` +\n    EOL;\n  console.log(status);\n  if (failed_groups.length !== 0) {\n    console.log(\"Groups with failures:\");\n    for (let groupMessage of failed_groups) {\n      console.log(groupMessage);\n    }\n  }\n  if (args.statusFile) {\n    fs.writeFileSync(args.statusFile, status);\n  }\n\n  // exit status\n  if (!args.filterString && (numPassedES5 < 11798 || numPassedES6 < 5245 || numTimeouts > 0)) {\n    console.log(chalk.red(\"Overall failure. Expected more tests to pass!\"));\n    return 1;\n  } else {\n    // use 0 to avoid the npm error messages\n    return 0;\n  }\n}\n\nfunction getProgressBar(currentTestLength: number, originalTestLength: number, granularity: number): string {\n  if (currentTestLength % granularity === 0 && currentTestLength !== 0) {\n    // print out a percent of tests completed to keep the user informed\n    return `Running... ${toPercentage(originalTestLength - currentTestLength, originalTestLength)}%`;\n  } else {\n    return \"\";\n  }\n}\n\n// Returns false if test processing should stop.\nfunction handleTestResults(groups: GroupsMap, test: TestFileInfo, testResults: TestResult[]): boolean {\n  // test results are in, add it to its corresponding group\n  if (!(test.groupName in groups)) {\n    groups[test.groupName] = [];\n  }\n  groups[test.groupName].push({ test: test, result: testResults });\n  return true;\n}\n\n// $FlowFixMe cluster.Worker is marked as not exported by the node API by flow.\nfunction killWorkers(workers: { [index: string]: cluster.Worker }): void {\n  for (let workerID in workers) {\n    workers[workerID].kill();\n  }\n}\n\nfunction toPercentage(x: number, total: number): number {\n  if (total === 0) {\n    return 100;\n  }\n  return Math.floor(x / total * 100);\n}\n\nfunction create_test_message(name: string, success: boolean, err: ?Error, isES6: boolean, isStrict: boolean): string {\n  const checkmark = chalk.green(\"\\u2713\");\n  const xmark = chalk.red(\"\\u2717\");\n  let msg = \"\\t\";\n  msg += (success ? checkmark : xmark) + \" \";\n  msg += `${isES6 ? chalk.yellow(\"(es6) \") : \"\"}${isStrict ? \"(strict)\" : \"(nostrict)\"}: ${name}`;\n  if (!success) {\n    invariant(err, \"Error must be non null if success is false\");\n    if (err.message) {\n      // split the message by newline, add tabs, and join\n      let parts = err.message.split(EOL);\n      for (let line of parts) {\n        msg += EOL + `\\t\\t${line}`;\n      }\n      msg += EOL;\n    } else if (err.stack) {\n      msg += JSON.stringify(err.stack);\n    }\n  }\n  return msg;\n}\n\nfunction getHarnesses(relativeTestPath: string): HarnessMap {\n  let harnessPath = `${__dirname}` + relativeTestPath + \"/harness\";\n  let harnessesList = getFilesSync(harnessPath);\n  // convert to a mapping from harness name to file contents\n  let harnesses: HarnessMap = {};\n  for (let harness of harnessesList) {\n    // sync is fine, it's an initialization stage and there's not that many\n    // harnesses\n    harnesses[path.basename(harness.location)] = fs.readFileSync(harness.location).toString();\n  }\n  return harnesses;\n}\n\nfunction workerRun(args: WorkerProgramArgs) {\n  // NOTE: all harnesses (including contents of harness files) need to be\n  // used on workers. It needs to either be read from the fs once and\n  // distributed via IPC or once from each process. This is the\n  // \"once from each process\" approach.\n  // get all the harnesses\n  let harnesses = getHarnesses(args.relativeTestPath);\n  // we're a worker, run a portion of the tests\n  process.on(\"message\", message => {\n    switch (message.type) {\n      case TestTask.sentinel:\n        // begin executing this TestTask\n        let task = TestTask.fromObject(message);\n        handleTest(task.file, harnesses, args.timeout, (err, results) => {\n          handleTestResultsMultiProcess(err, task.file, results);\n        });\n        break;\n      case QuitMessage.sentinel:\n        process.exit(0);\n        break;\n      default:\n        throw new Error(\n          `Worker #${process.pid} got an unexpected message:\n          ${JSON.stringify(message)}`\n        );\n    }\n  });\n}\n\nfunction handleTestResultsMultiProcess(err: ?Error, test: TestFileInfo, testResults: TestResult[]): void {\n  if (err) {\n    // $FlowFixMe flow says \"process.send\" could be undefined\n    process.send(new ErrorMessage(err));\n  } else {\n    let msg = new DoneMessage(test);\n    for (let t of testResults) {\n      msg.testResults.push(t);\n    }\n    try {\n      // $FlowFixMe flow says \"process.send\" could be undefined\n      process.send(msg);\n    } catch (jsonCircularSerializationErr) {\n      // JSON circular serialization, ThrowCompletion is too deep to be\n      // serialized!\n      // Solution, truncate the \"err\" field if this happens\n      for (let t of msg.testResults) {\n        if (t.err) {\n          t.err = new Error(t.err.message);\n        }\n      }\n      // now try again\n      // $FlowFixMe flow says \"process.send\" could be undefined\n      process.send(msg);\n    }\n  }\n}\n\nfunction handleTest(\n  test: TestFileInfo,\n  harnesses: HarnessMap,\n  timeout: number,\n  cb: (err: ?Error, testResults: TestResult[]) => void\n): void {\n  prepareTest(test, testFilterByContents, (err, banners, testFileContents) => {\n    if (err != null) {\n      cb(err, []);\n      return;\n    }\n    if (!banners) {\n      // skip this test\n      cb(null, []);\n    } else {\n      invariant(testFileContents, \"testFileContents should not be null if banners are not None\");\n      // filter out by flags, features, and includes\n      let keepThisTest =\n        filterFeatures(banners) &&\n        filterFlags(banners) &&\n        filterIncludes(banners) &&\n        filterDescription(banners) &&\n        filterCircleCI(banners) &&\n        filterSneakyGenerators(banners, testFileContents);\n      let testResults = [];\n      if (keepThisTest) {\n        // now run the test\n        testResults = runTestWithStrictness(test, testFileContents, banners, harnesses, timeout);\n      }\n      cb(null, testResults);\n    }\n  });\n}\n\n/**\n * FIXME: this code is unsound in the presence of ENOENT (file not found)\n * This function returns nested arrays of all the file names. It can be\n * flattened at the call site, but the type hint is incorrect.\n * DON'T USE THIS FUNCTION until it is fixed to behave exactly like getFilesSync\n */\n/*\nfunction getFiles(\n  filepath: string,\n): Promise<TestFileInfo[]> {\n  return new Promise((resolve, reject) => {\n    fs.stat(filepath, (err, stat) => {\n      if (err !== null) {\n        reject(err);\n      } else {\n        if (stat.isFile()) {\n          // return an array of size 1\n          resolve([new TestFileInfo(filepath)]);\n        } else if (stat.isDirectory()) {\n          // recurse on its children\n          fs.readdir(filepath, (err, files) => {\n            if (err !== null) {\n              reject(err);\n            } else {\n              // FIXME flattening bug\n              // tmp is Promise<TestFileInfo[]>[] (array of promises of arrays)\n              // want to flatten that into Promise<TestFileInfo[]> where each\n              // promise is added to a single array\n              let tmp = files.map(f => getFiles(path.join(filepath, f)));\n              resolve(Promise.all(tmp));\n            }\n          });\n        }\n      }\n    });\n  });\n}\n*/\n\n/**\n * getFilesSync returns a TestFileInfo for each file that is underneath the\n * directory ${filepath}. If ${filepath} is just a file, then it returns an\n * array of size 1.\n * This function synchronously fetches from the filesystem, as such it should\n * only be used in initialization code that only runs once.\n */\nfunction getFilesSync(filepath: string): TestFileInfo[] {\n  let stat = fs.statSync(filepath);\n  if (stat.isFile()) {\n    return [new TestFileInfo(filepath, false)];\n  } else if (stat.isDirectory()) {\n    let subFiles = fs.readdirSync(filepath);\n    return flatten(\n      subFiles.map(f => {\n        return getFilesSync(path.join(filepath, f));\n      })\n    );\n  } else {\n    throw new Error(\"That type of file is not supported\");\n  }\n}\n\nfunction flatten<T>(arr: Array<Array<T>>): Array<T> {\n  return arr.reduce((a, b) => {\n    return a.concat(b);\n  }, []);\n}\n\n/**\n * prepareTest opens the file corresponding to ${test} and calls ${cb} on the\n * results, expect the ones for which ${filterFn} returns false.\n * The value passed to ${cb} will be an error if the file could not be read,\n * or the banner data for the test if successful.\n * NOTE: if the test file contents match the filter function given, ${cb} will\n * not be called for that test.\n */\nfunction prepareTest(\n  test: TestFileInfo,\n  filterFn: (test: TestFileInfo, fileContents: string) => boolean,\n  cb: (err: ?Error, res: ?BannerData, testFileContents: ?string) => void\n): void {\n  fs.readFile(test.location, (err, contents) => {\n    if (err != null) {\n      cb(err, null, null);\n    } else {\n      let contentsStr = contents.toString();\n      // check if this test should be filtered\n      if (!filterFn(test, contentsStr)) {\n        // skip this test\n        cb(null, null, null);\n      } else {\n        try {\n          let banners = getBanners(test, contentsStr);\n          cb(null, banners, contentsStr);\n        } catch (bannerParseErr) {\n          cb(bannerParseErr, null, null);\n        }\n      }\n    }\n  });\n}\n\nfunction createRealm(timeout: number): { realm: Realm, $: ObjectValue } {\n  // Create a new realm.\n  let realm = construct_realm({\n    strictlyMonotonicDateNow: true,\n    timeout: timeout * 1000,\n  });\n  initializeGlobals(realm);\n  let executionContext = new ExecutionContext();\n  executionContext.realm = realm;\n  realm.pushContext(executionContext);\n\n  // Create the Host-Defined functions.\n  let $ = new ObjectValue(realm);\n\n  $.defineNativeMethod(\"createRealm\", 0, context => {\n    return createRealm(timeout).$;\n  });\n\n  $.defineNativeMethod(\"detachArrayBuffer\", 1, (context, [buffer]) => {\n    return DetachArrayBuffer(realm, buffer);\n  });\n\n  $.defineNativeMethod(\"evalScript\", 1, (context, [sourceText]) => {\n    // TODO: eval\n    return realm.intrinsics.undefined;\n  });\n\n  $.defineNativeProperty(\"global\", realm.$GlobalObject);\n\n  let glob = ((realm.$GlobalObject: any): ObjectValue);\n  glob.defineNativeProperty(\"$\", $);\n  glob.defineNativeMethod(\"print\", 1, (context, [arg]) => {\n    return realm.intrinsics.undefined;\n  });\n\n  return { realm, $ };\n}\n\n/**\n * runTest executes the test given by ${test} whose contents are\n * ${testFileContents}.\n * It returns None if the test should is skipped, otherwise it returns a\n * TestResult.\n */\nfunction runTest(\n  test: TestFileInfo,\n  testFileContents: string,\n  data: BannerData,\n  // eslint-disable-next-line flowtype/no-weak-types\n  harnesses: Object,\n  strict: boolean,\n  timeout: number\n): ?TestResult {\n  let { realm } = createRealm(timeout);\n\n  // Run the test.\n  try {\n    try {\n      // execute the harnesss first\n      for (let name of [\"sta.js\", \"assert.js\"].concat(data.includes || [])) {\n        let harness = harnesses[name];\n        let completion = realm.$GlobalEnv.execute(harness, name);\n        if (completion instanceof ThrowCompletion) throw completion;\n      }\n\n      let completion = realm.$GlobalEnv.execute(\n        (strict ? '\"use strict\";' + EOL : \"\") + testFileContents,\n        test.location\n      );\n      if (completion instanceof ThrowCompletion) throw completion;\n      if (completion instanceof AbruptCompletion)\n        return new TestResult(false, strict, new Error(\"Unexpected abrupt completion\"));\n    } catch (err) {\n      if (err.message === \"Timed out\") return new TestResult(false, strict, err);\n      if (!data.negative || data.negative !== err.name) {\n        throw err;\n      }\n    }\n\n    if (data.negative.type) {\n      throw new Error(\"Was supposed to error with type \" + data.negative.type + \" but passed\");\n    }\n\n    // succeeded\n    return new TestResult(true, strict);\n  } catch (err) {\n    if (err.value && err.value.$Prototype && err.value.$Prototype.intrinsicName === \"SyntaxError.prototype\") {\n      return null;\n    }\n\n    let stack = err.stack;\n    if (data.negative.type) {\n      let type = data.negative.type;\n      if (err && err instanceof ThrowCompletion && Get(realm, err.value, \"name\").value === type) {\n        // Expected an error and got one.\n        return new TestResult(true, strict);\n      } else {\n        // Expected an error, but got something else.\n        if (err && err instanceof ThrowCompletion) {\n          return new TestResult(false, strict, err);\n        } else {\n          return new TestResult(false, strict, new Error(`Expected an error, but got something else: ${err.message}`));\n        }\n      }\n    } else {\n      // Not expecting an error, but got one.\n      try {\n        if (err && err instanceof ThrowCompletion) {\n          let interpreterStack: void | string;\n\n          if (err.value instanceof ObjectValue) {\n            if (err.value.$HasProperty(\"stack\")) {\n              interpreterStack = ToStringPartial(realm, Get(realm, err.value, \"stack\"));\n            } else {\n              interpreterStack = ToStringPartial(realm, Get(realm, err.value, \"message\"));\n            }\n            // filter out if the error stack is due to async\n            if (interpreterStack.includes(\"async \")) {\n              return null;\n            }\n          } else if (err.value instanceof StringValue) {\n            interpreterStack = err.value.value;\n            if (interpreterStack === \"only plain identifiers are supported in parameter lists\") {\n              return null;\n            }\n          }\n\n          // Many strict-only tests involving eval check if certain SyntaxErrors are thrown.\n          // Some of those would require changes to Babel to support properly, and some we should handle ourselves in Prepack some day.\n          // But for now, ignore.\n          if (testFileContents.includes(\"eval(\") && strict) {\n            return null;\n          }\n\n          if (interpreterStack) {\n            stack = `Interpreter: ${interpreterStack}${EOL}Native: ${err.nativeStack}`;\n          }\n        }\n      } catch (_err) {\n        stack = _err.stack;\n      }\n\n      return new TestResult(false, strict, new Error(`Got an error, but was not expecting one:${EOL}${stack}`));\n    }\n  }\n}\n\n/**\n * Returns true if ${test} should be run, false otherwise\n */\nfunction testFilterByMetadata(test: TestFileInfo): boolean {\n  // filter hidden files\n  if (path.basename(test.location)[0] === \".\") return false;\n\n  // emacs!\n  if (test.location.includes(\"~\")) return false;\n\n  // SIMD isn't in JS yet\n  if (test.location.includes(\"Simd\")) return false;\n\n  // temporarily disable intl402 tests (ES5)\n  if (test.location.includes(\"intl402\") && !test.location.includes(\"/Date/prototype/to\")) {\n    return false;\n  }\n\n  // temporarily disable tests which use realm.\n  if (test.location.includes(\"realm\")) return false;\n\n  // temporarily disable tests which use with. (??)\n  if (test.location.includes(\"/with/\")) return false;\n\n  // disable tests which use Atomics\n  if (test.location.includes(\"/Atomics/\")) return false;\n\n  // disable tests which use generators\n  if (test.location.includes(\"/generators/\")) return false;\n  if (test.location.includes(\"/yield/\")) return false;\n\n  // disable tests which use modules\n  if (test.location.includes(\"/module-code/\")) return false;\n\n  // disable browser specific tests\n  if (test.location.includes(\"/annexB/\")) return false;\n\n  // disable tail-call optimization tests\n  if (test.location.includes(\"tco\")) return false;\n\n  // disable nasty unicode tests.\n  if (test.location.includes(\"U180\") || test.location.includes(\"u180\") || test.location.includes(\"mongolian\"))\n    return false;\n\n  // disable function toString tests.\n  if (test.location.includes(\"Function/prototype/toString\")) return false;\n\n  // disable tests that check for detached-buffer-after-toindex\n  if (test.location.includes(\"detached-buffer-after-toindex\")) return false;\n\n  // disable tests to check for detatched-buffer during iteration\n  if (test.location.includes(\"detach-typedarray-in-progress.js\")) return false;\n\n  // disable broken RegExp tests\n  if (test.location.includes(\"RegExp/S15.10.2.12_A1_T1.js\")) return false;\n  if (test.location.includes(\"RegExp/S15.10.2.12_A2_T1.js\")) return false;\n  if (test.location.includes(\"RegExp/prototype/Symbol.search/lastindex-no-restore\")) return false;\n  if (test.location.includes(\"RegExp/prototype/exec/failure-lastindex-no-access.js\")) return false;\n  if (test.location.includes(\"RegExp/prototype/exec/success-lastindex-no-access.js\")) return false;\n\n  // disable RegExp tests that use extended unicode\n  if (test.location.includes(\"Symbol.match/builtin-success-u-return-val-groups\")) return false;\n\n  // disable SharedArrayBuffer tests\n  if (test.location.includes(\"sharedarraybuffer\") || test.location.includes(\"SharedArrayBuffer\")) return false;\n\n  return true;\n}\n\nfunction testFilterByContents(test: TestFileInfo, testFileContents: string): boolean {\n  // ES6 tests (can only be verified by contents, not by metadata)\n  let is_es6 = testFileContents.includes(EOL + \"es6id: \");\n  test.isES6 = is_es6;\n\n  // Ignore phase: early tests because those are errors that babel should catch\n  // not issues related to Prepack\n  let phase_early = testFileContents.indexOf(\"  phase: early\");\n  let end_of_comment = testFileContents.indexOf(\"---*/\");\n  if (phase_early > 0 && phase_early < end_of_comment) return false;\n\n  let esid_pending = testFileContents.indexOf(\"esid: pending\");\n  if (esid_pending > 0 && esid_pending < end_of_comment) return false;\n\n  // disable tests that require parser to throw SyntaxError in strict Mode\n  if (test.location.includes(\"/directive-prologue/\") && testFileContents.includes(\"assert.throws(SyntaxError,\"))\n    return false;\n\n  // disable SharedArrayBuffer tests\n  if (testFileContents.includes(\"SharedArrayBuffer\")) return false;\n\n  return true;\n}\n\nfunction filterFlags(data: BannerData): boolean {\n  return !data.flags.includes(\"async\");\n}\n\nfunction filterFeatures(data: BannerData): boolean {\n  let features = data.features;\n  if (features.includes(\"default-parameters\")) return false;\n  if (features.includes(\"generators\")) return false;\n  if (features.includes(\"generator\")) return false;\n  return true;\n}\n\nfunction filterIncludes(data: BannerData): boolean {\n  // disable tail call optimization tests.\n  return !data.includes.includes(\"tco-helper.js\");\n}\n\nfunction filterDescription(data: BannerData): boolean {\n  // For now, \"Complex tests\" is used in the description of some\n  // encode/decodeURI tests to indicate that they are long running.\n  // Filter these\n  return (\n    !data.description.includes(\"Complex tests\") &&\n    !data.description.includes(\"iterating\") &&\n    !data.description.includes(\"iterable\")\n  );\n}\n\nfunction filterCircleCI(data: BannerData): boolean {\n  let skipTests = [\n    \"7.8.5_A1.4_T2\",\n    \"7.8.5_A2.4_T2\",\n    \"7.8.5_A2.1_T2\",\n    \"7.8.5_A1.1_T2\",\n    \"15.1.2.2_A8\",\n    \"15.1.2.3_A6\",\n    \"7.4_A5\",\n    \"7.4_A6\",\n    \"15.10.2.12_A3_T1\",\n    \"15.10.2.12_A4_T1\",\n    \"15.10.2.12_A5_T1\",\n    \"15.10.2.12_A6_T1\",\n  ];\n  let skipTests6 = [\"22.1.3.1_3\"];\n\n  return !!process.env.NIGHTLY_BUILD || (skipTests.indexOf(data.es5id) < 0 && skipTests6.indexOf(data.es6id) < 0);\n}\n\nfunction filterSneakyGenerators(data: BannerData, testFileContents: string) {\n  // There are some sneaky tests that use generators but are not labeled with\n  // the \"generators\" or \"generator\" feature tag. Here we use a simple heuristic\n  // to filter out tests with sneaky generators.\n  if (data.features.includes(\"destructuring-binding\")) {\n    return !testFileContents.includes(\"function*\") && !testFileContents.includes(\"*method\");\n  }\n  return true;\n}\n\n/**\n * Run a given ${test} whose file contents are ${testFileContents} and return\n * a list of results, one for each strictness level (strict or not).\n * If the list's length is less than 2, than the missing tests were skipped.\n */\nfunction runTestWithStrictness(\n  test: TestFileInfo,\n  testFileContents: string,\n  data: BannerData,\n  // eslint-disable-next-line flowtype/no-weak-types\n  harnesses: Object,\n  timeout: number\n): Array<TestResult> {\n  let fn = (strict: boolean) => {\n    return runTest(test, testFileContents, data, harnesses, strict, timeout);\n  };\n  if (data.flags.includes(\"onlyStrict\")) {\n    if (testFileContents.includes(\"assert.throws(SyntaxError\")) return [];\n    let result = fn(true);\n    return result ? [result] : [];\n  } else if (data.flags.includes(\"noStrict\") || test.location.includes(\"global/global-object.js\")) {\n    if (testFileContents.includes('\"use strict\";') && testFileContents.includes(\"assert.throws(SyntaxError\")) return [];\n    let result = fn(false);\n    return result ? [result] : [];\n  } else {\n    // run both strict and non-strict\n    let strictResult = fn(true);\n    let unStrictResult = fn(false);\n    let finalResult = [];\n    if (strictResult) {\n      finalResult.push(strictResult);\n    }\n    if (unStrictResult) {\n      finalResult.push(unStrictResult);\n    }\n    return finalResult;\n  }\n}\n\n/**\n * Parses the banners, and returns the banners as arbitrary object data if they\n * were found, or returns an error if the banner it couldn't be parsed.\n */\nfunction getBanners(test: TestFileInfo, fileContents: string): ?BannerData {\n  let banners = fileContents.match(/---[\\s\\S]+---/);\n  let data = {};\n  if (banners) {\n    let bannerText = banners[0] || \"\";\n    if (bannerText.includes(\"StrictMode\")) {\n      if (bannerText.includes(\"'arguments'\")) return null;\n      if (bannerText.includes(\"'caller'\")) return null;\n    } else if (bannerText.includes('properties \"caller\" or \"arguments\"')) {\n      return null;\n    } else if (bannerText.includes(\"function caller\")) {\n      return null;\n    } else if (bannerText.includes(\"attribute of 'caller' property\")) {\n      return null;\n    } else if (bannerText.includes(\"attribute of 'arguments'\")) {\n      return null;\n    } else if (bannerText.includes(\"poisoned\")) return null;\n    try {\n      data = yaml.safeLoad(banners[0].slice(3, -3));\n    } catch (e) {\n      // Some versions of test262 have comments inside of yaml banners.\n      // parsing these will usually fail.\n      return null;\n    }\n  }\n  return BannerData.fromObject(data);\n}\n"]}