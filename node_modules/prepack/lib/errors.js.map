{"version":3,"sources":["../src/errors.js"],"names":["FatalError","CompilerDiagnostic","message","location","errorCode","severity","Error","self","Object","setPrototypeOf","prototype"],"mappings":";;;;;QAqCgBA,U,GAAAA,U;;;;;;;;AApBhB;AACA;AAlBA;;;;;;;;;IAmBaC,kB,WAAAA,kB;;;AACX,8BAAYC,OAAZ,EAA6BC,QAA7B,EAAiEC,SAAjE,EAAoFC,QAApF,EAAwG;AAAA;;AAAA,wIAChGH,OADgG;;AAGtG,UAAKC,QAAL,GAAgBA,QAAhB;AACA,UAAKE,QAAL,GAAgBA,QAAhB;AACA,UAAKD,SAAL,GAAiBA,SAAjB;AALsG;AAMvG;;;EAPqCE,K;;AAexC;AACA;AACA;;;AACO,SAASN,UAAT,CAAoBE,OAApB,EAAsC;AAC3C,MAAIK,OAAO,IAAID,KAAJ,CAAUJ,WAAW,0CAArB,CAAX;AACAM,SAAOC,cAAP,CAAsBF,IAAtB,EAA4BP,WAAWU,SAAvC;AACA,SAAOH,IAAP;AACD;AACDC,OAAOC,cAAP,CAAsBT,UAAtB,EAAkCM,KAAlC;AACAE,OAAOC,cAAP,CAAsBT,WAAWU,SAAjC,EAA4CJ,MAAMI,SAAlD","file":"errors.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeSourceLocation } from \"babel-types\";\n\nexport type Severity = \"FatalError\" | \"RecoverableError\" | \"Warning\" | \"Information\";\nexport type ErrorHandlerResult = \"Fail\" | \"Recover\";\nexport type ErrorCode = \"PP0001\";\n\n// This is the error format used to report errors to the caller-supplied\n// error-handler\nexport class CompilerDiagnostic extends Error {\n  constructor(message: string, location: ?BabelNodeSourceLocation, errorCode: string, severity: Severity) {\n    super(message);\n\n    this.location = location;\n    this.severity = severity;\n    this.errorCode = errorCode;\n  }\n\n  callStack: void | string;\n  location: ?BabelNodeSourceLocation;\n  severity: Severity;\n  errorCode: string;\n}\n\n// This error is thrown to exit Prepack when an ErrorHandler returns 'FatalError'\n// This should just be a class but Babel classes doesn't work with\n// built-in super classes.\nexport function FatalError(message?: string) {\n  let self = new Error(message || \"A fatal error occurred while prepacking.\");\n  Object.setPrototypeOf(self, FatalError.prototype);\n  return self;\n}\nObject.setPrototypeOf(FatalError, Error);\nObject.setPrototypeOf(FatalError.prototype, Error.prototype);\n\nexport type ErrorHandler = (error: CompilerDiagnostic) => ErrorHandlerResult;\n"]}