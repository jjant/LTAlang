{"version":3,"sources":["../../../src/debugger/channel/DebugMessage.js"],"names":["DebugMessage","DEBUGGER_ATTACHED","PREPACK_RUN_COMMAND","BREAKPOINT_ADD_COMMAND","BREAKPOINT_REMOVE_COMMAND","BREAKPOINT_ENABLE_COMMAND","BREAKPOINT_DISABLE_COMMAND","STACKFRAMES_COMMAND","SCOPES_COMMAND","VARIABLES_COMMAND","PREPACK_READY_RESPONSE","PREPACK_FINISH_RESPONSE","BREAKPOINT_STOPPED_RESPONSE","STACKFRAMES_RESPONSE","SCOPES_RESPONSE","VARIABLES_RESPONSE","BREAKPOINT_ADD_ACKNOWLEDGE","BREAKPOINT_REMOVE_ACKNOWLEDGE","BREAKPOINT_ENABLE_ACKNOWLEDGE","BREAKPOINT_DISABLE_ACKNOWLEDGE"],"mappings":";;;;;;;;AAAA;;;;;;;;;AAWA;IACaA,Y,WAAAA,Y;;;;AAAAA,Y,CAGJC,iB,GAA4B,kB;AAHxBD,Y,CAKJE,mB,GAA8B,Y;AAL1BF,Y,CAOJG,sB,GAAiC,wB;AAP7BH,Y,CASJI,yB,GAAoC,2B;AAThCJ,Y,CAWJK,yB,GAAoC,2B;AAXhCL,Y,CAaJM,0B,GAAqC,4B;AAbjCN,Y,CAeJO,mB,GAA8B,qB;AAf1BP,Y,CAiBJQ,c,GAAyB,gB;AAjBrBR,Y,CAmBJS,iB,GAA4B,mB;AAnBxBT,Y,CAuBJU,sB,GAAiC,c;AAvB7BV,Y,CAyBJW,uB,GAAkC,e;AAzB9BX,Y,CA2BJY,2B,GAAsC,6B;AA3BlCZ,Y,CA6BJa,oB,GAA+B,sB;AA7B3Bb,Y,CA+BJc,e,GAA0B,iB;AA/BtBd,Y,CAiCJe,kB,GAA6B,oB;AAjCzBf,Y,CAqCJgB,0B,GAAqC,4B;AArCjChB,Y,CAuCJiB,6B,GAAwC,+B;AAvCpCjB,Y,CAyCJkB,6B,GAAwC,+B;AAzCpClB,Y,CA2CJmB,8B,GAAyC,gC","file":"DebugMessage.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\n//A collection of messages used between Prepack and the debug adapter\nexport class DebugMessage {\n  /* Messages from adapter to Prepack */\n  // Tell Prepack a debugger is present\n  static DEBUGGER_ATTACHED: string = \"DebuggerAttached\";\n  // Command Prepack to keep running\n  static PREPACK_RUN_COMMAND: string = \"PrepackRun\";\n  // Command to set a breakpoint\n  static BREAKPOINT_ADD_COMMAND: string = \"Breakpoint-add-command\";\n  // Command to remove a breakpoint\n  static BREAKPOINT_REMOVE_COMMAND: string = \"Breakpoint-remove-command\";\n  // Command to enable a breakpoint\n  static BREAKPOINT_ENABLE_COMMAND: string = \"Breakpoint-enable-command\";\n  // Command to disable a breakpoint\n  static BREAKPOINT_DISABLE_COMMAND: string = \"Breakpoint-disable-command\";\n  // Command to fetch stack frames\n  static STACKFRAMES_COMMAND: string = \"Stackframes-command\";\n  // Command to fetch scopes\n  static SCOPES_COMMAND: string = \"Scopes-command\";\n  // Command to fetch variables\n  static VARIABLES_COMMAND: string = \"Variables-command\";\n\n  /* Messages from Prepack to adapter with requested information */\n  // Respond to the adapter that Prepack is ready\n  static PREPACK_READY_RESPONSE: string = \"PrepackReady\";\n  // Respond to the adapter that Prepack is finished\n  static PREPACK_FINISH_RESPONSE: string = \"PrepackFinish\";\n  // Respond to the adapter that Prepack has stopped on a breakpoint\n  static BREAKPOINT_STOPPED_RESPONSE: string = \"Breakpoint-stopped-response\";\n  // Respond to the adapter with the request stackframes\n  static STACKFRAMES_RESPONSE: string = \"Stackframes-response\";\n  // Respond to the adapter with the requested scopes\n  static SCOPES_RESPONSE: string = \"Scopes-response\";\n  // Respond to the adapter with the requested variables\n  static VARIABLES_RESPONSE: string = \"Variables-response\";\n\n  /* Messages from Prepack to adapter to acknowledge having received the request */\n  // Acknowledgement for setting a breakpoint\n  static BREAKPOINT_ADD_ACKNOWLEDGE: string = \"Breakpoint-add-acknowledge\";\n  // Acknowledgement for removing a breakpoint\n  static BREAKPOINT_REMOVE_ACKNOWLEDGE: string = \"Breakpoint-remove-acknowledge\";\n  // Acknowledgement for enabling a breakpoint\n  static BREAKPOINT_ENABLE_ACKNOWLEDGE: string = \"Breakpoint-enable-acknowledge\";\n  // Acknoledgement for disabling a breakpoint\n  static BREAKPOINT_DISABLE_ACKNOWLEDGE: string = \"Breakpoint-disable-acknowledge\";\n}\n"]}