{"version":3,"sources":["../scripts/test-react.js"],"names":["directory","name","source","fs","readFileSync","path","join","reactTestRoot","toString","compileSourceWithPrepack","compiledSource","A","runSource","expect","toBe","B","rendererA","ReactTestRenderer","create","rendererB","Error","getTrials","resultA","resultB","i","length","nameA","valueA","nameB","valueB","mergeAdacentJSONTextNodes","toEqual","runTest","require","prepackSources","babel","React","global","describe","it","__dirname","prepackOptions","compatibility","errorHandler","internalDebug","serialize","uniqueSuffix","maxStackDepth","reactEnabled","inlineExpressions","omitInvariants","code","serialized","filePath","fileContents","sourceMapContents","reactStatistics","statistics","codeAfterBabel","transform","presets","plugins","fn","Function","moduleShim","exports","requireShim","e","console","log","originalConsoleError","error"],"mappings":"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","file":"test-react.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nlet fs = require(\"fs\");\nlet path = require(\"path\");\nlet { prepackSources } = require(\"../lib/prepack-node.js\");\nlet babel = require(\"babel-core\");\nlet React = require(\"react\");\nlet ReactTestRenderer = require(\"react-test-renderer\");\nlet { mergeAdacentJSONTextNodes } = require(\"../lib/utils/json.js\");\n/* eslint-disable no-undef */\nlet { expect, describe, it } = global;\n\nlet reactTestRoot = path.join(__dirname, \"../test/react/\");\nlet prepackOptions = {\n  compatibility: \"react-mocks\",\n  errorHandler: diag => \"Fail\",\n  internalDebug: true,\n  serialize: true,\n  uniqueSuffix: \"\",\n  maxStackDepth: 100,\n  reactEnabled: true,\n  inlineExpressions: true,\n  omitInvariants: true,\n};\n\nfunction compileSourceWithPrepack(source) {\n  let code = `(function(){${source}})()`;\n  let serialized = prepackSources([{ filePath: \"\", fileContents: code, sourceMapContents: \"\" }], prepackOptions);\n  if (serialized == null || serialized.reactStatistics == null) {\n    throw new Error(\"React test runner failed during serialization\");\n  }\n  return {\n    compiledSource: serialized.code,\n    statistics: serialized.reactStatistics,\n  };\n}\n\nfunction runSource(source) {\n  let codeAfterBabel = babel.transform(source, {\n    presets: [\"babel-preset-react\"],\n    plugins: [\"transform-object-rest-spread\"],\n  }).code;\n  /* eslint-disable no-new-func */\n  let fn = new Function(\"require\", \"module\", codeAfterBabel);\n  let moduleShim = { exports: null };\n  let requireShim = name => {\n    switch (name) {\n      case \"react\":\n        return React;\n      default:\n        throw new Error(`Unrecognized import: \"${name}\".`);\n    }\n  };\n  try {\n    // $FlowFixMe flow doesn't new Function\n    fn(requireShim, moduleShim);\n  } catch (e) {\n    console.log(codeAfterBabel);\n    throw e;\n  }\n  return moduleShim.exports;\n}\n\nasync function runTest(directory, name) {\n  let source = fs.readFileSync(path.join(reactTestRoot, directory, name)).toString();\n  let { compiledSource } = compileSourceWithPrepack(source);\n\n  let A = runSource(source);\n  expect(typeof A).toBe(\"function\");\n  let B = runSource(compiledSource);\n  expect(typeof B).toBe(\"function\");\n\n  let rendererA = ReactTestRenderer.create(null);\n  let rendererB = ReactTestRenderer.create(null);\n\n  if (A == null || B == null) {\n    throw new Error(\"React test runner issue\");\n  }\n  // // Use the original version of the test in case transforming messes it up.\n  let { getTrials } = A;\n  // // Run tests that assert the rendered output matches.\n  let resultA = getTrials(rendererA, A);\n  let resultB = getTrials(rendererB, B);\n\n  // // the test has returned many values for us to check\n  for (let i = 0; i < resultA.length; i++) {\n    let [nameA, valueA] = resultA[i];\n    let [nameB, valueB] = resultB[i];\n    expect(mergeAdacentJSONTextNodes(valueB)).toEqual(mergeAdacentJSONTextNodes(valueA));\n    expect(nameB).toEqual(nameA);\n  }\n}\n\n// Jest tests\nlet originalConsoleError = console.error;\n\ndescribe(\"Test React\", () => {\n  describe(\"Functional component folding\", () => {\n    let directory = \"functional-components\";\n\n    it(\"Simple\", async () => {\n      await runTest(directory, \"simple.js\");\n    });\n\n    it(\"Simple children\", async () => {\n      await runTest(directory, \"simple-children.js\");\n    });\n\n    it(\"Simple refs\", async () => {\n      await runTest(directory, \"simple-refs.js\");\n    });\n\n    it(\"Conditional\", async () => {\n      await runTest(directory, \"conditional.js\");\n    });\n\n    it(\"Key nesting\", async () => {\n      await runTest(directory, \"key-nesting.js\");\n    });\n\n    it(\"Key nesting 2\", async () => {\n      await runTest(directory, \"key-nesting-2.js\");\n    });\n\n    it(\"Key nesting 3\", async () => {\n      await runTest(directory, \"key-nesting-3.js\");\n    });\n\n    it(\"Key change\", async () => {\n      await runTest(directory, \"key-change.js\");\n    });\n\n    it(\"Component type change\", async () => {\n      await runTest(directory, \"type-change.js\");\n    });\n\n    it(\"Component type same\", async () => {\n      await runTest(directory, \"type-same.js\");\n    });\n\n    it(\"Dynamic props\", async () => {\n      await runTest(directory, \"dynamic-props.js\");\n    });\n\n    it(\"Dynamic context\", async () => {\n      await runTest(directory, \"dynamic-context.js\");\n    });\n\n    it(\"React.cloneElement\", async () => {\n      await runTest(directory, \"clone-element.js\");\n    });\n\n    it(\"Return text\", async () => {\n      await runTest(directory, \"return-text.js\");\n    });\n\n    it(\"Return undefined\", async () => {\n      // this test will cause a React console.error to show\n      // we monkey patch it to stop it polluting the test output\n      // with a false-negative error\n      global.console.error = () => {};\n      try {\n        await runTest(directory, \"return-undefined.js\");\n      } finally {\n        global.console.error = originalConsoleError;\n      }\n    });\n\n    it(\"Class component as root\", async () => {\n      await runTest(directory, \"class-root.js\");\n    });\n\n    it(\"Class component as root with multiple render methods\", async () => {\n      await runTest(directory, \"class-root-with-render-methods.js\");\n    });\n\n    it(\"Class component as root with props\", async () => {\n      await runTest(directory, \"class-root-with-props.js\");\n    });\n\n    it(\"Class component as root with state\", async () => {\n      await runTest(directory, \"class-root-with-state.js\");\n    });\n\n    it(\"Class component as root with refs\", async () => {\n      await runTest(directory, \"class-root-with-refs.js\");\n    });\n\n    it(\"Class component as root with instance variables\", async () => {\n      await runTest(directory, \"class-root-with-instance-vars.js\");\n    });\n\n    it(\"Class component as root with instance variables #2\", async () => {\n      await runTest(directory, \"class-root-with-instance-vars-2.js\");\n    });\n  });\n});\n"]}