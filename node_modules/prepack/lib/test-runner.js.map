{"version":3,"sources":["../scripts/test-runner.js"],"names":["FatalError","require","prepackSources","Serializer","default","construct_realm","initializeGlobals","chalk","path","fs","vm","os","minimist","babel","child_process","EOL","execSpec","transformWithBabel","code","plugins","presets","transform","search","dir","relative","tests","readdirSync","name","loc","join","stat","statSync","isFile","push","file","readFileSync","isDirectory","concat","LAZY_OBJECTS_RUNTIME_NAME","__dirname","execExternal","externalSpec","script","printName","child","spawnSync","cmd","input","output","String","stdout","trim","augmentCodeWithLazyObjectSupport","lazyRuntimeName","mockLazyObjectsSupport","hydrateLazyObjectsCall","replace","execInContext","Script","cachedDataProduced","result","logOutput","write","prefix","values","runInNewContext","setTimeout","setInterval","clearTimeout","clearInterval","report","s","console","log","warn","error","runTest","options","args","inverse","JSON","stringify","compatibility","includes","undefined","initializeMoreModules","compileJSXWithBabel","delayUnsupportedRequires","functionCloneCountMatch","match","Object","assign","debugNames","errorHandler","internalDebug","serialize","uniqueSuffix","inlineExpressions","omitInvariants","additionalFunctions","maxStackDepth","reactEnabled","realmOptions","realm","serializerOptions","lazyObjectsRuntime","serializer","sources","filePath","fileContents","serialized","init","red","err","sourceMapContents","underline","marker","searchStart","indexOf","searchEnd","value","substring","length","count","parseInt","regex","RegExp","matches","expected","actual","codeIterations","markersToFind","positive","i","start","addedCode","injectAtRuntime","unique","oldUniqueSuffix","expectedCode","e","max","oldCode","anyDelayedValues","newUniqueSuffix","statistics","delayedValues","newCode","verbose","markersIssue","found","codeToRun","es5","forceAllTransforms","modules","functionCount","functionClones","prepareReplExternalSepc","procPath","existsSync","ArgsParseError","out","run","failed","passed","total","outOfProcessRuntime","test","basename","endsWith","filter","skipLazyObjects","delayInitializations","noLazySupport","Math","round","ProgramArgs","main","argsParse","process","exit","message","usage","argv","parsedArgs","slice","string","boolean","programArgs"],"mappings":"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","file":"test-runner.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nlet FatalError = require(\"../lib/errors.js\").FatalError;\nlet prepackSources = require(\"../lib/prepack-node.js\").prepackSources;\n\nlet Serializer = require(\"../lib/serializer/index.js\").default;\nlet construct_realm = require(\"../lib/construct_realm.js\").default;\nlet initializeGlobals = require(\"../lib/globals.js\").default;\nlet chalk = require(\"chalk\");\nlet path = require(\"path\");\nlet fs = require(\"fs\");\nlet vm = require(\"vm\");\nlet os = require(\"os\");\nlet minimist = require(\"minimist\");\nlet babel = require(\"babel-core\");\nlet child_process = require(\"child_process\");\nconst EOL = os.EOL;\nlet execSpec;\n\nfunction transformWithBabel(code, plugins, presets) {\n  return babel.transform(code, {\n    plugins: plugins,\n    presets: presets,\n  }).code;\n}\n\nfunction search(dir, relative) {\n  let tests = [];\n\n  for (let name of fs.readdirSync(dir)) {\n    let loc = path.join(dir, name);\n    let stat = fs.statSync(loc);\n\n    if (stat.isFile()) {\n      tests.push({\n        file: fs.readFileSync(loc, \"utf8\"),\n        name: path.join(relative, name),\n      });\n    } else if (stat.isDirectory()) {\n      tests = tests.concat(search(loc, path.join(relative, name)));\n    }\n  }\n\n  return tests;\n}\n\nconst LAZY_OBJECTS_RUNTIME_NAME = \"LazyObjectsRuntime\";\nlet tests = search(`${__dirname}/../test/serializer`, \"test/serializer\");\n\n// run JS subprocess\n// externalSpec defines how to invoke external REPL and how to print.\n//  - cmd - cmd to execute, script is piped into this.\n//  - printName - name of function which can be used to print to stdout.\nfunction execExternal(externalSpec, code) {\n  // essentially the code from execInContext run through babel\n  let script = `\n  var global = this;\n  var self = this;\n  var _logOutput = \"\";\n  function write(prefix, values) {\n    _logOutput += \"\\\\n\" + prefix + values.join(\"\");\n  }\n  var cachePrint = ${externalSpec.printName};\n  global.console = {}\n  global.console.log = function log() {\n      for (var _len = arguments.length, s = Array(_len), _key = 0; _key < _len; _key++) {\n        s[_key] = arguments[_key];\n      }\n      write(\"\", s);\n    };\n    global.console.warn = function warn() {\n      for (var _len2 = arguments.length, s = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        s[_key2] = arguments[_key2];\n      }\n      write(\"WARN:\", s);\n    };\n    global.console.error = function error() {\n      for (var _len3 = arguments.length, s = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        s[_key3] = arguments[_key3];\n      }\n      write(\"ERROR:\", s);\n    };\n  try {\n    ${code}\n    cachePrint(inspect() + _logOutput);\n  } catch (e) {\n    cachePrint(e);\n  }`;\n\n  let child = child_process.spawnSync(externalSpec.cmd, { input: script });\n\n  let output = String(child.stdout);\n\n  return String(output.trim());\n}\n\nfunction augmentCodeWithLazyObjectSupport(code, lazyRuntimeName) {\n  const mockLazyObjectsSupport = `\n    var ${lazyRuntimeName} = {\n      _lazyObjectIds: new Map(),\n      _callback: null,\n      setLazyObjectInitializer: function(callback) {\n        this._callback = callback;\n      },\n      createLazyObject: function(id) {\n        var obj = {};\n        this._lazyObjectIds.set(obj, id);\n        return obj;\n      },\n      hydrateAllObjects: function() {\n        for (const [lazyObj, id] of this._lazyObjectIds) {\n          this._callback(lazyObj, id);\n        }\n        this._lazyObjectIds.clear();\n      }\n    };\n  `;\n  const hydrateLazyObjectsCall = `${lazyRuntimeName}.hydrateAllObjects();`;\n  code = code.replace(\"/*force hydrate lazy objects*/\", hydrateLazyObjectsCall);\n  return `${mockLazyObjectsSupport}\n    ${code}; // keep newline here as code may end with comment\n    ${hydrateLazyObjectsCall}`;\n}\n\n// run code in a seperate context\nfunction execInContext(code) {\n  let script = new vm.Script(\n    `var global = this;\n    var self = this;\n    ${code}\n    report(inspect());`,\n    { cachedDataProduced: false }\n  );\n  let result = \"\";\n  let logOutput = \"\";\n\n  function write(prefix, values) {\n    logOutput += \"\\n\" + prefix + values.join(\"\");\n  }\n  script.runInNewContext({\n    setTimeout: setTimeout,\n    setInterval: setInterval,\n    clearTimeout: clearTimeout,\n    clearInterval: clearInterval,\n    report: function(s) {\n      result = s;\n    },\n    console: {\n      log(...s) {\n        write(\"\", s);\n      },\n      warn(...s) {\n        write(\"WARN:\", s);\n      },\n      error(...s) {\n        write(\"ERROR:\", s);\n      },\n    },\n  });\n  return (result + logOutput).trim();\n}\n\nfunction runTest(name, code, options, args) {\n  console.log(chalk.inverse(name) + \" \" + JSON.stringify(options));\n  let compatibility = code.includes(\"// jsc\") ? \"jsc-600-1-4-17\" : undefined;\n  let initializeMoreModules = code.includes(\"// initialize more modules\");\n  let compileJSXWithBabel = code.includes(\"// babel:jsx\");\n  let delayUnsupportedRequires = code.includes(\"// delay unsupported requires\");\n  let functionCloneCountMatch = code.match(/\\/\\/ serialized function clone count: (\\d+)/);\n  options = Object.assign({}, options, {\n    compatibility,\n    debugNames: args.debugNames,\n    initializeMoreModules,\n    delayUnsupportedRequires,\n    errorHandler: diag => \"Fail\",\n    internalDebug: true,\n    serialize: true,\n    uniqueSuffix: \"\",\n  });\n  if (code.includes(\"// inline expressions\")) options.inlineExpressions = true;\n  if (code.includes(\"// do not inline expressions\")) options.inlineExpressions = false;\n  if (code.includes(\"// omit invariants\")) options.omitInvariants = true;\n  if (code.includes(\"// additional functions\")) options.additionalFunctions = [\"additional1\", \"additional2\"];\n  if (code.includes(\"// exceeds stack limit\")) options.maxStackDepth = 10;\n  if (code.includes(\"// react\")) options.reactEnabled = true;\n  if (code.includes(\"// throws introspection error\")) {\n    try {\n      let realmOptions = {\n        serialize: true,\n        compatibility,\n        uniqueSuffix: \"\",\n        errorHandler: diag => \"Fail\",\n        maxStackDepth: options.maxStackDepth,\n      };\n      let realm = construct_realm(realmOptions);\n      initializeGlobals(realm);\n      let serializerOptions = {\n        initializeMoreModules,\n        delayUnsupportedRequires,\n        internalDebug: true,\n        additionalFunctions: options.additionalFunctions,\n        lazyObjectsRuntime: options.lazyObjectsRuntime,\n      };\n      let serializer = new Serializer(realm, serializerOptions);\n      let sources = [{ filePath: name, fileContents: code }];\n      let serialized = serializer.init(sources, false);\n      if (!serialized) {\n        console.log(chalk.red(\"Error during serialization\"));\n      } else {\n        console.log(chalk.red(\"Test should have caused introspection error!\"));\n      }\n    } catch (err) {\n      if (err instanceof FatalError) return true;\n      console.log(\"Test should have caused introspection error, but instead caused a different internal error!\");\n      console.log(err);\n    }\n    return false;\n  } else if (code.includes(\"// cannot serialize\")) {\n    try {\n      prepackSources([{ filePath: name, fileContents: code, sourceMapContents: \"\" }], options);\n    } catch (err) {\n      if (err instanceof FatalError) {\n        return true;\n      }\n    }\n    console.log(chalk.red(\"Test should have caused error during serialization!\"));\n    return false;\n  } else if (code.includes(\"// no effect\")) {\n    try {\n      let serialized = prepackSources([{ filePath: name, fileContents: code, sourceMapContents: \"\" }], options);\n      if (!serialized) {\n        console.log(chalk.red(\"Error during serialization!\"));\n        return false;\n      }\n      if (!serialized.code.trim()) {\n        return true;\n      }\n      console.log(chalk.red(\"Generated code should be empty but isn't!\"));\n      console.log(chalk.underline(\"original code\"));\n      console.log(code);\n      console.log(chalk.underline(`generated code`));\n      console.log(serialized.code);\n    } catch (err) {\n      console.log(err);\n    }\n    return false;\n  } else if (code.includes(\"// Copies of \")) {\n    let marker = \"// Copies of \";\n    let searchStart = code.indexOf(marker);\n    let searchEnd = code.indexOf(\":\", searchStart);\n    let value = code.substring(searchStart + marker.length, searchEnd);\n    let count = parseInt(code.substring(searchEnd + 1, code.indexOf(\"\\n\", searchStart)), 10);\n    try {\n      let serialized = prepackSources([{ filePath: name, fileContents: code, sourceMapContents: \"\" }], options);\n      if (!serialized) {\n        console.log(chalk.red(\"Error during serialization!\"));\n        return false;\n      }\n      let regex = new RegExp(value, \"gi\");\n      let matches = serialized.code.match(regex);\n      if (!matches || matches.length !== count) {\n        console.log(\n          chalk.red(`Wrong number of occurrances of ${value} got ${matches ? matches.length : 0} instead of ${count}`)\n        );\n        return false;\n      }\n    } catch (err) {\n      console.log(err);\n      return false;\n    }\n    return true;\n  } else {\n    let expected, actual;\n    let codeIterations = [];\n    let markersToFind = [];\n    for (let [positive, marker] of [[true, \"// does contain:\"], [false, \"// does not contain:\"]]) {\n      if (code.includes(marker)) {\n        let i = code.indexOf(marker);\n        let value = code.substring(i + marker.length, code.indexOf(\"\\n\", i));\n        markersToFind.push({ positive, value, start: i + marker.length });\n      }\n    }\n    let addedCode = \"\";\n    let injectAtRuntime = \"// add at runtime:\";\n    if (code.includes(injectAtRuntime)) {\n      let i = code.indexOf(injectAtRuntime);\n      addedCode = code.substring(i + injectAtRuntime.length, code.indexOf(\"\\n\", i));\n    }\n    let unique = 27277;\n    let oldUniqueSuffix = \"\";\n    let expectedCode = code;\n    if (compileJSXWithBabel) {\n      expectedCode = transformWithBabel(expectedCode, [\"transform-react-jsx\"]);\n    }\n    try {\n      try {\n        expected = execInContext(`${addedCode}\\n(function () {${expectedCode} // keep newline here as code may end with comment\n  }).call(this);`);\n      } catch (e) {\n        expected = \"\" + e;\n      }\n\n      let i = 0;\n      let max = addedCode ? 1 : 4;\n      let oldCode = code;\n      let anyDelayedValues = false;\n      for (; i < max; i++) {\n        let newUniqueSuffix = `_unique${unique++}`;\n        options.uniqueSuffix = newUniqueSuffix;\n        let serialized = prepackSources([{ filePath: name, fileContents: code, sourceMapContents: \"\" }], options);\n        if (serialized.statistics && serialized.statistics.delayedValues > 0) anyDelayedValues = true;\n        if (!serialized) {\n          console.log(chalk.red(\"Error during serialization!\"));\n          break;\n        }\n        let newCode = serialized.code;\n        if (compileJSXWithBabel) {\n          newCode = transformWithBabel(newCode, [\"transform-react-jsx\"]);\n        }\n        codeIterations.push(newCode);\n        if (args.verbose) console.log(newCode);\n        let markersIssue = false;\n        for (let { positive, value, start } of markersToFind) {\n          let found = newCode.indexOf(value, start) !== -1;\n          if (found !== positive) {\n            console.log(chalk.red(`Output ${positive ? \"does not contain\" : \"contains\"} forbidden string: ${value}`));\n            markersIssue = true;\n          }\n        }\n        if (markersIssue) break;\n        let codeToRun = addedCode + newCode;\n        if (args.es5) {\n          codeToRun = transformWithBabel(codeToRun, [], [[\"env\", { forceAllTransforms: true, modules: false }]]);\n        }\n        try {\n          if (execSpec) {\n            actual = execExternal(execSpec, codeToRun);\n          } else {\n            if (options.lazyObjectsRuntime !== undefined) {\n              codeToRun = augmentCodeWithLazyObjectSupport(codeToRun, args.lazyObjectsRuntime);\n            }\n\n            actual = execInContext(codeToRun);\n          }\n        } catch (e) {\n          // always compare strings.\n          actual = \"\" + e;\n        }\n        if (expected !== actual) {\n          console.log(chalk.red(\"Output mismatch!\"));\n          break;\n        }\n        // Test the number of clone functions generated with the inital prepack call\n        if (i === 0 && functionCloneCountMatch) {\n          let functionCount = parseInt(functionCloneCountMatch[1], 10);\n          if (serialized.statistics && functionCount !== serialized.statistics.functionClones) {\n            console.log(\n              chalk.red(\n                `Code generation serialized an unexpected number of clone functions. Expected: ${functionCount}, Got: ${serialized\n                  .statistics.functionClones}`\n              )\n            );\n            break;\n          }\n        }\n        if (\n          oldCode.replace(new RegExp(oldUniqueSuffix, \"g\"), \"\") ===\n            newCode.replace(new RegExp(newUniqueSuffix, \"g\"), \"\") ||\n          delayUnsupportedRequires\n        ) {\n          // The generated code reached a fixed point!\n          return true;\n        }\n        oldCode = newCode;\n        oldUniqueSuffix = newUniqueSuffix;\n      }\n      if (i === 1) return true;\n      if (i === max) {\n        if (anyDelayedValues) {\n          // TODO #835: Make delayed initializations logic more sophisticated in order to still reach a fixed point.\n          return true;\n        }\n        console.log(chalk.red(`Code generation did not reach fixed point after ${max} iterations!`));\n      }\n    } catch (err) {\n      console.log(err);\n    }\n    console.log(chalk.underline(\"original code\"));\n    console.log(code);\n    console.log(chalk.underline(\"output of inspect() on original code\"));\n    console.log(expected);\n    for (let i = 0; i < codeIterations.length; i++) {\n      console.log(chalk.underline(`generated code in iteration ${i}`));\n      console.log(codeIterations[i]);\n    }\n    console.log(chalk.underline(\"output of inspect() on last generated code iteration\"));\n    console.log(actual);\n    return false;\n  }\n}\n\nfunction prepareReplExternalSepc(procPath) {\n  if (!fs.existsSync(procPath)) {\n    throw new ArgsParseError(`runtime ${procPath} does not exist`);\n  }\n  // find out how to print\n  let script = `\n    if (typeof (console) !== 'undefined' && console.log !== undefined) {\n      console.log('console.log')\n    }\n    else if (typeof('print') !== 'undefined') {\n      print('print')\n    }`;\n  let out = child_process.spawnSync(procPath, { input: script });\n  let output = String(out.stdout);\n  if (output.trim() === \"\") {\n    throw new ArgsParseError(`could not figure out how to print in inferior repl ${procPath}`);\n  }\n  return { printName: output.trim(), cmd: procPath.trim() };\n}\n\nfunction run(args) {\n  let failed = 0;\n  let passed = 0;\n  let total = 0;\n  if (args.outOfProcessRuntime !== \"\") {\n    execSpec = prepareReplExternalSepc(args.outOfProcessRuntime);\n  }\n\n  for (let test of tests) {\n    // filter hidden files\n    if (path.basename(test.name)[0] === \".\") continue;\n    if (test.name.endsWith(\"~\")) continue;\n    if (test.file.includes(\"// skip\")) continue;\n    if (args.es5 && test.file.includes(\"// es6\")) continue;\n    //only run specific tests if desired\n    if (!test.name.includes(args.filter)) continue;\n    // Skip lazy objects mode for certain known incompatible tests, react compiler and additional-functions tests.\n    const skipLazyObjects =\n      test.file.includes(\"// skip lazy objects\") ||\n      test.name.includes(\"additional-functions\") ||\n      test.name.includes(\"react\");\n\n    for (let [delayInitializations, inlineExpressions, lazyObjectsRuntime] of [\n      [false, false, undefined],\n      [true, true, undefined],\n      [false, false, args.lazyObjectsRuntime],\n    ]) {\n      if ((skipLazyObjects || args.noLazySupport) && lazyObjectsRuntime) {\n        continue;\n      }\n      total++;\n      let options = { delayInitializations, inlineExpressions, lazyObjectsRuntime };\n      if (runTest(test.name, test.file, options, args)) passed++;\n      else failed++;\n    }\n  }\n\n  console.log(\"Passed:\", `${passed}/${total}`, (Math.round(passed / total * 100) || 0) + \"%\");\n  return failed === 0;\n}\n\n// Object to store all command line arguments\nclass ProgramArgs {\n  debugNames: boolean;\n  verbose: boolean;\n  filter: string;\n  outOfProcessRuntime: string;\n  es5: boolean;\n  lazyObjectsRuntime: string;\n  noLazySupport: boolean;\n  constructor(\n    debugNames: boolean,\n    verbose: boolean,\n    filter: string,\n    outOfProcessRuntime: string,\n    es5: boolean,\n    lazyObjectsRuntime: string,\n    noLazySupport: boolean\n  ) {\n    this.debugNames = debugNames;\n    this.verbose = verbose;\n    this.filter = filter; //lets user choose specific test files, runs all tests if omitted\n    this.outOfProcessRuntime = outOfProcessRuntime;\n    this.es5 = es5;\n    this.lazyObjectsRuntime = lazyObjectsRuntime;\n    this.noLazySupport = noLazySupport;\n  }\n}\n\n// Execution of tests begins here\nfunction main(): number {\n  try {\n    let args = argsParse();\n    if (!run(args)) {\n      process.exit(1);\n    } else {\n      return 0;\n    }\n  } catch (e) {\n    if (e instanceof ArgsParseError) {\n      console.log(\"Illegal argument: %s.\\n%s\", e.message, usage());\n    } else {\n      console.log(e);\n    }\n    return 1;\n  }\n  return 0;\n}\n\n// Helper function to provide correct usage information to the user\nfunction usage(): string {\n  return (\n    `Usage: ${process.argv[0]} ${process.argv[1]} ` +\n    EOL +\n    `[--verbose] [--filter <string>] [--outOfProcessRuntime <path>] [--es5] [--noLazySupport]`\n  );\n}\n\n// NOTE: inheriting from Error does not seem to pass through an instanceof\n// check\nclass ArgsParseError {\n  message: string;\n  constructor(message: string) {\n    this.message = message;\n  }\n}\n\n// Parses through the command line arguments and throws errors if usage is incorrect\nfunction argsParse(): ProgramArgs {\n  let parsedArgs = minimist(process.argv.slice(2), {\n    string: [\"filter\", \"outOfProcessRuntime\"],\n    boolean: [\"debugNames\", \"verbose\", \"es5\"],\n    default: {\n      debugNames: false,\n      verbose: false,\n      es5: false, // if true test marked as es6 only are not run\n      filter: \"\",\n      outOfProcessRuntime: \"\", // if set, assumed to be a JS runtime and is used\n      // to run tests. If not a seperate node context used.\n      lazyObjectsRuntime: LAZY_OBJECTS_RUNTIME_NAME,\n      noLazySupport: false,\n    },\n  });\n  if (typeof parsedArgs.debugNames !== \"boolean\") {\n    throw new ArgsParseError(\"debugNames must be a boolean (either --debugNames or not)\");\n  }\n  if (typeof parsedArgs.verbose !== \"boolean\") {\n    throw new ArgsParseError(\"verbose must be a boolean (either --verbose or not)\");\n  }\n  if (typeof parsedArgs.es5 !== \"boolean\") {\n    throw new ArgsParseError(\"es5 must be a boolean (either --es5 or not)\");\n  }\n  if (typeof parsedArgs.filter !== \"string\") {\n    throw new ArgsParseError(\n      \"filter must be a string (relative path from serialize directory) (--filter abstract/Residual.js)\"\n    );\n  }\n  if (typeof parsedArgs.outOfProcessRuntime !== \"string\") {\n    throw new ArgsParseError(\"outOfProcessRuntime must be path pointing to an javascript runtime\");\n  }\n  if (typeof parsedArgs.lazyObjectsRuntime !== \"string\") {\n    throw new ArgsParseError(\"lazyObjectsRuntime must be a string\");\n  }\n  if (typeof parsedArgs.noLazySupport !== \"boolean\") {\n    throw new ArgsParseError(\"noLazySupport must be a boolean (either --noLazySupport or not)\");\n  }\n  let programArgs = new ProgramArgs(\n    parsedArgs.debugNames,\n    parsedArgs.verbose,\n    parsedArgs.filter,\n    parsedArgs.outOfProcessRuntime,\n    parsedArgs.es5,\n    parsedArgs.lazyObjectsRuntime,\n    parsedArgs.noLazySupport\n  );\n  return programArgs;\n}\n\nmain();\n"]}