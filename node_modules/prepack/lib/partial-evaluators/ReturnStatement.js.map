{"version":3,"sources":["../../src/partial-evaluators/ReturnStatement.js"],"names":["ast","strictCode","env","realm","result","argument","evaluateCompletionDeref","intrinsics","undefined","loc"],"mappings":";;;;;;kBAiBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAK4D;AACzE,MAAIC,eAAJ;AACA,MAAIJ,IAAIK,QAAR,EAAkB;AAChBD,aAASF,IAAII,uBAAJ,CAA4BN,IAAIK,QAAhC,EAA0CJ,UAA1C,CAAT;AACD,GAFD,MAEO;AACLG,aAASD,MAAMI,UAAN,CAAiBC,SAA1B;AACD;AACD,MAAI,EAAEJ,+CAAF,CAAJ,EAA2CA,SAAS,kCAAqBA,MAArB,EAA6BJ,IAAIS,GAAjC,CAAT;AAC3C,SAAO,CAACL,MAAD,EAASJ,GAAT,EAAc,EAAd,CAAP;AACD,C;;AAhBD","file":"ReturnStatement.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeReturnStatement, BabelNodeStatement } from \"babel-types\";\nimport type { Realm } from \"../realm.js\";\nimport type { LexicalEnvironment } from \"../environment.js\";\n\nimport { AbruptCompletion, ReturnCompletion } from \"../completions.js\";\n\nexport default function(\n  ast: BabelNodeReturnStatement,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): [AbruptCompletion, BabelNodeReturnStatement, Array<BabelNodeStatement>] {\n  let result;\n  if (ast.argument) {\n    result = env.evaluateCompletionDeref(ast.argument, strictCode);\n  } else {\n    result = realm.intrinsics.undefined;\n  }\n  if (!(result instanceof AbruptCompletion)) result = new ReturnCompletion(result, ast.loc);\n  return [result, ast, []];\n}\n"]}