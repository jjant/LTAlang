{"version":3,"sources":["../../src/partial-evaluators/BooleanLiteral.js"],"names":["ast","strictCode","env","realm","result","value"],"mappings":";;;;;;kBAiBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKuD;AACpE,MAAIC,SAAS,wBAAiBD,KAAjB,EAAwBH,IAAIK,KAA5B,CAAb;AACA,SAAO,CAACD,MAAD,EAASJ,GAAT,EAAc,EAAd,CAAP;AACD,C;;AAVD","file":"BooleanLiteral.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeBooleanLiteral, BabelNodeStatement } from \"babel-types\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Realm } from \"../realm.js\";\n\nimport { BooleanValue } from \"../values/index.js\";\n\nexport default function(\n  ast: BabelNodeBooleanLiteral,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): [BooleanValue, BabelNodeBooleanLiteral, Array<BabelNodeStatement>] {\n  let result = new BooleanValue(realm, ast.value);\n  return [result, ast, []];\n}\n"]}