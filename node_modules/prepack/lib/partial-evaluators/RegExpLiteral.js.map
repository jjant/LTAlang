{"version":3,"sources":["../../src/partial-evaluators/RegExpLiteral.js"],"names":["ast","strictCode","env","realm","result","pattern","flags","undefined"],"mappings":";;;;;;kBAkBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKqD;AAClE,MAAIC,SAAS,yBACXD,KADW,EAEX,wBAAgBA,KAAhB,EAAuBH,IAAIK,OAA3B,CAFW,EAGXL,IAAIM,KAAJ,GAAY,wBAAgBH,KAAhB,EAAuBH,IAAIM,KAA3B,CAAZ,GAAgDC,SAHrC,CAAb;AAKA,SAAO,CAACH,MAAD,EAASJ,GAAT,EAAc,EAAd,CAAP;AACD,C;;AAfD;;AACA","file":"RegExpLiteral.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeRegExpLiteral, BabelNodeStatement } from \"babel-types\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport type { Realm } from \"../realm.js\";\n\nimport { RegExpCreate } from \"../methods/index.js\";\nimport { ObjectValue, StringValue } from \"../values/index.js\";\n\nexport default function(\n  ast: BabelNodeRegExpLiteral,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): [ObjectValue, BabelNodeRegExpLiteral, Array<BabelNodeStatement>] {\n  let result = RegExpCreate(\n    realm,\n    new StringValue(realm, ast.pattern),\n    ast.flags ? new StringValue(realm, ast.flags) : undefined\n  );\n  return [result, ast, []];\n}\n"]}