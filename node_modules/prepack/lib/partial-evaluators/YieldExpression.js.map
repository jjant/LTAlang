{"version":3,"sources":["../../src/partial-evaluators/YieldExpression.js"],"names":["ast","strictCode","env","realm"],"mappings":";;;;;;kBAiBe,UACbA,GADa,EAEbC,UAFa,EAGbC,GAHa,EAIbC,KAJa,EAKiD;AAC9D,QAAM,uBAAe,uBAAf,CAAN;AACD,C;;AAXD","file":"YieldExpression.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport type { BabelNodeYieldExpression, BabelNodeStatement } from \"babel-types\";\nimport type { LexicalEnvironment } from \"../environment.js\";\nimport { FatalError } from \"../errors.js\";\nimport type { Realm } from \"../realm.js\";\nimport type { Value } from \"../values/index.js\";\n\nexport default function(\n  ast: BabelNodeYieldExpression,\n  strictCode: boolean,\n  env: LexicalEnvironment,\n  realm: Realm\n): [Value, BabelNodeYieldExpression, Array<BabelNodeStatement>] {\n  throw new FatalError(\"TODO: YieldExpression\");\n}\n"]}