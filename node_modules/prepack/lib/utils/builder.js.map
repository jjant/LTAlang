{"version":3,"sources":["../../src/utils/builder.js"],"names":["buildExpressionTemplate","code","template","preludeGenerator","obj","undefined","includes","Object","assign","global","memoizeReference","result","expression"],"mappings":";;;;;kBAgBwBA,uB;;AALxB;;;;AAGA;;;;;;AAdA;;;;;;;;;AAgBe,SAASA,uBAAT,CAAiCC,IAAjC,EAAwG;AACrH,MAAIC,iBAAJ;AACA,SAAO,UAACC,gBAAD;AAAA,WAA+C,UAACC,GAAD,EAAmC;AACvF,UAAIF,aAAaG,SAAjB,EAA4BH,WAAW,6BAAcD,IAAd,CAAX;AAC5B,UAAIE,qBAAqBE,SAArB,IAAkCJ,KAAKK,QAAL,CAAc,QAAd,CAAtC,EACEF,MAAMG,OAAOC,MAAP,CACJ;AACEC,gBAAQN,iBAAiBO,gBAAjB,CAAkC,QAAlC;AADV,OADI,EAIJN,GAJI,CAAN;AAMF,UAAIO,SAAST,SAASE,GAAT,EAAcQ,UAA3B;AACA,+BAAUD,WAAWN,SAArB,EAAgC,4CAA4CJ,IAA5E;AACA,aAAOU,MAAP;AACD,KAZM;AAAA,GAAP;AAaD","file":"builder.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport buildTemplate from \"babel-template\";\nimport type { BabelNodeExpression } from \"babel-types\";\nimport type { PreludeGenerator } from \"./generator.js\";\nimport invariant from \"../invariant.js\";\n\nexport default function buildExpressionTemplate(code: string): (void | PreludeGenerator) => any => BabelNodeExpression {\n  let template;\n  return (preludeGenerator: void | PreludeGenerator) => (obj: any): BabelNodeExpression => {\n    if (template === undefined) template = buildTemplate(code);\n    if (preludeGenerator !== undefined && code.includes(\"global\"))\n      obj = Object.assign(\n        {\n          global: preludeGenerator.memoizeReference(\"global\"),\n        },\n        obj\n      );\n    let result = template(obj).expression;\n    invariant(result !== undefined, \"Code does not represent an expression: \" + code);\n    return result;\n  };\n}\n"]}