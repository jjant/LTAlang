{"version":3,"sources":["../../src/utils/errors.js"],"names":["ignoreErrorsIn","realm","f","savedHandler","errorHandler","err","undefined"],"mappings":";;;;;QAcgBA,c,GAAAA,c;;AAHhB;;AACA;;AAZA;;;;;;;;;AAcO,SAASA,cAAT,CAA2BC,KAA3B,EAAyCC,CAAzC,EAA+D;AACpE,MAAIC,eAAeF,MAAMG,YAAzB;AACAH,QAAMG,YAAN,GAAqB;AAAA,WAAK,SAAL;AAAA,GAArB;AACA,MAAI;AACF,WAAOF,GAAP;AACD,GAFD,CAEE,OAAOG,GAAP,EAAY;AACZ,QAAIA,iCAAJ,EAA+B,OAAOC,SAAP;AAC/B,UAAMD,GAAN;AACD,GALD,SAKU;AACRJ,UAAMG,YAAN,GAAqBD,YAArB;AACD;AACF","file":"errors.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { FatalError } from \"../errors.js\";\nimport { Realm } from \"../realm.js\";\n\nexport function ignoreErrorsIn<T>(realm: Realm, f: () => T): void | T {\n  let savedHandler = realm.errorHandler;\n  realm.errorHandler = d => \"Recover\";\n  try {\n    return f();\n  } catch (err) {\n    if (err instanceof FatalError) return undefined;\n    throw err;\n  } finally {\n    realm.errorHandler = savedHandler;\n  }\n}\n"]}