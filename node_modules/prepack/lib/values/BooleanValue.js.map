{"version":3,"sources":["../../src/values/BooleanValue.js"],"names":["BooleanValue","realm","value","intrinsicName","intrinsics","true","false","x","toString"],"mappings":";;;;;;;;AAWA;;;;;;+eAXA;;;;;;;;;IAcqBA,Y;;;AACnB,wBAAYC,KAAZ,EAA0BC,KAA1B,EAA0CC,aAA1C,EAAkE;AAAA;;AAAA;;AAAA,4HAC1DF,KAD0D,EACnDE,aADmD;;AAEhE,UAAKD,KAAL,GAAaA,KAAb;;AAEA,QAAIA,SAASD,MAAMG,UAAN,CAAiBC,IAA9B,EAAoC,cAAOJ,MAAMG,UAAN,CAAiBC,IAAxB;AACpC,QAAI,CAACH,KAAD,IAAUD,MAAMG,UAAN,CAAiBE,KAA/B,EAAsC,eAAOL,MAAMG,UAAN,CAAiBE,KAAxB;AAL0B;AAMjE;;;;2BAIMC,C,EAAmB;AACxB,aAAOA,aAAaP,YAAb,IAA6B,KAAKE,KAAL,KAAeK,EAAEL,KAArD;AACD;;;8BAEiB;AAChB,aAAO,KAAKA,KAAL,GAAa,iBAAb,GAAiC,gBAAxC;AACD;;;mCAEuB;AACtB,aAAO,CAAC,KAAKA,KAAb;AACD;;;gDAEyC;AACxC,aAAO,IAAP;AACD;;;iCAEqB;AACpB,aAAO,KAAKA,KAAZ;AACD;;;sCAEyB;AACxB,aAAO,KAAKA,KAAL,CAAWM,QAAX,EAAP;AACD;;;;;;kBAjCkBR,Y","file":"BooleanValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { PrimitiveValue, Value } from \"./index.js\";\nimport type { Realm } from \"../realm.js\";\n\nexport default class BooleanValue extends PrimitiveValue {\n  constructor(realm: Realm, value: boolean, intrinsicName?: string) {\n    super(realm, intrinsicName);\n    this.value = value;\n\n    if (value && realm.intrinsics.true) return realm.intrinsics.true;\n    if (!value && realm.intrinsics.false) return realm.intrinsics.false;\n  }\n\n  value: boolean;\n\n  equals(x: Value): boolean {\n    return x instanceof BooleanValue && this.value === x.value;\n  }\n\n  getHash(): number {\n    return this.value ? 12484058682847432 : 3777063795205331;\n  }\n\n  mightBeFalse(): boolean {\n    return !this.value;\n  }\n\n  throwIfNotConcreteBoolean(): BooleanValue {\n    return this;\n  }\n\n  _serialize(): boolean {\n    return this.value;\n  }\n\n  toDisplayString(): string {\n    return this.value.toString();\n  }\n}\n"]}