{"version":3,"sources":["../../src/values/UndefinedValue.js"],"names":["UndefinedValue","undefined","x"],"mappings":";;;;;;;;AAWA;;;;;;+eAXA;;;;;;;;;IAaqBA,c;;;;;;;;;;;iCACN;AACX,aAAOC,SAAP;AACD;;;2BAEMC,C,EAAmB;AACxB,aAAOA,aAAaF,cAAb,IAA+B,EAAEE,8BAAF,CAAtC;AACD;;;8BAEiB;AAChB,aAAO,eAAP;AACD;;;mCAEuB;AACtB,aAAO,IAAP;AACD;;;sCAEyB;AACxB,aAAO,WAAP;AACD;;;;;;kBAnBkBF,c","file":"UndefinedValue.js","sourcesContent":["/**\n * Copyright (c) 2017-present, Facebook, Inc.\n * All rights reserved.\n *\n * This source code is licensed under the BSD-style license found in the\n * LICENSE file in the root directory of this source tree. An additional grant\n * of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/* @flow */\n\nimport { EmptyValue, PrimitiveValue, Value } from \"./index.js\";\n\nexport default class UndefinedValue extends PrimitiveValue {\n  _serialize() {\n    return undefined;\n  }\n\n  equals(x: Value): boolean {\n    return x instanceof UndefinedValue && !(x instanceof EmptyValue);\n  }\n\n  getHash(): number {\n    return 792057514635681;\n  }\n\n  mightBeFalse(): boolean {\n    return true;\n  }\n\n  toDisplayString(): string {\n    return \"undefined\";\n  }\n}\n"]}